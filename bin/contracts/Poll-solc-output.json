{
    "contracts": {
        "/Users/gmussi/git/solidity-voting/contracts/Poll.sol": {
            "Poll": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "contract PollingStation",
                                "name": "_pollingStation",
                                "type": "address"
                            },
                            {
                                "internalType": "string",
                                "name": "_name",
                                "type": "string"
                            },
                            {
                                "internalType": "bytes32[]",
                                "name": "_options",
                                "type": "bytes32[]"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimer",
                                "type": "address"
                            }
                        ],
                        "name": "ClaimerAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimer",
                                "type": "address"
                            }
                        ],
                        "name": "ClaimerRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "oldExpiration",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newExpiration",
                                "type": "uint256"
                            }
                        ],
                        "name": "ExpirationUpdated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "bytes32",
                                "name": "option",
                                "type": "bytes32"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "voteAddr",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "NewVote",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "pollAddr",
                                "type": "address"
                            }
                        ],
                        "name": "PollClosed",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "voteAddr",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "price",
                                "type": "uint256"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "VoteForSale",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "voteAddr",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "VoteNotForSale",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "voteAddr",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "seller",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            }
                        ],
                        "name": "VoteOwnershipChanged",
                        "type": "event"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_claimer",
                                "type": "address"
                            }
                        ],
                        "name": "addClaimer",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address payable",
                                "name": "_voteAddr",
                                "type": "address"
                            }
                        ],
                        "name": "buysVote",
                        "outputs": [],
                        "payable": true,
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "claim",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "closePoll",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "closed",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "debugnow",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_voteAddr",
                                "type": "address"
                            },
                            {
                                "internalType": "address payable",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "delegateVote",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getExpirationTime",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getOptions",
                        "outputs": [
                            {
                                "internalType": "bytes32[]",
                                "name": "",
                                "type": "bytes32[]"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_voter",
                                "type": "address"
                            }
                        ],
                        "name": "getVote",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getVoteCount",
                        "outputs": [
                            {
                                "internalType": "uint256[]",
                                "name": "",
                                "type": "uint256[]"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "isClaimable",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_claimer",
                                "type": "address"
                            }
                        ],
                        "name": "isClaimer",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "isOwner",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "name",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "options",
                        "outputs": [
                            {
                                "internalType": "bytes32",
                                "name": "",
                                "type": "bytes32"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "read",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_claimer",
                                "type": "address"
                            }
                        ],
                        "name": "removeClaimer",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "renounceOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_voteAddr",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "price",
                                "type": "uint256"
                            }
                        ],
                        "name": "sellVote",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_expirationTime",
                                "type": "uint256"
                            }
                        ],
                        "name": "setExpirationTime",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_voteAddr",
                                "type": "address"
                            }
                        ],
                        "name": "stopSelling",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_optionIndex",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "_voteAddr",
                                "type": "address"
                            }
                        ],
                        "name": "vote",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "voteCounts",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "methods": {
                        "addClaimer(address)": {
                            "params": {
                                "_claimer": "address of the claimer to be added"
                            }
                        },
                        "buysVote(address)": {
                            "details": "This method only works if the vote has not been used AND is for sale ",
                            "params": {
                                "_voteAddr": "the address of the seller whose vote is intended to buy"
                            }
                        },
                        "delegateVote(address,address)": {
                            "params": {
                                "_newOwner": "address of the new owner of this vote",
                                "_voteAddr": "the vote to be delegated, usually same as msg.sender"
                            }
                        },
                        "getExpirationTime()": {
                            "return": "uint with the expiration time"
                        },
                        "isClaimable()": {
                            "details": "The contract is claimable when the 3 results are true.",
                            "return": "bool: is a claimer, bool: is expired, bool: is not owner"
                        },
                        "isClaimer(address)": {
                            "params": {
                                "_claimer": "address to verify"
                            },
                            "return": "true if the caller has been added as claimer, false, otherwise"
                        },
                        "isOwner()": {
                            "return": "true if `msg.sender` is the owner of the contract."
                        },
                        "owner()": {
                            "return": "the address of the owner."
                        },
                        "read()": {
                            "return": "(address: owner of this contract, uint: the expiration date, bool: is caller a claimers?)"
                        },
                        "removeClaimer(address)": {
                            "params": {
                                "_claimer": "address of the claimer to be removed"
                            }
                        },
                        "renounceOwnership()": {
                            "details": "Allows the current owner to relinquish control of the contract."
                        },
                        "sellVote(address,uint256)": {
                            "params": {
                                "_voteAddr": "The vote to be put for sale. Msg.owner must own this vote.      "
                            }
                        },
                        "setExpirationTime(uint256)": {
                            "params": {
                                "_expirationTime": "the new expiration time for this contract"
                            }
                        },
                        "stopSelling(address)": {
                            "params": {
                                "_voteAddr": "The vote address currently for sale"
                            }
                        },
                        "transferOwnership(address)": {
                            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                            "params": {
                                "newOwner": "The address to transfer ownership to."
                            }
                        },
                        "vote(uint256,address)": {
                            "details": "Refer to `options` property  ",
                            "params": {
                                "_optionIndex": "a bytes32 representing the option to vote.",
                                "_voteAddr": "address of the voter this vote refers to. Message sender must own that right"
                            }
                        }
                    }
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "60806040523480156200001157600080fd5b50604051620015e0380380620015e0833981810160405260608110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011157600080fd5b9083019060208201858111156200012757600080fd5b82518660208202830111640100000000821117156200014557600080fd5b82525081516020918201928201910280838360005b83811015620001745781810151838201526020016200015a565b50505050919091016040819052600080546001600160a01b03191633178082556001600160a01b0316955093507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09250839150a36000815111620001d757600080fd5b600380546001600160a01b0319166001600160a01b03851617905581516200020790600490602085019062000286565b5060005b81518110156200027c5760058282815181106200022457fe5b602090810291909101810151825460018181018555600094855292842001556006805480830182559083527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0191909155016200020b565b505050506200032b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002c957805160ff1916838001178555620002f9565b82800160010185558215620002f9579182015b82811115620002f9578251825591602001919060010190620002dc565b50620003079291506200030b565b5090565b6200032891905b8082111562000307576000815560010162000312565b90565b6112a5806200033b6000396000f3fe6080604052600436106101815760003560e01c80638da5cb5b116100d1578063e1aa071c1161008a578063e7b3387c11610064578063e7b3387c14610610578063ed8c2aed14610625578063f0490b8a1461063a578063f2fde38b1461066d57610181565b8063e1aa071c146105ab578063e23a845a146105c0578063e5ed5b1e146105d557610181565b80638da5cb5b1461047d5780638f32d59b146104ae578063b4545a87146104c3578063c0cc365d146104f6578063cc2ee19614610520578063df1edbe81461058557610181565b80634e71d92d1161013e578063709c927611610118578063709c927614610394578063715018a6146103cd57806374478bb3146103e25780638d337b811461041957610181565b80634e71d92d1461032b57806357de26a414610340578063597e1fb51461037f57610181565b806302d947ef1461018657806306fdde03146101c157806310a8aecd1461024b5780632ea66401146102925780633c3a220d146102c5578063409e220514610301575b600080fd5b34801561019257600080fd5b506101bf600480360360408110156101a957600080fd5b50803590602001356001600160a01b03166106a0565b005b3480156101cd57600080fd5b506101d66107cf565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102105781810151838201526020016101f8565b50505050905090810190601f16801561023d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025757600080fd5b5061027e6004803603602081101561026e57600080fd5b50356001600160a01b031661085d565b604080519115158252519081900360200190f35b34801561029e57600080fd5b506101bf600480360360208110156102b557600080fd5b50356001600160a01b031661087b565b3480156102d157600080fd5b506102ef600480360360208110156102e857600080fd5b5035610901565b60408051918252519081900360200190f35b34801561030d57600080fd5b506102ef6004803603602081101561032457600080fd5b503561091f565b34801561033757600080fd5b506101bf61092c565b34801561034c57600080fd5b50610355610969565b604080516001600160a01b0390941684526020840192909252151582820152519081900360600190f35b34801561038b57600080fd5b5061027e61098d565b3480156103a057600080fd5b506101bf600480360360408110156103b757600080fd5b506001600160a01b038135169060200135610996565b3480156103d957600080fd5b506101bf610ae8565b3480156103ee57600080fd5b506103f7610b43565b6040805193151584529115156020840152151582820152519081900360600190f35b34801561042557600080fd5b5061044c6004803603602081101561043c57600080fd5b50356001600160a01b0316610b6a565b6040805194151585529215156020850152838301919091526001600160a01b03166060830152519081900360800190f35b34801561048957600080fd5b50610492610ba2565b604080516001600160a01b039092168252519081900360200190f35b3480156104ba57600080fd5b5061027e610bb1565b3480156104cf57600080fd5b506101bf600480360360208110156104e657600080fd5b50356001600160a01b0316610bc2565b34801561050257600080fd5b506101bf6004803603602081101561051957600080fd5b5035610ce7565b34801561052c57600080fd5b50610535610d3f565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610571578181015183820152602001610559565b505050509050019250505060405180910390f35b6101bf6004803603602081101561059b57600080fd5b50356001600160a01b0316610d97565b3480156105b757600080fd5b506102ef610f4c565b3480156105cc57600080fd5b506102ef610f50565b3480156105e157600080fd5b506101bf600480360360408110156105f857600080fd5b506001600160a01b0381358116916020013516610f56565b34801561061c57600080fd5b50610535611051565b34801561063157600080fd5b506101bf6110a7565b34801561064657600080fd5b506101bf6004803603602081101561065d57600080fd5b50356001600160a01b0316611166565b34801561067957600080fd5b506101bf6004803603602081101561069057600080fd5b50356001600160a01b03166111e5565b6001600160a01b038116600090815260076020526040902054819060ff16156106c857600080fd5b6001600160a01b038083166000908152600760205260409020600201548391161580156106fd57506001600160a01b03811633145b8061072457506001600160a01b038181166000908152600760205260409020600201541633145b61072d57600080fd5b60085460ff161561073d57600080fd5b6006848154811061074a57fe5b60009182526020808320909101805460019081019091556001600160a01b03861680845260079092526040909220805460ff191690921790915560058054339291908790811061079657fe5b600091825260208220015460405190917f49800724769cfeab686bbed287515c62b0780b3ca377ad4dc33a74a2b84ea8a591a450505050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108555780601f1061082a57610100808354040283529160200191610855565b820191906000526020600020905b81548152906001019060200180831161083857829003601f168201915b505050505081565b6001600160a01b031660009081526001602052604090205460ff1690565b610883610bb1565b61088c57600080fd5b6001600160a01b03811660009081526001602052604090205460ff16156108b257600080fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fff9a8f4e0a39755c20c899b46171e470382709479fce2aa1e388f95edfe017399190a250565b6006818154811061090e57fe5b600091825260209091200154905081565b6005818154811061090e57fe5b6109353361085d565b61093e57600080fd5b600254421161094c57600080fd5b610954610bb1565b1561095e57600080fd5b61096733611202565b565b6000806000610976610ba2565b6002546109823361085d565b925092509250909192565b60085460ff1681565b6001600160a01b038216600090815260076020526040902054829060ff16156109be57600080fd5b6001600160a01b038084166000908152600760205260409020600201548491161580156109f357506001600160a01b03811633145b80610a1a57506001600160a01b038181166000908152600760205260409020600201541633145b610a2357600080fd5b60085460ff1615610a3357600080fd5b60008311610a88576040805162461bcd60e51b815260206004820152601b60248201527f5072696365206d75737420626520686967686572207468616e20300000000000604482015290519081900360640190fd5b6001600160a01b03841660008181526007602052604080822060018101879055805461ff00191661010017815590519092339287927f5bd9c8cd0416570878f22361aa825b83e275af1f5ad3af2e353e1f498405b0089190a45050505050565b610af0610bb1565b610af957600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000806000610b513361085d565b6002544211610b5e610bb1565b15925092509250909192565b6001600160a01b0390811660009081526007602052604090208054600182015460029092015460ff8083169561010090930416931690565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6001600160a01b038116600090815260076020526040902054819060ff1615610bea57600080fd5b6001600160a01b03808316600090815260076020526040902060020154839116158015610c1f57506001600160a01b03811633145b80610c4657506001600160a01b038181166000908152600760205260409020600201541633145b610c4f57600080fd5b6001600160a01b0383166000908152600760205260409020548390610100900460ff16610c7b57600080fd5b60085460ff1615610c8b57600080fd5b6001600160a01b03841660008181526007602052604080822060018101839055805461ff001916815590519092339290917f65b12a532dda3308398d0ea60c768a0bf2509db55bf7f257c1087b14cfd3cfef9190a35050505050565b610cef610bb1565b610cf857600080fd5b6002805490829055604080518281526020810184905281517f48bd2ad49200e0ca36b95736b1b720e3a4db1eb87715905a0242d11e90fcf176929181900390910190a15050565b60606005805480602002602001604051908101604052809291908181526020018280548015610d8d57602002820191906000526020600020905b815481526020019060010190808311610d79575b5050505050905090565b6001600160a01b038116600090815260076020526040902054819060ff1615610dbf57600080fd5b6001600160a01b0382166000908152600760205260409020548290610100900460ff16610deb57600080fd5b60085460ff1615610dfb57600080fd5b6001600160a01b0380841660009081526007602052604090206002810154600182015491921690341015610e76576040805162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f7567682066756e6473207472616e7366657272656400000000604482015290519081900360640190fd5b600182015460405134829003916001600160a01b0384169181156108fc0291906000818181858888f19350505050158015610eb5573d6000803e3d6000fd5b508015610eeb57604051339082156108fc029083906000818181858888f19350505050158015610ee9573d6000803e3d6000fd5b505b825461ff00191683556002830180546001600160a01b031916339081179091556040516001600160a01b0384811691908916907fb294c26ec0b075ccd4d6ae733f6661019eab6c771ba5eec5ce6ac6513ab0388690600090a4505050505050565b4290565b60025490565b6001600160a01b038216600090815260076020526040902054829060ff1615610f7e57600080fd5b6001600160a01b03808416600090815260076020526040902060020154849116158015610fb357506001600160a01b03811633145b80610fda57506001600160a01b038181166000908152600760205260409020600201541633145b610fe357600080fd5b60085460ff1615610ff357600080fd5b6001600160a01b0384811660008181526007602052604080822060020180546001600160a01b0319169488169485179055513392917fb294c26ec0b075ccd4d6ae733f6661019eab6c771ba5eec5ce6ac6513ab0388691a450505050565b60606006805480602002602001604051908101604052809291908181526020018280548015610d8d5760200282019190600052602060002090815481526020019060010190808311610d79575050505050905090565b60085460ff16156110b757600080fd5b6110bf610bb1565b6110c857600080fd5b6008805460ff191660011790556003546040805163af9da81f60e01b815230600482015290516001600160a01b039092169163af9da81f9160248082019260009290919082900301818387803b15801561112157600080fd5b505af1158015611135573d6000803e3d6000fd5b50506040513092507f231ba46a9796cfff3206eb206f870c5e4f68248af093e30cf9e3dd48857a6e669150600090a2565b61116e610bb1565b61117757600080fd5b6001600160a01b03811660009081526001602052604090205460ff1661119c57600080fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30acaa541089592567cd4ce36437c68778a43e66dc1a9e7031e4496faf4593259190a250565b6111ed610bb1565b6111f657600080fd5b6111ff81611202565b50565b6001600160a01b03811661121557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820c013e911c59939572fd8cfdf20eaba6c90118a91fb2fa3a0fc234bc240ae173b64736f6c63430005110032",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15E0 CODESIZE SUB DUP1 PUSH3 0x15E0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xBF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x174 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x15A JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 POP SWAP4 POP PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP3 POP DUP4 SWAP2 POP LOG3 PUSH1 0x0 DUP2 MLOAD GT PUSH3 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE DUP2 MLOAD PUSH3 0x207 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x286 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x27C JUMPI PUSH1 0x5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x224 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP3 DUP5 KECCAK256 ADD SSTORE PUSH1 0x6 DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP2 SWAP1 SWAP2 SSTORE ADD PUSH3 0x20B JUMP JUMPDEST POP POP POP POP PUSH3 0x32B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2C9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2F9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2F9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2F9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2DC JUMP JUMPDEST POP PUSH3 0x307 SWAP3 SWAP2 POP PUSH3 0x30B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x328 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x307 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x312 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12A5 DUP1 PUSH3 0x33B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xE1AA071C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE7B3387C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE7B3387C EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xED8C2AED EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xF0490B8A EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66D JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xE1AA071C EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xE23A845A EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xE5ED5B1E EQ PUSH2 0x5D5 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xB4545A87 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xC0CC365D EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xCC2EE196 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xDF1EDBE8 EQ PUSH2 0x585 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x709C9276 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x709C9276 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8D337B81 EQ PUSH2 0x419 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x597E1FB5 EQ PUSH2 0x37F JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x2D947EF EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x10A8AECD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x2EA66401 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x3C3A220D EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x409E2205 EQ PUSH2 0x301 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x210 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x92C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x98D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x996 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0xAE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0xBB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x571 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x559 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xF4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xF56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0x1051 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x10A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x6FD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0x724 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0x72D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD CALLER SWAP3 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x796 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x49800724769CFEAB686BBED287515C62B0780B3CA377AD4DC33A74A2B84EA8A5 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x855 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x855 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x838 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x883 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xFF9A8F4E0A39755C20C899B46171E470382709479FCE2AA1E388F95EDFE01739 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI INVALID JUMPDEST PUSH2 0x935 CALLER PUSH2 0x85D JUMP JUMPDEST PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x954 PUSH2 0xBB1 JUMP JUMPDEST ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x967 CALLER PUSH2 0x1202 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x976 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x982 CALLER PUSH2 0x85D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xA1A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA88 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D75737420626520686967686572207468616E20300000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP8 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 CALLER SWAP3 DUP8 SWAP3 PUSH32 0x5BD9C8CD0416570878F22361AA825B83E275AF1F5AD3AF2E353E1F498405B008 SWAP2 SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAF0 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xAF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB51 CALLER PUSH2 0x85D JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0xB5E PUSH2 0xBB1 JUMP JUMPDEST ISZERO SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP6 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP4 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0xC1F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xC46 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x65B12A532DDA3308398D0EA60C768A0BF2509DB55BF7F257C1087B14CFD3CFEF SWAP2 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCEF PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x48BD2AD49200E0CA36B95736B1B720E3A4DB1EB87715905A0242D11E90FCF176 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD79 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP3 AND SWAP1 CALLVALUE LT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E6473207472616E7366657272656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD CALLVALUE DUP3 SWAP1 SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 ISZERO PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP3 SLOAD PUSH2 0xFF00 NOT AND DUP4 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP10 AND SWAP1 PUSH32 0xB294C26EC0B075CCD4D6AE733F6661019EAB6C771BA5EEC5CE6AC6513AB03886 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xF7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xFDA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP9 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0xB294C26EC0B075CCD4D6AE733F6661019EAB6C771BA5EEC5CE6AC6513AB03886 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD79 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BF PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xAF9DA81F PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xAF9DA81F SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1135 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD ADDRESS SWAP3 POP PUSH32 0x231BA46A9796CFFF3206EB206F870C5E4F68248AF093E30CF9E3DD48857A6E66 SWAP2 POP PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x116E PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x30ACAA541089592567CD4CE36437C68778A43E66DC1A9E7031E4496FAF459325 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x11ED PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11FF DUP2 PUSH2 0x1202 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC0 SGT 0xE9 GT 0xC5 SWAP10 CODECOPY JUMPI 0x2F 0xD8 0xCF 0xDF KECCAK256 0xEA 0xBA PUSH13 0x90118A91FB2FA3A0FC234BC240 0xAE OR EXTCODESIZE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
                        "sourceMap": "454:6251:0:-;;;1834:344;8:9:-1;5:2;;;30:1;27;20:12;5:2;1834:344:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1834:344:0;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1834:344:0;;420:4:-1;411:14;;;;1834:344:0;;;;;411:14:-1;1834:344:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1834:344:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;1834:344:0;;421:4:-1;412:14;;;;1834:344:0;;;;;412:14:-1;1834:344:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;-1:-1;;;;1834:344:0;;;;;;;;524:6:3;:19;;-1:-1:-1;;;;;;524:19:3;533:10;524:19;;;;-1:-1:-1;;;;;588:6:3;;-1:-1:-1;524:6:3;-1:-1:-1;555:40:3;;-1:-1:-1;524:6:3;;-1:-1:-1;555:40:3;1969:1:0;1951:8;:15;:19;1943:28;;;;;;1982:14;:32;;-1:-1:-1;;;;;;1982:32:0;-1:-1:-1;;;;;1982:32:0;;;;;2025:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;2052:6:0;2047:125;2068:8;:15;2064:1;:19;2047:125;;;2104:7;2117:8;2126:1;2117:11;;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;2104:25:0;;;;;;;;2143:10;27::-1;;23:18;;;45:23;;2143:18:0;;;;;;;;;2085:3;2047:125;;;;1834:344;;;454:6251;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;454:6251:0;;;-1:-1:-1;454:6251:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
                    },
                    "deployedBytecode": {
                        "linkReferences": {},
                        "object": "6080604052600436106101815760003560e01c80638da5cb5b116100d1578063e1aa071c1161008a578063e7b3387c11610064578063e7b3387c14610610578063ed8c2aed14610625578063f0490b8a1461063a578063f2fde38b1461066d57610181565b8063e1aa071c146105ab578063e23a845a146105c0578063e5ed5b1e146105d557610181565b80638da5cb5b1461047d5780638f32d59b146104ae578063b4545a87146104c3578063c0cc365d146104f6578063cc2ee19614610520578063df1edbe81461058557610181565b80634e71d92d1161013e578063709c927611610118578063709c927614610394578063715018a6146103cd57806374478bb3146103e25780638d337b811461041957610181565b80634e71d92d1461032b57806357de26a414610340578063597e1fb51461037f57610181565b806302d947ef1461018657806306fdde03146101c157806310a8aecd1461024b5780632ea66401146102925780633c3a220d146102c5578063409e220514610301575b600080fd5b34801561019257600080fd5b506101bf600480360360408110156101a957600080fd5b50803590602001356001600160a01b03166106a0565b005b3480156101cd57600080fd5b506101d66107cf565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102105781810151838201526020016101f8565b50505050905090810190601f16801561023d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025757600080fd5b5061027e6004803603602081101561026e57600080fd5b50356001600160a01b031661085d565b604080519115158252519081900360200190f35b34801561029e57600080fd5b506101bf600480360360208110156102b557600080fd5b50356001600160a01b031661087b565b3480156102d157600080fd5b506102ef600480360360208110156102e857600080fd5b5035610901565b60408051918252519081900360200190f35b34801561030d57600080fd5b506102ef6004803603602081101561032457600080fd5b503561091f565b34801561033757600080fd5b506101bf61092c565b34801561034c57600080fd5b50610355610969565b604080516001600160a01b0390941684526020840192909252151582820152519081900360600190f35b34801561038b57600080fd5b5061027e61098d565b3480156103a057600080fd5b506101bf600480360360408110156103b757600080fd5b506001600160a01b038135169060200135610996565b3480156103d957600080fd5b506101bf610ae8565b3480156103ee57600080fd5b506103f7610b43565b6040805193151584529115156020840152151582820152519081900360600190f35b34801561042557600080fd5b5061044c6004803603602081101561043c57600080fd5b50356001600160a01b0316610b6a565b6040805194151585529215156020850152838301919091526001600160a01b03166060830152519081900360800190f35b34801561048957600080fd5b50610492610ba2565b604080516001600160a01b039092168252519081900360200190f35b3480156104ba57600080fd5b5061027e610bb1565b3480156104cf57600080fd5b506101bf600480360360208110156104e657600080fd5b50356001600160a01b0316610bc2565b34801561050257600080fd5b506101bf6004803603602081101561051957600080fd5b5035610ce7565b34801561052c57600080fd5b50610535610d3f565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610571578181015183820152602001610559565b505050509050019250505060405180910390f35b6101bf6004803603602081101561059b57600080fd5b50356001600160a01b0316610d97565b3480156105b757600080fd5b506102ef610f4c565b3480156105cc57600080fd5b506102ef610f50565b3480156105e157600080fd5b506101bf600480360360408110156105f857600080fd5b506001600160a01b0381358116916020013516610f56565b34801561061c57600080fd5b50610535611051565b34801561063157600080fd5b506101bf6110a7565b34801561064657600080fd5b506101bf6004803603602081101561065d57600080fd5b50356001600160a01b0316611166565b34801561067957600080fd5b506101bf6004803603602081101561069057600080fd5b50356001600160a01b03166111e5565b6001600160a01b038116600090815260076020526040902054819060ff16156106c857600080fd5b6001600160a01b038083166000908152600760205260409020600201548391161580156106fd57506001600160a01b03811633145b8061072457506001600160a01b038181166000908152600760205260409020600201541633145b61072d57600080fd5b60085460ff161561073d57600080fd5b6006848154811061074a57fe5b60009182526020808320909101805460019081019091556001600160a01b03861680845260079092526040909220805460ff191690921790915560058054339291908790811061079657fe5b600091825260208220015460405190917f49800724769cfeab686bbed287515c62b0780b3ca377ad4dc33a74a2b84ea8a591a450505050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108555780601f1061082a57610100808354040283529160200191610855565b820191906000526020600020905b81548152906001019060200180831161083857829003601f168201915b505050505081565b6001600160a01b031660009081526001602052604090205460ff1690565b610883610bb1565b61088c57600080fd5b6001600160a01b03811660009081526001602052604090205460ff16156108b257600080fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fff9a8f4e0a39755c20c899b46171e470382709479fce2aa1e388f95edfe017399190a250565b6006818154811061090e57fe5b600091825260209091200154905081565b6005818154811061090e57fe5b6109353361085d565b61093e57600080fd5b600254421161094c57600080fd5b610954610bb1565b1561095e57600080fd5b61096733611202565b565b6000806000610976610ba2565b6002546109823361085d565b925092509250909192565b60085460ff1681565b6001600160a01b038216600090815260076020526040902054829060ff16156109be57600080fd5b6001600160a01b038084166000908152600760205260409020600201548491161580156109f357506001600160a01b03811633145b80610a1a57506001600160a01b038181166000908152600760205260409020600201541633145b610a2357600080fd5b60085460ff1615610a3357600080fd5b60008311610a88576040805162461bcd60e51b815260206004820152601b60248201527f5072696365206d75737420626520686967686572207468616e20300000000000604482015290519081900360640190fd5b6001600160a01b03841660008181526007602052604080822060018101879055805461ff00191661010017815590519092339287927f5bd9c8cd0416570878f22361aa825b83e275af1f5ad3af2e353e1f498405b0089190a45050505050565b610af0610bb1565b610af957600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000806000610b513361085d565b6002544211610b5e610bb1565b15925092509250909192565b6001600160a01b0390811660009081526007602052604090208054600182015460029092015460ff8083169561010090930416931690565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6001600160a01b038116600090815260076020526040902054819060ff1615610bea57600080fd5b6001600160a01b03808316600090815260076020526040902060020154839116158015610c1f57506001600160a01b03811633145b80610c4657506001600160a01b038181166000908152600760205260409020600201541633145b610c4f57600080fd5b6001600160a01b0383166000908152600760205260409020548390610100900460ff16610c7b57600080fd5b60085460ff1615610c8b57600080fd5b6001600160a01b03841660008181526007602052604080822060018101839055805461ff001916815590519092339290917f65b12a532dda3308398d0ea60c768a0bf2509db55bf7f257c1087b14cfd3cfef9190a35050505050565b610cef610bb1565b610cf857600080fd5b6002805490829055604080518281526020810184905281517f48bd2ad49200e0ca36b95736b1b720e3a4db1eb87715905a0242d11e90fcf176929181900390910190a15050565b60606005805480602002602001604051908101604052809291908181526020018280548015610d8d57602002820191906000526020600020905b815481526020019060010190808311610d79575b5050505050905090565b6001600160a01b038116600090815260076020526040902054819060ff1615610dbf57600080fd5b6001600160a01b0382166000908152600760205260409020548290610100900460ff16610deb57600080fd5b60085460ff1615610dfb57600080fd5b6001600160a01b0380841660009081526007602052604090206002810154600182015491921690341015610e76576040805162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f7567682066756e6473207472616e7366657272656400000000604482015290519081900360640190fd5b600182015460405134829003916001600160a01b0384169181156108fc0291906000818181858888f19350505050158015610eb5573d6000803e3d6000fd5b508015610eeb57604051339082156108fc029083906000818181858888f19350505050158015610ee9573d6000803e3d6000fd5b505b825461ff00191683556002830180546001600160a01b031916339081179091556040516001600160a01b0384811691908916907fb294c26ec0b075ccd4d6ae733f6661019eab6c771ba5eec5ce6ac6513ab0388690600090a4505050505050565b4290565b60025490565b6001600160a01b038216600090815260076020526040902054829060ff1615610f7e57600080fd5b6001600160a01b03808416600090815260076020526040902060020154849116158015610fb357506001600160a01b03811633145b80610fda57506001600160a01b038181166000908152600760205260409020600201541633145b610fe357600080fd5b60085460ff1615610ff357600080fd5b6001600160a01b0384811660008181526007602052604080822060020180546001600160a01b0319169488169485179055513392917fb294c26ec0b075ccd4d6ae733f6661019eab6c771ba5eec5ce6ac6513ab0388691a450505050565b60606006805480602002602001604051908101604052809291908181526020018280548015610d8d5760200282019190600052602060002090815481526020019060010190808311610d79575050505050905090565b60085460ff16156110b757600080fd5b6110bf610bb1565b6110c857600080fd5b6008805460ff191660011790556003546040805163af9da81f60e01b815230600482015290516001600160a01b039092169163af9da81f9160248082019260009290919082900301818387803b15801561112157600080fd5b505af1158015611135573d6000803e3d6000fd5b50506040513092507f231ba46a9796cfff3206eb206f870c5e4f68248af093e30cf9e3dd48857a6e669150600090a2565b61116e610bb1565b61117757600080fd5b6001600160a01b03811660009081526001602052604090205460ff1661119c57600080fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30acaa541089592567cd4ce36437c68778a43e66dc1a9e7031e4496faf4593259190a250565b6111ed610bb1565b6111f657600080fd5b6111ff81611202565b50565b6001600160a01b03811661121557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820c013e911c59939572fd8cfdf20eaba6c90118a91fb2fa3a0fc234bc240ae173b64736f6c63430005110032",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xE1AA071C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE7B3387C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE7B3387C EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xED8C2AED EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xF0490B8A EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66D JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xE1AA071C EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xE23A845A EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xE5ED5B1E EQ PUSH2 0x5D5 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xB4545A87 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xC0CC365D EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xCC2EE196 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xDF1EDBE8 EQ PUSH2 0x585 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x709C9276 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x709C9276 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8D337B81 EQ PUSH2 0x419 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x597E1FB5 EQ PUSH2 0x37F JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x2D947EF EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x10A8AECD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x2EA66401 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x3C3A220D EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x409E2205 EQ PUSH2 0x301 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x210 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x92C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x98D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x996 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0xAE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0xBB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x571 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x559 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xF4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xF56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0x1051 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x10A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x6FD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0x724 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0x72D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD CALLER SWAP3 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x796 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x49800724769CFEAB686BBED287515C62B0780B3CA377AD4DC33A74A2B84EA8A5 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x855 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x855 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x838 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x883 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xFF9A8F4E0A39755C20C899B46171E470382709479FCE2AA1E388F95EDFE01739 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI INVALID JUMPDEST PUSH2 0x935 CALLER PUSH2 0x85D JUMP JUMPDEST PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x954 PUSH2 0xBB1 JUMP JUMPDEST ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x967 CALLER PUSH2 0x1202 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x976 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x982 CALLER PUSH2 0x85D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xA1A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA88 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D75737420626520686967686572207468616E20300000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP8 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 CALLER SWAP3 DUP8 SWAP3 PUSH32 0x5BD9C8CD0416570878F22361AA825B83E275AF1F5AD3AF2E353E1F498405B008 SWAP2 SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAF0 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xAF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB51 CALLER PUSH2 0x85D JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0xB5E PUSH2 0xBB1 JUMP JUMPDEST ISZERO SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP6 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP4 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0xC1F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xC46 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x65B12A532DDA3308398D0EA60C768A0BF2509DB55BF7F257C1087B14CFD3CFEF SWAP2 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCEF PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x48BD2AD49200E0CA36B95736B1B720E3A4DB1EB87715905A0242D11E90FCF176 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD79 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP3 AND SWAP1 CALLVALUE LT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E6473207472616E7366657272656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD CALLVALUE DUP3 SWAP1 SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 ISZERO PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP3 SLOAD PUSH2 0xFF00 NOT AND DUP4 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP10 AND SWAP1 PUSH32 0xB294C26EC0B075CCD4D6AE733F6661019EAB6C771BA5EEC5CE6AC6513AB03886 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xF7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xFDA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP9 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0xB294C26EC0B075CCD4D6AE733F6661019EAB6C771BA5EEC5CE6AC6513AB03886 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD79 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BF PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xAF9DA81F PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xAF9DA81F SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1135 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD ADDRESS SWAP3 POP PUSH32 0x231BA46A9796CFFF3206EB206F870C5E4F68248AF093E30CF9E3DD48857A6E66 SWAP2 POP PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x116E PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x30ACAA541089592567CD4CE36437C68778A43E66DC1A9E7031E4496FAF459325 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x11ED PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11FF DUP2 PUSH2 0x1202 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC0 SGT 0xE9 GT 0xC5 SWAP10 CODECOPY JUMPI 0x2F 0xD8 0xCF 0xDF KECCAK256 0xEA 0xBA PUSH13 0x90118A91FB2FA3A0FC234BC240 0xAE OR EXTCODESIZE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
                        "sourceMap": "454:6251:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2641:258;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2641:258:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2641:258:0;;;;;;-1:-1:-1;;;;;2641:258:0;;:::i;:::-;;648:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;648:18:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;648:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:108:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1980:108:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1980:108:2;-1:-1:-1;;;;;1980:108:2;;:::i;:::-;;;;;;;;;;;;;;;;;;1168:227;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1168:227:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1168:227:2;-1:-1:-1;;;;;1168:227:2;;:::i;777:24:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;777:24:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;777:24:0;;:::i;:::-;;;;;;;;;;;;;;;;715;;8:9:-1;5:2;;;30:1;27;20:12;5:2;715:24:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;715:24:0;;:::i;2945:192:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2945:192:2;;;:::i;3780:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3780:132:2;;;:::i;:::-;;;;-1:-1:-1;;;;;3780:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;920:18:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;920:18:0;;;:::i;3064:335::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3064:335:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3064:335:0;;-1:-1:-1;;;;;3064:335:0;;;;;;:::i;1309:130:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1309:130:3;;;:::i;3393:145:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3393:145:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6501:201:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6501:201:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6501:201:0;-1:-1:-1;;;;;6501:201:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6501:201:0;;;;;;;;;;;;;;659:72:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:72:3;;;:::i;:::-;;;;-1:-1:-1;;;;;659:72:3;;;;;;;;;;;;;;957:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;957:85:3;;;:::i;3530:278:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3530:278:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3530:278:0;-1:-1:-1;;;;;3530:278:0;;:::i;2287:232:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2287:232:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2287:232:2;;:::i;6304:92:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6304:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6304:92:0;;;;;;;;;;;;;;;;;4122:665;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4122:665:0;-1:-1:-1;;;;;4122:665:0;;:::i;3920:76:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3920:76:2;;;:::i;2661:96::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2661:96:2;;;:::i;4989:245:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4989:245:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4989:245:0;;;;;;;;;;:::i;6402:93::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6402:93:0;;;:::i;5340:160::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5340:160:0;;;:::i;1534:213:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1534:213:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1534:213:2;-1:-1:-1;;;;;1534:213:2;;:::i;1603:103:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1603:103:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1603:103:3;-1:-1:-1;;;;;1603:103:3;;:::i;2641:258:0:-;-1:-1:-1;;;;;5818:13:0;;;;;;:5;:13;;;;;:18;:13;;:18;;5817:19;5809:28;;;;;;-1:-1:-1;;;;;6013:13:0;;;6044:1;6013:13;;;:5;:13;;;;;:19;;;:13;;:19;:33;:57;;;;-1:-1:-1;6060:10:0;-1:-1:-1;;;;;6050:20:0;;;6013:57;6012:96;;;-1:-1:-1;;;;;;6075:13:0;;;;;;;:5;:13;;;;;:19;;;;6098:10;6075:33;6012:96;6004:105;;;;;;5628:6;;;;5627:7;5619:16;;;;;;2759:10;2770:12;2759:24;;;;;;;;;;;;;;;;;;;;:26;;;;;;;;;-1:-1:-1;;;;;2795:16:0;;;;;:5;:16;;;;;;;:28;;-1:-1:-1;;2795:28:0;;;;;;;2847:7;:21;;2881:10;;2795:16;2847:7;2855:12;;2847:21;;;;;;;;;;;;;;;2839:53;;2847:21;;2839:53;;;5847:1;2641:258;;;:::o;648:18::-;;;;;;;;;;;;;;;-1:-1:-1;;648:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1980:108:2:-;-1:-1:-1;;;;;2062:18:2;2038:4;2062:18;;;-1:-1:-1;2062:18:2;;;;;;;;;1980:108::o;1168:227::-;850:9:3;:7;:9::i;:::-;842:18;;;;;;-1:-1:-1;;;;;1244:18:2;;;;;;-1:-1:-1;1244:18:2;;;;;;;;1242:20;1234:30;;;;;;-1:-1:-1;;;;;1323:18:2;;;;;;-1:-1:-1;1323:18:2;;;;;;;;:25;;-1:-1:-1;;1323:25:2;;;;;;;1364:23;;;1323:18;1364:23;1168:227;:::o;777:24:0:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;777:24:0;:::o;715:::-;;;;;;;;;;2945:192:2;2988:21;2998:10;2988:9;:21::i;:::-;2980:30;;;;;;3035:14;;3029:3;:20;3021:29;;;;;;3070:9;:7;:9::i;:::-;3069:10;3061:19;;;;;;3093:30;3112:10;3093:18;:30::i;:::-;2945:192::o;3780:132::-;3817:7;3826:4;3832;3857:7;:5;:7::i;:::-;3866:14;;3882:21;3892:10;3882:9;:21::i;:::-;3849:55;;;;;;3780:132;;;:::o;920:18:0:-;;;;;;:::o;3064:335::-;-1:-1:-1;;;;;5818:13:0;;;;;;:5;:13;;;;;:18;:13;;:18;;5817:19;5809:28;;;;;;-1:-1:-1;;;;;6013:13:0;;;6044:1;6013:13;;;:5;:13;;;;;:19;;;:13;;:19;:33;:57;;;;-1:-1:-1;6060:10:0;-1:-1:-1;;;;;6050:20:0;;;6013:57;6012:96;;;-1:-1:-1;;;;;;6075:13:0;;;;;;;:5;:13;;;;;:19;;;;6098:10;6075:33;6012:96;6004:105;;;;;;5628:6;;;;5627:7;5619:16;;;;;;3195:1;3187:5;:9;3179:49;;;;;-1:-1:-1;;;3179:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3260:16:0;;3239:18;3260:16;;;:5;:16;;;;;;-1:-1:-1;3286:11:0;;:19;;;3315:20;;-1:-1:-1;;3315:20:0;;;;;3351:41;;3260:16;;3381:10;;3286:19;;3351:41;;3239:18;3351:41;5645:1;5847;3064:335;;;:::o;1309:130:3:-;850:9;:7;:9::i;:::-;842:18;;;;;;1404:1;1388:6;;1367:40;;-1:-1:-1;;;;;1388:6:3;;;;1367:40;;1404:1;;1367:40;1431:1;1414:19;;-1:-1:-1;;;;;;1414:19:3;;;1309:130::o;3393:145:2:-;3437:4;3443;3449;3474:21;3484:10;3474:9;:21::i;:::-;3503:14;;3497:3;:20;3520:9;:7;:9::i;:::-;3519:10;3466:64;;;;;;3393:145;;;:::o;6501:201:0:-;-1:-1:-1;;;;;6612:13:0;;;6554:4;6612:13;;;:5;:13;;;;;6643:10;;-1:-1:-1;6670:11:0;;;6683;;;;;6643:10;;;;;;6655:13;;;;;6683:11;;6501:201::o;659:72:3:-;696:7;719:6;-1:-1:-1;;;;;719:6:3;;659:72::o;957:85::-;996:4;1030:6;-1:-1:-1;;;;;1030:6:3;1016:10;:20;;957:85::o;3530:278:0:-;-1:-1:-1;;;;;5818:13:0;;;;;;:5;:13;;;;;:18;:13;;:18;;5817:19;5809:28;;;;;;-1:-1:-1;;;;;6013:13:0;;;6044:1;6013:13;;;:5;:13;;;;;:19;;;:13;;:19;:33;:57;;;;-1:-1:-1;6060:10:0;-1:-1:-1;;;;;6050:20:0;;;6013:57;6012:96;;;-1:-1:-1;;;;;;6075:13:0;;;;;;;:5;:13;;;;;:19;;;;6098:10;6075:33;6012:96;6004:105;;;;;;-1:-1:-1;;;;;6259:12:0;;;;;;:5;:12;;;;;:20;:12;;:20;;;;;6251:29;;;;;;5628:6;;;;5627:7;5619:16;;;;;;-1:-1:-1;;;;;3676:16:0;;3655:18;3676:16;;;:5;:16;;;;;;-1:-1:-1;3702:11:0;;:15;;;3727:21;;-1:-1:-1;;3727:21:0;;;3764:37;;3676:16;;3790:10;;3676:16;;3764:37;;3655:18;3764:37;5645:1;6119;5847;3530:278;;:::o;2287:232:2:-;850:9:3;:7;:9::i;:::-;842:18;;;;;;2385:14:2;;;2412:32;;;;2462:49;;;;;;;;;;;;;;;;;;;;;;;;;867:1:3;2287:232:2;:::o;6304:92:0:-;6347:16;6382:7;6375:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6304:92;:::o;4122:665::-;-1:-1:-1;;;;;5818:13:0;;;;;;:5;:13;;;;;:18;:13;;:18;;5817:19;5809:28;;;;;;-1:-1:-1;;;;;6259:12:0;;;;;;:5;:12;;;;;:20;:12;;:20;;;;;6251:29;;;;;;5628:6;;;;5627:7;5619:16;;;;;;-1:-1:-1;;;;;4261:16:0;;;4240:18;4261:16;;;:5;:16;;;;;4312:11;;;;-1:-1:-1;4355:11:0;;;4261:16;;4312:11;;4342:9;:24;;4334:65;;;;;-1:-1:-1;;;4334:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4444:11;;;;4466:28;;4432:9;:23;;;;-1:-1:-1;;;;;4466:15:0;;;:28;;;;;4444:11;4418;4466:28;4418:11;4466:28;4444:11;4466:15;:28;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4548:10:0;;4544:105;;4574:27;;:10;;:27;;;;;4594:6;;4574:27;;;;4594:6;4574:10;:27;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4574:27:0;4544:105;4659:21;;-1:-1:-1;;4659:21:0;;;4690:11;;;:24;;-1:-1:-1;;;;;;4690:24:0;4704:10;4690:24;;;;;;4729:51;;-1:-1:-1;;;;;4729:51:0;;;;;;;;;;-1:-1:-1;;4729:51:0;5645:1;;;5847;4122:665;;:::o;3920:76:2:-;3985:3;3920:76;:::o;2661:96::-;2735:14;;2661:96;:::o;4989:245:0:-;-1:-1:-1;;;;;5818:13:0;;;;;;:5;:13;;;;;:18;:13;;:18;;5817:19;5809:28;;;;;;-1:-1:-1;;;;;6013:13:0;;;6044:1;6013:13;;;:5;:13;;;;;:19;;;:13;;:19;:33;:57;;;;-1:-1:-1;6060:10:0;-1:-1:-1;;;;;6050:20:0;;;6013:57;6012:96;;;-1:-1:-1;;;;;;6075:13:0;;;;;;;:5;:13;;;;;:19;;;;6098:10;6075:33;6012:96;6004:105;;;;;;5628:6;;;;5627:7;5619:16;;;;;;-1:-1:-1;;;;;5123:16:0;;;;;;;:5;:16;;;;;;:22;;:34;;-1:-1:-1;;;;;;5123:34:0;;;;;;;;;5173:54;5205:10;;5123:16;5173:54;;;5847:1;4989:245;;;:::o;6402:93::-;6446:13;6478:10;6471:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6402:93;:::o;5340:160::-;5628:6;;;;5627:7;5619:16;;;;;;850:9:3;:7;:9::i;:::-;842:18;;;;;;5397:6:0;:13;;-1:-1:-1;;5397:13:0;5406:4;5397:13;;;5421:14;;:31;;;-1:-1:-1;;;5421:31:0;;5447:4;5421:31;;;;;;-1:-1:-1;;;;;5421:14:0;;;;-1:-1:-1;;5421:31:0;;;;;-1:-1:-1;;5421:31:0;;;;;;;;-1:-1:-1;5421:14:0;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;5421:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5468:25:0;;5487:4;;-1:-1:-1;5468:25:0;;-1:-1:-1;5468:25:0;;;5340:160::o;1534:213:2:-;850:9:3;:7;:9::i;:::-;842:18;;;;;;-1:-1:-1;;;;;1611:18:2;;;;;;-1:-1:-1;1611:18:2;;;;;;;;1603:28;;;;;;-1:-1:-1;;;;;1673:18:2;;1694:5;1673:18;;;-1:-1:-1;1673:18:2;;;;;;:26;;-1:-1:-1;;1673:26:2;;;1715:24;;;1694:5;1715:24;1534:213;:::o;1603:103:3:-;850:9;:7;:9::i;:::-;842:18;;;;;;1672:28;1691:8;1672:18;:28::i;:::-;1603:103;:::o;1843:173::-;-1:-1:-1;;;;;1913:22:3;;1905:31;;;;;;1969:6;;;1948:38;;-1:-1:-1;;;;;1948:38:3;;;;1969:6;;;1948:38;;;1993:6;:17;;-1:-1:-1;;;;;;1993:17:3;-1:-1:-1;;;;;1993:17:3;;;;;;;;;;1843:173::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "954600",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "addClaimer(address)": "24139",
                            "buysVote(address)": "infinite",
                            "claim()": "26102",
                            "closePoll()": "infinite",
                            "closed()": "1100",
                            "debugnow()": "242",
                            "delegateVote(address,address)": "26805",
                            "getExpirationTime()": "1065",
                            "getOptions()": "infinite",
                            "getVote(address)": "3008",
                            "getVoteCount()": "infinite",
                            "isClaimable()": "2951",
                            "isClaimer(address)": "1222",
                            "isOwner()": "1072",
                            "name()": "infinite",
                            "options(uint256)": "2065",
                            "owner()": "1060",
                            "read()": "2932",
                            "removeClaimer(address)": "24116",
                            "renounceOwnership()": "24259",
                            "sellVote(address,uint256)": "46777",
                            "setExpirationTime(uint256)": "23304",
                            "stopSelling(address)": "32307",
                            "transferOwnership(address)": "24468",
                            "vote(uint256,address)": "50127",
                            "voteCounts(uint256)": "2043"
                        }
                    },
                    "methodIdentifiers": {
                        "addClaimer(address)": "2ea66401",
                        "buysVote(address)": "df1edbe8",
                        "claim()": "4e71d92d",
                        "closePoll()": "ed8c2aed",
                        "closed()": "597e1fb5",
                        "debugnow()": "e1aa071c",
                        "delegateVote(address,address)": "e5ed5b1e",
                        "getExpirationTime()": "e23a845a",
                        "getOptions()": "cc2ee196",
                        "getVote(address)": "8d337b81",
                        "getVoteCount()": "e7b3387c",
                        "isClaimable()": "74478bb3",
                        "isClaimer(address)": "10a8aecd",
                        "isOwner()": "8f32d59b",
                        "name()": "06fdde03",
                        "options(uint256)": "409e2205",
                        "owner()": "8da5cb5b",
                        "read()": "57de26a4",
                        "removeClaimer(address)": "f0490b8a",
                        "renounceOwnership()": "715018a6",
                        "sellVote(address,uint256)": "709c9276",
                        "setExpirationTime(uint256)": "c0cc365d",
                        "stopSelling(address)": "b4545a87",
                        "transferOwnership(address)": "f2fde38b",
                        "vote(uint256,address)": "02d947ef",
                        "voteCounts(uint256)": "3c3a220d"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract PollingStation\",\"name\":\"_pollingStation\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"_options\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldExpiration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExpiration\",\"type\":\"uint256\"}],\"name\":\"ExpirationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"option\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voteAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"NewVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pollAddr\",\"type\":\"address\"}],\"name\":\"PollClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voteAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"VoteForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voteAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"VoteNotForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voteAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"VoteOwnershipChanged\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"addClaimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_voteAddr\",\"type\":\"address\"}],\"name\":\"buysVote\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closePoll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"debugnow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voteAddr\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"delegateVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getExpirationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOptions\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVoteCount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isClaimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"isClaimer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"options\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"removeClaimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voteAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"sellVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_expirationTime\",\"type\":\"uint256\"}],\"name\":\"setExpirationTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voteAddr\",\"type\":\"address\"}],\"name\":\"stopSelling\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_optionIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voteAddr\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addClaimer(address)\":{\"params\":{\"_claimer\":\"address of the claimer to be added\"}},\"buysVote(address)\":{\"details\":\"This method only works if the vote has not been used AND is for sale \",\"params\":{\"_voteAddr\":\"the address of the seller whose vote is intended to buy\"}},\"delegateVote(address,address)\":{\"params\":{\"_newOwner\":\"address of the new owner of this vote\",\"_voteAddr\":\"the vote to be delegated, usually same as msg.sender\"}},\"getExpirationTime()\":{\"return\":\"uint with the expiration time\"},\"isClaimable()\":{\"details\":\"The contract is claimable when the 3 results are true.\",\"return\":\"bool: is a claimer, bool: is expired, bool: is not owner\"},\"isClaimer(address)\":{\"params\":{\"_claimer\":\"address to verify\"},\"return\":\"true if the caller has been added as claimer, false, otherwise\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"read()\":{\"return\":\"(address: owner of this contract, uint: the expiration date, bool: is caller a claimers?)\"},\"removeClaimer(address)\":{\"params\":{\"_claimer\":\"address of the claimer to be removed\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"sellVote(address,uint256)\":{\"params\":{\"_voteAddr\":\"The vote to be put for sale. Msg.owner must own this vote.      \"}},\"setExpirationTime(uint256)\":{\"params\":{\"_expirationTime\":\"the new expiration time for this contract\"}},\"stopSelling(address)\":{\"params\":{\"_voteAddr\":\"The vote address currently for sale\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"vote(uint256,address)\":{\"details\":\"Refer to `options` property  \",\"params\":{\"_optionIndex\":\"a bytes32 representing the option to vote.\",\"_voteAddr\":\"address of the voter this vote refers to. Message sender must own that right\"}}}},\"userdoc\":{\"methods\":{\"addClaimer(address)\":{\"notice\":\"Adds a new claimer to the contract\"},\"buysVote(address)\":{\"notice\":\"Buys a vote for sale. Enough funds must be transferred to this method.  More funds than necessary will be refunded.\"},\"claim()\":{\"notice\":\"Claim ownership of the contract, once the max inactive time is reached.  Only addresses in claimers can claim, unless the array is empty.\"},\"closePoll()\":{\"notice\":\"Closes the poll. This action is irreversible and can only be performed once.\"},\"constructor\":\"A poll requires a name and a bytes32 for each option.\",\"delegateVote(address,address)\":{\"notice\":\"Delegates a vote to someone else.\"},\"getExpirationTime()\":{\"notice\":\"Gets the current expiration time set in this contract\"},\"isClaimable()\":{\"notice\":\"Checks if the expiration date is passed and contract can be claimed.\"},\"isClaimer(address)\":{\"notice\":\"returns true if the caller has been added as claimer on this contract\"},\"read()\":{\"notice\":\"returns the owner of this contract, the expiration date and if the caller is one of the claimers\"},\"removeClaimer(address)\":{\"notice\":\"Removes a claimer from the contract\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"sellVote(address,uint256)\":{\"notice\":\"Puts a vote for sale for a specified price.\"},\"setExpirationTime(uint256)\":{\"notice\":\"allows the owner to set a new expiration time to extend the ownership of this contract\"},\"stopSelling(address)\":{\"notice\":\"Makes a vote no longer available for sale\"},\"vote(uint256,address)\":{\"notice\":\"Stores a vote from the message sender.  Each address can vote only once and only as long as the poll is not closed. Each address can also sell their voting rights for others, which allows the buyer to vote.\"}},\"notice\":\"A poll is a contract that stores potential options to vote on, as well as which addresses have voted already. Addresses can vote on the poll until the poll owner closes the contract. Addresses can also put their votes for sale as long as they have not voted yet.\"}},\"settings\":{\"compilationTarget\":{\"/Users/gmussi/git/solidity-voting/contracts/Poll.sol\":\"Poll\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/gmussi/git/solidity-voting/contracts/Poll.sol\":{\"keccak256\":\"0x23068dad036d4b0e2e2a11d9bda176b7b8d982732069154faea7bb9c77146b4e\",\"urls\":[\"bzz-raw://67591ee53c81039badf713ad581281a960a70f9f00aaee095b815ac478016cdb\",\"dweb:/ipfs/QmcgGW56NYi7YQHxid9BKS8bCGacW3qxakFFM3WMzenvVd\"]},\"/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol\":{\"keccak256\":\"0x382699a44f30351de21e7f102ee4037d38b882f7d8d98c1af9ee7fbade98a863\",\"urls\":[\"bzz-raw://2ef40bce22503dbec131901c8b3c65a5bf961608982cc6cf1be24ecbcf324394\",\"dweb:/ipfs/QmchbjQk7WhNrVxD9p5XTBZk3vngwJMTeY2e1Sueyze8fe\"]},\"/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol\":{\"keccak256\":\"0xab82ae6e842f054c461d255983aa378db932d67a9eb5903daaadfca204d09e98\",\"urls\":[\"bzz-raw://4013755d13fbccfb1fc6536a36a5bc148e67c700e1162621dfd5f651a16fc480\",\"dweb:/ipfs/QmSLuCvpwHrCBCoN3oaZDEA9szuBzF7BGhy92C2cfFRpxF\"]},\"/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol\":{\"keccak256\":\"0x4144486887fa7f998f0759de5a0647475729e2fa88110c442dafd38d8cb06c40\",\"urls\":[\"bzz-raw://22ba5fe3c1c1ef94d71ebee14a36f1e787c494a6a13ba0450325f4273a8faf76\",\"dweb:/ipfs/QmfFJGrQFFfYrB2wwGJRyv51uqjL1ZCYqSyGH61mBbe9V3\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 846,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                            "label": "_owner",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_address"
                        },
                        {
                            "astId": 658,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                            "label": "claimers",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_mapping(t_address,t_bool)"
                        },
                        {
                            "astId": 660,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                            "label": "expirationTime",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 7,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                            "label": "pollingStation",
                            "offset": 0,
                            "slot": "3",
                            "type": "t_contract(PollingStation)649"
                        },
                        {
                            "astId": 18,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                            "label": "name",
                            "offset": 0,
                            "slot": "4",
                            "type": "t_string_storage"
                        },
                        {
                            "astId": 21,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                            "label": "options",
                            "offset": 0,
                            "slot": "5",
                            "type": "t_array(t_bytes32)dyn_storage"
                        },
                        {
                            "astId": 24,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                            "label": "voteCounts",
                            "offset": 0,
                            "slot": "6",
                            "type": "t_array(t_uint256)dyn_storage"
                        },
                        {
                            "astId": 28,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                            "label": "votes",
                            "offset": 0,
                            "slot": "7",
                            "type": "t_mapping(t_address,t_struct(Vote)16_storage)"
                        },
                        {
                            "astId": 30,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                            "label": "closed",
                            "offset": 0,
                            "slot": "8",
                            "type": "t_bool"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_address_payable": {
                            "encoding": "inplace",
                            "label": "address payable",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_bytes32)dyn_storage": {
                            "base": "t_bytes32",
                            "encoding": "dynamic_array",
                            "label": "bytes32[]",
                            "numberOfBytes": "32"
                        },
                        "t_array(t_uint256)dyn_storage": {
                            "base": "t_uint256",
                            "encoding": "dynamic_array",
                            "label": "uint256[]",
                            "numberOfBytes": "32"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_bytes32": {
                            "encoding": "inplace",
                            "label": "bytes32",
                            "numberOfBytes": "32"
                        },
                        "t_contract(PollingStation)649": {
                            "encoding": "inplace",
                            "label": "contract PollingStation",
                            "numberOfBytes": "20"
                        },
                        "t_mapping(t_address,t_bool)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => bool)",
                            "numberOfBytes": "32",
                            "value": "t_bool"
                        },
                        "t_mapping(t_address,t_struct(Vote)16_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => struct Poll.Vote)",
                            "numberOfBytes": "32",
                            "value": "t_struct(Vote)16_storage"
                        },
                        "t_string_storage": {
                            "encoding": "bytes",
                            "label": "string",
                            "numberOfBytes": "32"
                        },
                        "t_struct(Vote)16_storage": {
                            "encoding": "inplace",
                            "label": "struct Poll.Vote",
                            "members": [
                                {
                                    "astId": 9,
                                    "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                                    "label": "used",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_bool"
                                },
                                {
                                    "astId": 11,
                                    "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                                    "label": "forSale",
                                    "offset": 1,
                                    "slot": "0",
                                    "type": "t_bool"
                                },
                                {
                                    "astId": 13,
                                    "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                                    "label": "price",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 15,
                                    "contract": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol:Poll",
                                    "label": "owner",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_address_payable"
                                }
                            ],
                            "numberOfBytes": "96"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "userdoc": {
                    "methods": {
                        "addClaimer(address)": {
                            "notice": "Adds a new claimer to the contract"
                        },
                        "buysVote(address)": {
                            "notice": "Buys a vote for sale. Enough funds must be transferred to this method.  More funds than necessary will be refunded."
                        },
                        "claim()": {
                            "notice": "Claim ownership of the contract, once the max inactive time is reached.  Only addresses in claimers can claim, unless the array is empty."
                        },
                        "closePoll()": {
                            "notice": "Closes the poll. This action is irreversible and can only be performed once."
                        },
                        "constructor": "A poll requires a name and a bytes32 for each option.",
                        "delegateVote(address,address)": {
                            "notice": "Delegates a vote to someone else."
                        },
                        "getExpirationTime()": {
                            "notice": "Gets the current expiration time set in this contract"
                        },
                        "isClaimable()": {
                            "notice": "Checks if the expiration date is passed and contract can be claimed."
                        },
                        "isClaimer(address)": {
                            "notice": "returns true if the caller has been added as claimer on this contract"
                        },
                        "read()": {
                            "notice": "returns the owner of this contract, the expiration date and if the caller is one of the claimers"
                        },
                        "removeClaimer(address)": {
                            "notice": "Removes a claimer from the contract"
                        },
                        "renounceOwnership()": {
                            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
                        },
                        "sellVote(address,uint256)": {
                            "notice": "Puts a vote for sale for a specified price."
                        },
                        "setExpirationTime(uint256)": {
                            "notice": "allows the owner to set a new expiration time to extend the ownership of this contract"
                        },
                        "stopSelling(address)": {
                            "notice": "Makes a vote no longer available for sale"
                        },
                        "vote(uint256,address)": {
                            "notice": "Stores a vote from the message sender.  Each address can vote only once and only as long as the poll is not closed. Each address can also sell their voting rights for others, which allows the buyer to vote."
                        }
                    },
                    "notice": "A poll is a contract that stores potential options to vote on, as well as which addresses have voted already. Addresses can vote on the poll until the poll owner closes the contract. Addresses can also put their votes for sale as long as they have not voted yet."
                }
            }
        },
        "/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol": {
            "PollingStation": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimer",
                                "type": "address"
                            }
                        ],
                        "name": "ClaimerAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimer",
                                "type": "address"
                            }
                        ],
                        "name": "ClaimerRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "oldExpiration",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newExpiration",
                                "type": "uint256"
                            }
                        ],
                        "name": "ExpirationUpdated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "pollAddr",
                                "type": "address"
                            }
                        ],
                        "name": "PollClosed",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "creator",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "pollId",
                                "type": "uint256"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "pollAddr",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "name",
                                "type": "string"
                            }
                        ],
                        "name": "PollCreated",
                        "type": "event"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_claimer",
                                "type": "address"
                            }
                        ],
                        "name": "addClaimer",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "claim",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_name",
                                "type": "string"
                            },
                            {
                                "internalType": "bytes32[]",
                                "name": "_options",
                                "type": "bytes32[]"
                            }
                        ],
                        "name": "createPoll",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "debugnow",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getCount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "count",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getExpirationTime",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getMyPolls",
                        "outputs": [
                            {
                                "internalType": "uint256[]",
                                "name": "",
                                "type": "uint256[]"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "isClaimable",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_claimer",
                                "type": "address"
                            }
                        ],
                        "name": "isClaimer",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "isOwner",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "contract Poll",
                                "name": "poll",
                                "type": "address"
                            }
                        ],
                        "name": "pollClosed",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "polls",
                        "outputs": [
                            {
                                "internalType": "contract Poll",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "read",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_claimer",
                                "type": "address"
                            }
                        ],
                        "name": "removeClaimer",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "renounceOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_expirationTime",
                                "type": "uint256"
                            }
                        ],
                        "name": "setExpirationTime",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "methods": {
                        "addClaimer(address)": {
                            "params": {
                                "_claimer": "address of the claimer to be added"
                            }
                        },
                        "getExpirationTime()": {
                            "return": "uint with the expiration time"
                        },
                        "isClaimable()": {
                            "details": "The contract is claimable when the 3 results are true.",
                            "return": "bool: is a claimer, bool: is expired, bool: is not owner"
                        },
                        "isClaimer(address)": {
                            "params": {
                                "_claimer": "address to verify"
                            },
                            "return": "true if the caller has been added as claimer, false, otherwise"
                        },
                        "isOwner()": {
                            "return": "true if `msg.sender` is the owner of the contract."
                        },
                        "owner()": {
                            "return": "the address of the owner."
                        },
                        "read()": {
                            "return": "(address: owner of this contract, uint: the expiration date, bool: is caller a claimers?)"
                        },
                        "removeClaimer(address)": {
                            "params": {
                                "_claimer": "address of the claimer to be removed"
                            }
                        },
                        "renounceOwnership()": {
                            "details": "Allows the current owner to relinquish control of the contract."
                        },
                        "setExpirationTime(uint256)": {
                            "params": {
                                "_expirationTime": "the new expiration time for this contract"
                            }
                        },
                        "transferOwnership(address)": {
                            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                            "params": {
                                "newOwner": "The address to transfer ownership to."
                            }
                        }
                    }
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3612192806100576000396000f3fe60806040523480156200001157600080fd5b50600436106200012f5760003560e01c80638f32d59b11620000b1578063c0cc365d116200007b578063c0cc365d1462000455578063e1aa071c1462000475578063e23a845a146200047f578063f0490b8a1462000489578063f2fde38b14620004b2576200012f565b80638f32d59b14620003e6578063a87d942c14620003f0578063ac2f0074146200040c578063af9da81f146200042c576200012f565b80634e71d92d11620000ff5780634e71d92d146200034c57806357de26a41462000356578063715018a6146200038a57806374478bb314620003945780638da5cb5b14620003c0576200012f565b8062f63722146200013457806310a8aecd1462000288578063170b5add14620002c55780632ea664011462000321575b600080fd5b62000267600480360360408110156200014c57600080fd5b8101906020810181356401000000008111156200016857600080fd5b8201836020820111156200017b57600080fd5b803590602001918460018302840111640100000000831117156200019e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050640100000000811115620001f257600080fd5b8201836020820111156200020557600080fd5b803590602001918460208302840111640100000000831117156200022857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550620004db945050505050565b604080519283526001600160a01b0390911660208301528051918290030190f35b620002b160048036036020811015620002a057600080fd5b50356001600160a01b031662000759565b604080519115158252519081900360200190f35b620002cf62000777565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156200030d578181015183820152602001620002f3565b505050509050019250505060405180910390f35b6200034a600480360360208110156200033957600080fd5b50356001600160a01b0316620007da565b005b6200034a62000864565b62000360620008aa565b604080516001600160a01b0390941684526020840192909252151582820152519081900360600190f35b6200034a620008d2565b6200039e62000930565b6040805193151584529115156020840152151582820152519081900360600190f35b620003ca6200095b565b604080516001600160a01b039092168252519081900360200190f35b620002b16200096a565b620003fa6200097b565b60408051918252519081900360200190f35b620003ca600480360360208110156200042457600080fd5b503562000981565b6200034a600480360360208110156200044457600080fd5b50356001600160a01b0316620009a9565b6200034a600480360360208110156200046d57600080fd5b5035620009f6565b620003fa62000a51565b620003fa62000a55565b6200034a60048036036020811015620004a157600080fd5b50356001600160a01b031662000a5b565b6200034a60048036036020811015620004ca57600080fd5b50356001600160a01b031662000ade565b6000806000308585604051620004f19062000b6f565b6001600160a01b0384168152606060208083018281528551928401929092528451604084019160808501919087019080838360005b838110156200054057818101518382015260200162000526565b50505050905090810190601f1680156200056e5780820380516001836020036101000a031916815260200191505b508381038252845181528451602091820191808701910280838360005b83811015620005a55781810151838201526020016200058b565b5050505090500195505050505050604051809103906000f080158015620005d0573d6000803e3d6000fd5b5060038054600180820183557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b0319166001600160a01b03851690811790915591543360008181526004602090815260408083208054968701815583528183206000199095019490950184905584518181528c51818301528c519798509396879593947f7ea57775055a1d04b0e99841ebddb0a6bf8ca4d1b0474329fdd201c5d3ac6c57948e94919384939184019290860191908190849084905b83811015620006b157818101518382015260200162000697565b50505050905090810190601f168015620006df5780820380516001836020036101000a031916815260200191505b509250505060405180910390a46040805163f2fde38b60e01b815233600482015290516001600160a01b0384169163f2fde38b91602480830192600092919082900301818387803b1580156200073457600080fd5b505af115801562000749573d6000803e3d6000fd5b5092989397509295505050505050565b6001600160a01b031660009081526001602052604090205460ff1690565b33600090815260046020908152604091829020805483518184028101840190945280845260609392830182828015620007d057602002820191906000526020600020905b815481526020019060010190808311620007bb575b5050505050905090565b620007e46200096a565b620007ee57600080fd5b6001600160a01b03811660009081526001602052604090205460ff16156200081557600080fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fff9a8f4e0a39755c20c899b46171e470382709479fce2aa1e388f95edfe017399190a250565b6200086f3362000759565b6200087957600080fd5b60025442116200088857600080fd5b620008926200096a565b156200089d57600080fd5b620008a83362000b00565b565b6000806000620008b96200095b565b600254620008c73362000759565b925092509250909192565b620008dc6200096a565b620008e657600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000806000620009403362000759565b60025442116200094f6200096a565b15925092509250909192565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60035490565b600381815481106200098f57fe5b6000918252602090912001546001600160a01b0316905081565b336001600160a01b03821614620009bf57600080fd5b6040516001600160a01b038216907f231ba46a9796cfff3206eb206f870c5e4f68248af093e30cf9e3dd48857a6e6690600090a250565b62000a006200096a565b62000a0a57600080fd5b6002805490829055604080518281526020810184905281517f48bd2ad49200e0ca36b95736b1b720e3a4db1eb87715905a0242d11e90fcf176929181900390910190a15050565b4290565b60025490565b62000a656200096a565b62000a6f57600080fd5b6001600160a01b03811660009081526001602052604090205460ff1662000a9557600080fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30acaa541089592567cd4ce36437c68778a43e66dc1a9e7031e4496faf4593259190a250565b62000ae86200096a565b62000af257600080fd5b62000afd8162000b00565b50565b6001600160a01b03811662000b1457600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6115e08062000b7e8339019056fe60806040523480156200001157600080fd5b50604051620015e0380380620015e0833981810160405260608110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011157600080fd5b9083019060208201858111156200012757600080fd5b82518660208202830111640100000000821117156200014557600080fd5b82525081516020918201928201910280838360005b83811015620001745781810151838201526020016200015a565b50505050919091016040819052600080546001600160a01b03191633178082556001600160a01b0316955093507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09250839150a36000815111620001d757600080fd5b600380546001600160a01b0319166001600160a01b03851617905581516200020790600490602085019062000286565b5060005b81518110156200027c5760058282815181106200022457fe5b602090810291909101810151825460018181018555600094855292842001556006805480830182559083527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0191909155016200020b565b505050506200032b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002c957805160ff1916838001178555620002f9565b82800160010185558215620002f9579182015b82811115620002f9578251825591602001919060010190620002dc565b50620003079291506200030b565b5090565b6200032891905b8082111562000307576000815560010162000312565b90565b6112a5806200033b6000396000f3fe6080604052600436106101815760003560e01c80638da5cb5b116100d1578063e1aa071c1161008a578063e7b3387c11610064578063e7b3387c14610610578063ed8c2aed14610625578063f0490b8a1461063a578063f2fde38b1461066d57610181565b8063e1aa071c146105ab578063e23a845a146105c0578063e5ed5b1e146105d557610181565b80638da5cb5b1461047d5780638f32d59b146104ae578063b4545a87146104c3578063c0cc365d146104f6578063cc2ee19614610520578063df1edbe81461058557610181565b80634e71d92d1161013e578063709c927611610118578063709c927614610394578063715018a6146103cd57806374478bb3146103e25780638d337b811461041957610181565b80634e71d92d1461032b57806357de26a414610340578063597e1fb51461037f57610181565b806302d947ef1461018657806306fdde03146101c157806310a8aecd1461024b5780632ea66401146102925780633c3a220d146102c5578063409e220514610301575b600080fd5b34801561019257600080fd5b506101bf600480360360408110156101a957600080fd5b50803590602001356001600160a01b03166106a0565b005b3480156101cd57600080fd5b506101d66107cf565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102105781810151838201526020016101f8565b50505050905090810190601f16801561023d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025757600080fd5b5061027e6004803603602081101561026e57600080fd5b50356001600160a01b031661085d565b604080519115158252519081900360200190f35b34801561029e57600080fd5b506101bf600480360360208110156102b557600080fd5b50356001600160a01b031661087b565b3480156102d157600080fd5b506102ef600480360360208110156102e857600080fd5b5035610901565b60408051918252519081900360200190f35b34801561030d57600080fd5b506102ef6004803603602081101561032457600080fd5b503561091f565b34801561033757600080fd5b506101bf61092c565b34801561034c57600080fd5b50610355610969565b604080516001600160a01b0390941684526020840192909252151582820152519081900360600190f35b34801561038b57600080fd5b5061027e61098d565b3480156103a057600080fd5b506101bf600480360360408110156103b757600080fd5b506001600160a01b038135169060200135610996565b3480156103d957600080fd5b506101bf610ae8565b3480156103ee57600080fd5b506103f7610b43565b6040805193151584529115156020840152151582820152519081900360600190f35b34801561042557600080fd5b5061044c6004803603602081101561043c57600080fd5b50356001600160a01b0316610b6a565b6040805194151585529215156020850152838301919091526001600160a01b03166060830152519081900360800190f35b34801561048957600080fd5b50610492610ba2565b604080516001600160a01b039092168252519081900360200190f35b3480156104ba57600080fd5b5061027e610bb1565b3480156104cf57600080fd5b506101bf600480360360208110156104e657600080fd5b50356001600160a01b0316610bc2565b34801561050257600080fd5b506101bf6004803603602081101561051957600080fd5b5035610ce7565b34801561052c57600080fd5b50610535610d3f565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610571578181015183820152602001610559565b505050509050019250505060405180910390f35b6101bf6004803603602081101561059b57600080fd5b50356001600160a01b0316610d97565b3480156105b757600080fd5b506102ef610f4c565b3480156105cc57600080fd5b506102ef610f50565b3480156105e157600080fd5b506101bf600480360360408110156105f857600080fd5b506001600160a01b0381358116916020013516610f56565b34801561061c57600080fd5b50610535611051565b34801561063157600080fd5b506101bf6110a7565b34801561064657600080fd5b506101bf6004803603602081101561065d57600080fd5b50356001600160a01b0316611166565b34801561067957600080fd5b506101bf6004803603602081101561069057600080fd5b50356001600160a01b03166111e5565b6001600160a01b038116600090815260076020526040902054819060ff16156106c857600080fd5b6001600160a01b038083166000908152600760205260409020600201548391161580156106fd57506001600160a01b03811633145b8061072457506001600160a01b038181166000908152600760205260409020600201541633145b61072d57600080fd5b60085460ff161561073d57600080fd5b6006848154811061074a57fe5b60009182526020808320909101805460019081019091556001600160a01b03861680845260079092526040909220805460ff191690921790915560058054339291908790811061079657fe5b600091825260208220015460405190917f49800724769cfeab686bbed287515c62b0780b3ca377ad4dc33a74a2b84ea8a591a450505050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108555780601f1061082a57610100808354040283529160200191610855565b820191906000526020600020905b81548152906001019060200180831161083857829003601f168201915b505050505081565b6001600160a01b031660009081526001602052604090205460ff1690565b610883610bb1565b61088c57600080fd5b6001600160a01b03811660009081526001602052604090205460ff16156108b257600080fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fff9a8f4e0a39755c20c899b46171e470382709479fce2aa1e388f95edfe017399190a250565b6006818154811061090e57fe5b600091825260209091200154905081565b6005818154811061090e57fe5b6109353361085d565b61093e57600080fd5b600254421161094c57600080fd5b610954610bb1565b1561095e57600080fd5b61096733611202565b565b6000806000610976610ba2565b6002546109823361085d565b925092509250909192565b60085460ff1681565b6001600160a01b038216600090815260076020526040902054829060ff16156109be57600080fd5b6001600160a01b038084166000908152600760205260409020600201548491161580156109f357506001600160a01b03811633145b80610a1a57506001600160a01b038181166000908152600760205260409020600201541633145b610a2357600080fd5b60085460ff1615610a3357600080fd5b60008311610a88576040805162461bcd60e51b815260206004820152601b60248201527f5072696365206d75737420626520686967686572207468616e20300000000000604482015290519081900360640190fd5b6001600160a01b03841660008181526007602052604080822060018101879055805461ff00191661010017815590519092339287927f5bd9c8cd0416570878f22361aa825b83e275af1f5ad3af2e353e1f498405b0089190a45050505050565b610af0610bb1565b610af957600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000806000610b513361085d565b6002544211610b5e610bb1565b15925092509250909192565b6001600160a01b0390811660009081526007602052604090208054600182015460029092015460ff8083169561010090930416931690565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6001600160a01b038116600090815260076020526040902054819060ff1615610bea57600080fd5b6001600160a01b03808316600090815260076020526040902060020154839116158015610c1f57506001600160a01b03811633145b80610c4657506001600160a01b038181166000908152600760205260409020600201541633145b610c4f57600080fd5b6001600160a01b0383166000908152600760205260409020548390610100900460ff16610c7b57600080fd5b60085460ff1615610c8b57600080fd5b6001600160a01b03841660008181526007602052604080822060018101839055805461ff001916815590519092339290917f65b12a532dda3308398d0ea60c768a0bf2509db55bf7f257c1087b14cfd3cfef9190a35050505050565b610cef610bb1565b610cf857600080fd5b6002805490829055604080518281526020810184905281517f48bd2ad49200e0ca36b95736b1b720e3a4db1eb87715905a0242d11e90fcf176929181900390910190a15050565b60606005805480602002602001604051908101604052809291908181526020018280548015610d8d57602002820191906000526020600020905b815481526020019060010190808311610d79575b5050505050905090565b6001600160a01b038116600090815260076020526040902054819060ff1615610dbf57600080fd5b6001600160a01b0382166000908152600760205260409020548290610100900460ff16610deb57600080fd5b60085460ff1615610dfb57600080fd5b6001600160a01b0380841660009081526007602052604090206002810154600182015491921690341015610e76576040805162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f7567682066756e6473207472616e7366657272656400000000604482015290519081900360640190fd5b600182015460405134829003916001600160a01b0384169181156108fc0291906000818181858888f19350505050158015610eb5573d6000803e3d6000fd5b508015610eeb57604051339082156108fc029083906000818181858888f19350505050158015610ee9573d6000803e3d6000fd5b505b825461ff00191683556002830180546001600160a01b031916339081179091556040516001600160a01b0384811691908916907fb294c26ec0b075ccd4d6ae733f6661019eab6c771ba5eec5ce6ac6513ab0388690600090a4505050505050565b4290565b60025490565b6001600160a01b038216600090815260076020526040902054829060ff1615610f7e57600080fd5b6001600160a01b03808416600090815260076020526040902060020154849116158015610fb357506001600160a01b03811633145b80610fda57506001600160a01b038181166000908152600760205260409020600201541633145b610fe357600080fd5b60085460ff1615610ff357600080fd5b6001600160a01b0384811660008181526007602052604080822060020180546001600160a01b0319169488169485179055513392917fb294c26ec0b075ccd4d6ae733f6661019eab6c771ba5eec5ce6ac6513ab0388691a450505050565b60606006805480602002602001604051908101604052809291908181526020018280548015610d8d5760200282019190600052602060002090815481526020019060010190808311610d79575050505050905090565b60085460ff16156110b757600080fd5b6110bf610bb1565b6110c857600080fd5b6008805460ff191660011790556003546040805163af9da81f60e01b815230600482015290516001600160a01b039092169163af9da81f9160248082019260009290919082900301818387803b15801561112157600080fd5b505af1158015611135573d6000803e3d6000fd5b50506040513092507f231ba46a9796cfff3206eb206f870c5e4f68248af093e30cf9e3dd48857a6e669150600090a2565b61116e610bb1565b61117757600080fd5b6001600160a01b03811660009081526001602052604090205460ff1661119c57600080fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30acaa541089592567cd4ce36437c68778a43e66dc1a9e7031e4496faf4593259190a250565b6111ed610bb1565b6111f657600080fd5b6111ff81611202565b50565b6001600160a01b03811661121557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820c013e911c59939572fd8cfdf20eaba6c90118a91fb2fa3a0fc234bc240ae173b64736f6c63430005110032a265627a7a7231582038a74e8f62f26fc63f54dc5a3cd513515e9e2433c6f41424018698c953f8954a64736f6c63430005110032",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x2192 DUP1 PUSH2 0x57 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x12F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH3 0xB1 JUMPI DUP1 PUSH4 0xC0CC365D GT PUSH3 0x7B JUMPI DUP1 PUSH4 0xC0CC365D EQ PUSH3 0x455 JUMPI DUP1 PUSH4 0xE1AA071C EQ PUSH3 0x475 JUMPI DUP1 PUSH4 0xE23A845A EQ PUSH3 0x47F JUMPI DUP1 PUSH4 0xF0490B8A EQ PUSH3 0x489 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x4B2 JUMPI PUSH3 0x12F JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH3 0x3E6 JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH3 0x3F0 JUMPI DUP1 PUSH4 0xAC2F0074 EQ PUSH3 0x40C JUMPI DUP1 PUSH4 0xAF9DA81F EQ PUSH3 0x42C JUMPI PUSH3 0x12F JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D GT PUSH3 0xFF JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH3 0x34C JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH3 0x356 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x38A JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH3 0x394 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x3C0 JUMPI PUSH3 0x12F JUMP JUMPDEST DUP1 PUSH3 0xF63722 EQ PUSH3 0x134 JUMPI DUP1 PUSH4 0x10A8AECD EQ PUSH3 0x288 JUMPI DUP1 PUSH4 0x170B5ADD EQ PUSH3 0x2C5 JUMPI DUP1 PUSH4 0x2EA66401 EQ PUSH3 0x321 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH3 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH3 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH3 0x4DB SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH3 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x759 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x2CF PUSH3 0x777 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x30D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x7DA JUMP JUMPDEST STOP JUMPDEST PUSH3 0x34A PUSH3 0x864 JUMP JUMPDEST PUSH3 0x360 PUSH3 0x8AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH3 0x34A PUSH3 0x8D2 JUMP JUMPDEST PUSH3 0x39E PUSH3 0x930 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH3 0x3CA PUSH3 0x95B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x2B1 PUSH3 0x96A JUMP JUMPDEST PUSH3 0x3FA PUSH3 0x97B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x981 JUMP JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x9A9 JUMP JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x9F6 JUMP JUMPDEST PUSH3 0x3FA PUSH3 0xA51 JUMP JUMPDEST PUSH3 0x3FA PUSH3 0xA55 JUMP JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xA5B JUMP JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xADE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x4F1 SWAP1 PUSH3 0xB6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP6 MLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP5 MLOAD PUSH1 0x40 DUP5 ADD SWAP2 PUSH1 0x80 DUP6 ADD SWAP2 SWAP1 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x540 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x526 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x56E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP1 DUP8 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x58B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x5D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE DUP2 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP6 ADD DUP5 SWAP1 SSTORE DUP5 MLOAD DUP2 DUP2 MSTORE DUP13 MLOAD DUP2 DUP4 ADD MSTORE DUP13 MLOAD SWAP8 SWAP9 POP SWAP4 SWAP7 DUP8 SWAP6 SWAP4 SWAP5 PUSH32 0x7EA57775055A1D04B0E99841EBDDB0A6BF8CA4D1B0474329FDD201C5D3AC6C57 SWAP5 DUP15 SWAP5 SWAP2 SWAP4 DUP5 SWAP4 SWAP2 DUP5 ADD SWAP3 SWAP1 DUP7 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6B1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x697 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x6DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0xF2FDE38B SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x749 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP9 SWAP4 SWAP8 POP SWAP3 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x7D0 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x7BB JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x7E4 PUSH3 0x96A JUMP JUMPDEST PUSH3 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xFF9A8F4E0A39755C20C899B46171E470382709479FCE2AA1E388F95EDFE01739 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0x86F CALLER PUSH3 0x759 JUMP JUMPDEST PUSH3 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH3 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x892 PUSH3 0x96A JUMP JUMPDEST ISZERO PUSH3 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8A8 CALLER PUSH3 0xB00 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x8B9 PUSH3 0x95B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x8C7 CALLER PUSH3 0x759 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH3 0x8DC PUSH3 0x96A JUMP JUMPDEST PUSH3 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x940 CALLER PUSH3 0x759 JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH3 0x94F PUSH3 0x96A JUMP JUMPDEST ISZERO SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x98F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x231BA46A9796CFFF3206EB206F870C5E4F68248AF093E30CF9E3DD48857A6E66 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0xA00 PUSH3 0x96A JUMP JUMPDEST PUSH3 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x48BD2AD49200E0CA36B95736B1B720E3A4DB1EB87715905A0242D11E90FCF176 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH3 0xA65 PUSH3 0x96A JUMP JUMPDEST PUSH3 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x30ACAA541089592567CD4CE36437C68778A43E66DC1A9E7031E4496FAF459325 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0xAE8 PUSH3 0x96A JUMP JUMPDEST PUSH3 0xAF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xAFD DUP2 PUSH3 0xB00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xB14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x15E0 DUP1 PUSH3 0xB7E DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15E0 CODESIZE SUB DUP1 PUSH3 0x15E0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xBF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x174 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x15A JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 POP SWAP4 POP PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP3 POP DUP4 SWAP2 POP LOG3 PUSH1 0x0 DUP2 MLOAD GT PUSH3 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE DUP2 MLOAD PUSH3 0x207 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x286 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x27C JUMPI PUSH1 0x5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x224 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP3 DUP5 KECCAK256 ADD SSTORE PUSH1 0x6 DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP2 SWAP1 SWAP2 SSTORE ADD PUSH3 0x20B JUMP JUMPDEST POP POP POP POP PUSH3 0x32B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2C9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2F9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2F9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2F9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2DC JUMP JUMPDEST POP PUSH3 0x307 SWAP3 SWAP2 POP PUSH3 0x30B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x328 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x307 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x312 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12A5 DUP1 PUSH3 0x33B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xE1AA071C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE7B3387C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE7B3387C EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xED8C2AED EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xF0490B8A EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66D JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xE1AA071C EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xE23A845A EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xE5ED5B1E EQ PUSH2 0x5D5 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xB4545A87 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xC0CC365D EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xCC2EE196 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xDF1EDBE8 EQ PUSH2 0x585 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x709C9276 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x709C9276 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8D337B81 EQ PUSH2 0x419 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x597E1FB5 EQ PUSH2 0x37F JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x2D947EF EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x10A8AECD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x2EA66401 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x3C3A220D EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x409E2205 EQ PUSH2 0x301 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x210 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x92C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x98D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x996 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0xAE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0xBB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x571 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x559 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xF4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xF56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0x1051 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x10A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x6FD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0x724 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0x72D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD CALLER SWAP3 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x796 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x49800724769CFEAB686BBED287515C62B0780B3CA377AD4DC33A74A2B84EA8A5 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x855 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x855 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x838 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x883 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xFF9A8F4E0A39755C20C899B46171E470382709479FCE2AA1E388F95EDFE01739 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI INVALID JUMPDEST PUSH2 0x935 CALLER PUSH2 0x85D JUMP JUMPDEST PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x954 PUSH2 0xBB1 JUMP JUMPDEST ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x967 CALLER PUSH2 0x1202 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x976 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x982 CALLER PUSH2 0x85D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xA1A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA88 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D75737420626520686967686572207468616E20300000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP8 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 CALLER SWAP3 DUP8 SWAP3 PUSH32 0x5BD9C8CD0416570878F22361AA825B83E275AF1F5AD3AF2E353E1F498405B008 SWAP2 SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAF0 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xAF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB51 CALLER PUSH2 0x85D JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0xB5E PUSH2 0xBB1 JUMP JUMPDEST ISZERO SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP6 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP4 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0xC1F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xC46 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x65B12A532DDA3308398D0EA60C768A0BF2509DB55BF7F257C1087B14CFD3CFEF SWAP2 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCEF PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x48BD2AD49200E0CA36B95736B1B720E3A4DB1EB87715905A0242D11E90FCF176 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD79 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP3 AND SWAP1 CALLVALUE LT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E6473207472616E7366657272656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD CALLVALUE DUP3 SWAP1 SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 ISZERO PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP3 SLOAD PUSH2 0xFF00 NOT AND DUP4 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP10 AND SWAP1 PUSH32 0xB294C26EC0B075CCD4D6AE733F6661019EAB6C771BA5EEC5CE6AC6513AB03886 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xF7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xFDA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP9 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0xB294C26EC0B075CCD4D6AE733F6661019EAB6C771BA5EEC5CE6AC6513AB03886 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD79 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BF PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xAF9DA81F PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xAF9DA81F SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1135 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD ADDRESS SWAP3 POP PUSH32 0x231BA46A9796CFFF3206EB206F870C5E4F68248AF093E30CF9E3DD48857A6E66 SWAP2 POP PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x116E PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x30ACAA541089592567CD4CE36437C68778A43E66DC1A9E7031E4496FAF459325 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x11ED PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11FF DUP2 PUSH2 0x1202 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC0 SGT 0xE9 GT 0xC5 SWAP10 CODECOPY JUMPI 0x2F 0xD8 0xCF 0xDF KECCAK256 0xEA 0xBA PUSH13 0x90118A91FB2FA3A0FC234BC240 0xAE OR EXTCODESIZE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN LOG2 PUSH6 0x627A7A723158 KECCAK256 CODESIZE 0xA7 0x4E DUP16 PUSH3 0xF26FC6 EXTCODEHASH SLOAD 0xDC GAS EXTCODECOPY 0xD5 SGT MLOAD 0x5E SWAP15 0x24 CALLER 0xC6 DELEGATECALL EQ 0x24 ADD DUP7 SWAP9 0xC9 MSTORE8 0xF8 SWAP6 0x4A PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
                        "sourceMap": "238:1232:1:-;;;;;524:6:3;:19;;-1:-1:-1;;;;;;524:19:3;533:10;524:19;;;;-1:-1:-1;;;;;588:6:3;;555:40;;524:6;;555:40;238:1232:1;;;;;;"
                    },
                    "deployedBytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x12F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH3 0xB1 JUMPI DUP1 PUSH4 0xC0CC365D GT PUSH3 0x7B JUMPI DUP1 PUSH4 0xC0CC365D EQ PUSH3 0x455 JUMPI DUP1 PUSH4 0xE1AA071C EQ PUSH3 0x475 JUMPI DUP1 PUSH4 0xE23A845A EQ PUSH3 0x47F JUMPI DUP1 PUSH4 0xF0490B8A EQ PUSH3 0x489 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x4B2 JUMPI PUSH3 0x12F JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH3 0x3E6 JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH3 0x3F0 JUMPI DUP1 PUSH4 0xAC2F0074 EQ PUSH3 0x40C JUMPI DUP1 PUSH4 0xAF9DA81F EQ PUSH3 0x42C JUMPI PUSH3 0x12F JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D GT PUSH3 0xFF JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH3 0x34C JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH3 0x356 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x38A JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH3 0x394 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x3C0 JUMPI PUSH3 0x12F JUMP JUMPDEST DUP1 PUSH3 0xF63722 EQ PUSH3 0x134 JUMPI DUP1 PUSH4 0x10A8AECD EQ PUSH3 0x288 JUMPI DUP1 PUSH4 0x170B5ADD EQ PUSH3 0x2C5 JUMPI DUP1 PUSH4 0x2EA66401 EQ PUSH3 0x321 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH3 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH3 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH3 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH3 0x4DB SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH3 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x759 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x2CF PUSH3 0x777 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x30D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x7DA JUMP JUMPDEST STOP JUMPDEST PUSH3 0x34A PUSH3 0x864 JUMP JUMPDEST PUSH3 0x360 PUSH3 0x8AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH3 0x34A PUSH3 0x8D2 JUMP JUMPDEST PUSH3 0x39E PUSH3 0x930 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH3 0x3CA PUSH3 0x95B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x2B1 PUSH3 0x96A JUMP JUMPDEST PUSH3 0x3FA PUSH3 0x97B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x981 JUMP JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x9A9 JUMP JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH3 0x9F6 JUMP JUMPDEST PUSH3 0x3FA PUSH3 0xA51 JUMP JUMPDEST PUSH3 0x3FA PUSH3 0xA55 JUMP JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xA5B JUMP JUMPDEST PUSH3 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xADE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x4F1 SWAP1 PUSH3 0xB6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP6 MLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP5 MLOAD PUSH1 0x40 DUP5 ADD SWAP2 PUSH1 0x80 DUP6 ADD SWAP2 SWAP1 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x540 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x526 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x56E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP1 DUP8 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x58B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x5D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE DUP2 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP6 ADD DUP5 SWAP1 SSTORE DUP5 MLOAD DUP2 DUP2 MSTORE DUP13 MLOAD DUP2 DUP4 ADD MSTORE DUP13 MLOAD SWAP8 SWAP9 POP SWAP4 SWAP7 DUP8 SWAP6 SWAP4 SWAP5 PUSH32 0x7EA57775055A1D04B0E99841EBDDB0A6BF8CA4D1B0474329FDD201C5D3AC6C57 SWAP5 DUP15 SWAP5 SWAP2 SWAP4 DUP5 SWAP4 SWAP2 DUP5 ADD SWAP3 SWAP1 DUP7 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6B1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x697 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x6DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0xF2FDE38B SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x749 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP9 SWAP4 SWAP8 POP SWAP3 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x7D0 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x7BB JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x7E4 PUSH3 0x96A JUMP JUMPDEST PUSH3 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xFF9A8F4E0A39755C20C899B46171E470382709479FCE2AA1E388F95EDFE01739 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0x86F CALLER PUSH3 0x759 JUMP JUMPDEST PUSH3 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH3 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x892 PUSH3 0x96A JUMP JUMPDEST ISZERO PUSH3 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8A8 CALLER PUSH3 0xB00 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x8B9 PUSH3 0x95B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x8C7 CALLER PUSH3 0x759 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH3 0x8DC PUSH3 0x96A JUMP JUMPDEST PUSH3 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x940 CALLER PUSH3 0x759 JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH3 0x94F PUSH3 0x96A JUMP JUMPDEST ISZERO SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x98F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x231BA46A9796CFFF3206EB206F870C5E4F68248AF093E30CF9E3DD48857A6E66 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0xA00 PUSH3 0x96A JUMP JUMPDEST PUSH3 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x48BD2AD49200E0CA36B95736B1B720E3A4DB1EB87715905A0242D11E90FCF176 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH3 0xA65 PUSH3 0x96A JUMP JUMPDEST PUSH3 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x30ACAA541089592567CD4CE36437C68778A43E66DC1A9E7031E4496FAF459325 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0xAE8 PUSH3 0x96A JUMP JUMPDEST PUSH3 0xAF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xAFD DUP2 PUSH3 0xB00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xB14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x15E0 DUP1 PUSH3 0xB7E DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15E0 CODESIZE SUB DUP1 PUSH3 0x15E0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xBF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x174 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x15A JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 POP SWAP4 POP PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP3 POP DUP4 SWAP2 POP LOG3 PUSH1 0x0 DUP2 MLOAD GT PUSH3 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE DUP2 MLOAD PUSH3 0x207 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x286 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x27C JUMPI PUSH1 0x5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x224 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP3 DUP5 KECCAK256 ADD SSTORE PUSH1 0x6 DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP2 SWAP1 SWAP2 SSTORE ADD PUSH3 0x20B JUMP JUMPDEST POP POP POP POP PUSH3 0x32B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2C9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2F9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2F9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2F9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2DC JUMP JUMPDEST POP PUSH3 0x307 SWAP3 SWAP2 POP PUSH3 0x30B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x328 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x307 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x312 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12A5 DUP1 PUSH3 0x33B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xE1AA071C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE7B3387C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE7B3387C EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xED8C2AED EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xF0490B8A EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66D JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xE1AA071C EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xE23A845A EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xE5ED5B1E EQ PUSH2 0x5D5 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xB4545A87 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xC0CC365D EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xCC2EE196 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xDF1EDBE8 EQ PUSH2 0x585 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x709C9276 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x709C9276 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8D337B81 EQ PUSH2 0x419 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x597E1FB5 EQ PUSH2 0x37F JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x2D947EF EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x10A8AECD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x2EA66401 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x3C3A220D EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x409E2205 EQ PUSH2 0x301 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x210 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x92C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x98D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x996 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0xAE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0xBB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x571 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x559 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xF4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0xF50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xF56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0x1051 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x10A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x6FD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0x724 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0x72D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD CALLER SWAP3 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x796 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x49800724769CFEAB686BBED287515C62B0780B3CA377AD4DC33A74A2B84EA8A5 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x855 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x855 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x838 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x883 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xFF9A8F4E0A39755C20C899B46171E470382709479FCE2AA1E388F95EDFE01739 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI INVALID JUMPDEST PUSH2 0x935 CALLER PUSH2 0x85D JUMP JUMPDEST PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x954 PUSH2 0xBB1 JUMP JUMPDEST ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x967 CALLER PUSH2 0x1202 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x976 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x982 CALLER PUSH2 0x85D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xA1A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA88 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D75737420626520686967686572207468616E20300000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP8 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 CALLER SWAP3 DUP8 SWAP3 PUSH32 0x5BD9C8CD0416570878F22361AA825B83E275AF1F5AD3AF2E353E1F498405B008 SWAP2 SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAF0 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xAF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB51 CALLER PUSH2 0x85D JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0xB5E PUSH2 0xBB1 JUMP JUMPDEST ISZERO SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP6 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP4 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0xC1F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xC46 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND DUP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x65B12A532DDA3308398D0EA60C768A0BF2509DB55BF7F257C1087B14CFD3CFEF SWAP2 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCEF PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x48BD2AD49200E0CA36B95736B1B720E3A4DB1EB87715905A0242D11E90FCF176 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD79 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP3 AND SWAP1 CALLVALUE LT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E6473207472616E7366657272656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD CALLVALUE DUP3 SWAP1 SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 ISZERO PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP3 SLOAD PUSH2 0xFF00 NOT AND DUP4 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP10 AND SWAP1 PUSH32 0xB294C26EC0B075CCD4D6AE733F6661019EAB6C771BA5EEC5CE6AC6513AB03886 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xF7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST DUP1 PUSH2 0xFDA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER EQ JUMPDEST PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP9 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0xB294C26EC0B075CCD4D6AE733F6661019EAB6C771BA5EEC5CE6AC6513AB03886 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD79 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BF PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xAF9DA81F PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xAF9DA81F SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1135 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD ADDRESS SWAP3 POP PUSH32 0x231BA46A9796CFFF3206EB206F870C5E4F68248AF093E30CF9E3DD48857A6E66 SWAP2 POP PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x116E PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x30ACAA541089592567CD4CE36437C68778A43E66DC1A9E7031E4496FAF459325 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x11ED PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11FF DUP2 PUSH2 0x1202 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC0 SGT 0xE9 GT 0xC5 SWAP10 CODECOPY JUMPI 0x2F 0xD8 0xCF 0xDF KECCAK256 0xEA 0xBA PUSH13 0x90118A91FB2FA3A0FC234BC240 0xAE OR EXTCODESIZE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN LOG2 PUSH6 0x627A7A723158 KECCAK256 CODESIZE 0xA7 0x4E DUP16 PUSH3 0xF26FC6 EXTCODEHASH SLOAD 0xDC GAS EXTCODECOPY 0xD5 SGT MLOAD 0x5E SWAP15 0x24 CALLER 0xC6 DELEGATECALL EQ 0x24 ADD DUP7 SWAP9 0xC9 MSTORE8 0xF8 SWAP6 0x4A PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
                        "sourceMap": "238:1232:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:1232:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:500;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;512:500:1;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;512:500:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;512:500:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;512:500:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;512:500:1;;;;;;;;-1:-1:-1;512:500:1;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;512:500:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;512:500:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;512:500:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;512:500:1;;-1:-1:-1;512:500:1;;-1:-1:-1;;;;;512:500:1:i;:::-;;;;;;;-1:-1:-1;;;;;512:500:1;;;;;;;;;;;;;;;;1980:108:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1980:108:2;-1:-1:-1;;;;;1980:108:2;;:::i;:::-;;;;;;;;;;;;;;;;;;1156:105:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1156:105:1;;;;;;;;;;;;;;;;;1168:227:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1168:227:2;-1:-1:-1;;;;;1168:227:2;;:::i;:::-;;2945:192;;;:::i;3780:132::-;;;:::i;:::-;;;;-1:-1:-1;;;;;3780:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:130:3;;;:::i;3393:145:2:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:72:3;;;:::i;:::-;;;;-1:-1:-1;;;;;659:72:3;;;;;;;;;;;;;;957:85;;;:::i;1380:88:1:-;;;:::i;:::-;;;;;;;;;;;;;;;;281:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;281:19:1;;:::i;1018:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1018:132:1;-1:-1:-1;;;;;1018:132:1;;:::i;2287:232:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2287:232:2;;:::i;3920:76::-;;;:::i;2661:96::-;;;:::i;1534:213::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1534:213:2;-1:-1:-1;;;;;1534:213:2;;:::i;1603:103:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1603:103:3;-1:-1:-1;;;;;1603:103:3;;:::i;512:500:1:-;595:4;601:7;620:10;642:4;648:5;655:8;633:31;;;;;:::i;:::-;-1:-1:-1;;;;;633:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;633:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;633:31:1;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;633:31:1;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;691:5:1;27:10:-1;;39:1;23:18;;;45:23;;691:17:1;;;;;;-1:-1:-1;;;;;;691:17:1;-1:-1:-1;;;;;691:17:1;;;;;;;;732:12;;771:10;-1:-1:-1;758:24:1;;;:12;691:17;758:24;;;;;;;27:10:-1;;23:18;;;45:23;;758:37:1;;;;;-1:-1:-1;;732:16:1;;;758:37;;;;;;;811:54;;;;;;;;;;;;;691:17;;-1:-1:-1;732:16:1;;;;771:10;;811:54;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;811:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;876:35;;;-1:-1:-1;;;876:35:1;;900:10;876:35;;;;;;-1:-1:-1;;;;;876:23:1;;;;;:35;;;;;-1:-1:-1;;876:35:1;;;;;;;-1:-1:-1;876:23:1;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;876:35:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;982:6:1;;998:5;;-1:-1:-1;512:500:1;;-1:-1:-1;;;;;;512:500:1:o;1980:108:2:-;-1:-1:-1;;;;;2062:18:2;2038:4;2062:18;;;:8;:18;;;;;;;;;1980:108::o;1156:105:1:-;1243:10;1230:24;;;;:12;:24;;;;;;;;;1223:31;;;;;;;;;;;;;;;;;1198:13;;1223:31;;;1230:24;1223:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:105;:::o;1168:227:2:-;850:9:3;:7;:9::i;:::-;842:18;;;;;;-1:-1:-1;;;;;1244:18:2;;;;;;:8;:18;;;;;;;;1242:20;1234:30;;;;;;-1:-1:-1;;;;;1323:18:2;;;;;;1344:4;1323:18;;;;;;;;:25;;-1:-1:-1;;1323:25:2;;;;;;;1364:23;;;1323:18;1364:23;1168:227;:::o;2945:192::-;2988:21;2998:10;2988:9;:21::i;:::-;2980:30;;;;;;3035:14;;3029:3;:20;3021:29;;;;;;3070:9;:7;:9::i;:::-;3069:10;3061:19;;;;;;3093:30;3112:10;3093:18;:30::i;:::-;2945:192::o;3780:132::-;3817:7;3826:4;3832;3857:7;:5;:7::i;:::-;3866:14;;3882:21;3892:10;3882:9;:21::i;:::-;3849:55;;;;;;3780:132;;;:::o;1309:130:3:-;850:9;:7;:9::i;:::-;842:18;;;;;;1404:1;1388:6;;1367:40;;-1:-1:-1;;;;;1388:6:3;;;;1367:40;;1404:1;;1367:40;1431:1;1414:19;;-1:-1:-1;;;;;;1414:19:3;;;1309:130::o;3393:145:2:-;3437:4;3443;3449;3474:21;3484:10;3474:9;:21::i;:::-;3503:14;;3497:3;:20;3520:9;:7;:9::i;:::-;3519:10;3466:64;;;;;;3393:145;;;:::o;659:72:3:-;696:7;719:6;-1:-1:-1;;;;;719:6:3;659:72;:::o;957:85::-;996:4;1030:6;-1:-1:-1;;;;;1030:6:3;1016:10;:20;;957:85::o;1380:88:1:-;1449:5;:12;1380:88;:::o;281:19::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;281:19:1;;-1:-1:-1;281:19:1;:::o;1018:132::-;1074:10;-1:-1:-1;;;;;1074:27:1;;;1066:36;;;;;;1118:25;;-1:-1:-1;;;;;1118:25:1;;;;;;;;1018:132;:::o;2287:232:2:-;850:9:3;:7;:9::i;:::-;842:18;;;;;;2385:14:2;;;2412:32;;;;2462:49;;;;;;;;;;;;;;;;;;;;;;;;;867:1:3;2287:232:2;:::o;3920:76::-;3985:3;3920:76;:::o;2661:96::-;2735:14;;2661:96;:::o;1534:213::-;850:9:3;:7;:9::i;:::-;842:18;;;;;;-1:-1:-1;;;;;1611:18:2;;;;;;:8;:18;;;;;;;;1603:28;;;;;;-1:-1:-1;;;;;1673:18:2;;1694:5;1673:18;;;:8;:18;;;;;;:26;;-1:-1:-1;;1673:26:2;;;1715:24;;;1694:5;1715:24;1534:213;:::o;1603:103:3:-;850:9;:7;:9::i;:::-;842:18;;;;;;1672:28;1691:8;1672:18;:28::i;:::-;1603:103;:::o;1843:173::-;-1:-1:-1;;;;;1913:22:3;;1905:31;;;;;;1969:6;;;1948:38;;-1:-1:-1;;;;;1948:38:3;;;;1969:6;;;1948:38;;;1993:6;:17;;-1:-1:-1;;;;;;1993:17:3;-1:-1:-1;;;;;1993:17:3;;;;;;;;;;1843:173::o;238:1232:1:-;;;;;;;;:::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "1718800",
                            "executionCost": "24159",
                            "totalCost": "1742959"
                        },
                        "external": {
                            "addClaimer(address)": "24139",
                            "claim()": "26079",
                            "createPoll(string,bytes32[])": "infinite",
                            "debugnow()": "241",
                            "getCount()": "1043",
                            "getExpirationTime()": "1064",
                            "getMyPolls()": "infinite",
                            "isClaimable()": "2951",
                            "isClaimer(address)": "1200",
                            "isOwner()": "1050",
                            "owner()": "1148",
                            "pollClosed(address)": "1502",
                            "polls(uint256)": "2037",
                            "read()": "2909",
                            "removeClaimer(address)": "24116",
                            "renounceOwnership()": "24259",
                            "setExpirationTime(uint256)": "23237",
                            "transferOwnership(address)": "24468"
                        }
                    },
                    "methodIdentifiers": {
                        "addClaimer(address)": "2ea66401",
                        "claim()": "4e71d92d",
                        "createPoll(string,bytes32[])": "00f63722",
                        "debugnow()": "e1aa071c",
                        "getCount()": "a87d942c",
                        "getExpirationTime()": "e23a845a",
                        "getMyPolls()": "170b5add",
                        "isClaimable()": "74478bb3",
                        "isClaimer(address)": "10a8aecd",
                        "isOwner()": "8f32d59b",
                        "owner()": "8da5cb5b",
                        "pollClosed(address)": "af9da81f",
                        "polls(uint256)": "ac2f0074",
                        "read()": "57de26a4",
                        "removeClaimer(address)": "f0490b8a",
                        "renounceOwnership()": "715018a6",
                        "setExpirationTime(uint256)": "c0cc365d",
                        "transferOwnership(address)": "f2fde38b"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldExpiration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExpiration\",\"type\":\"uint256\"}],\"name\":\"ExpirationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pollAddr\",\"type\":\"address\"}],\"name\":\"PollClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pollAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"PollCreated\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"addClaimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"_options\",\"type\":\"bytes32[]\"}],\"name\":\"createPoll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"debugnow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getExpirationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyPolls\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isClaimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"isClaimer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract Poll\",\"name\":\"poll\",\"type\":\"address\"}],\"name\":\"pollClosed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"polls\",\"outputs\":[{\"internalType\":\"contract Poll\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"removeClaimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_expirationTime\",\"type\":\"uint256\"}],\"name\":\"setExpirationTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addClaimer(address)\":{\"params\":{\"_claimer\":\"address of the claimer to be added\"}},\"getExpirationTime()\":{\"return\":\"uint with the expiration time\"},\"isClaimable()\":{\"details\":\"The contract is claimable when the 3 results are true.\",\"return\":\"bool: is a claimer, bool: is expired, bool: is not owner\"},\"isClaimer(address)\":{\"params\":{\"_claimer\":\"address to verify\"},\"return\":\"true if the caller has been added as claimer, false, otherwise\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"read()\":{\"return\":\"(address: owner of this contract, uint: the expiration date, bool: is caller a claimers?)\"},\"removeClaimer(address)\":{\"params\":{\"_claimer\":\"address of the claimer to be removed\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"setExpirationTime(uint256)\":{\"params\":{\"_expirationTime\":\"the new expiration time for this contract\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"addClaimer(address)\":{\"notice\":\"Adds a new claimer to the contract\"},\"claim()\":{\"notice\":\"Claim ownership of the contract, once the max inactive time is reached.  Only addresses in claimers can claim, unless the array is empty.\"},\"getExpirationTime()\":{\"notice\":\"Gets the current expiration time set in this contract\"},\"isClaimable()\":{\"notice\":\"Checks if the expiration date is passed and contract can be claimed.\"},\"isClaimer(address)\":{\"notice\":\"returns true if the caller has been added as claimer on this contract\"},\"read()\":{\"notice\":\"returns the owner of this contract, the expiration date and if the caller is one of the claimers\"},\"removeClaimer(address)\":{\"notice\":\"Removes a claimer from the contract\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setExpirationTime(uint256)\":{\"notice\":\"allows the owner to set a new expiration time to extend the ownership of this contract\"}},\"notice\":\"This contract allows for the creation and management of Polls\"}},\"settings\":{\"compilationTarget\":{\"/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol\":\"PollingStation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/gmussi/git/solidity-voting/contracts/Poll.sol\":{\"keccak256\":\"0x23068dad036d4b0e2e2a11d9bda176b7b8d982732069154faea7bb9c77146b4e\",\"urls\":[\"bzz-raw://67591ee53c81039badf713ad581281a960a70f9f00aaee095b815ac478016cdb\",\"dweb:/ipfs/QmcgGW56NYi7YQHxid9BKS8bCGacW3qxakFFM3WMzenvVd\"]},\"/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol\":{\"keccak256\":\"0x382699a44f30351de21e7f102ee4037d38b882f7d8d98c1af9ee7fbade98a863\",\"urls\":[\"bzz-raw://2ef40bce22503dbec131901c8b3c65a5bf961608982cc6cf1be24ecbcf324394\",\"dweb:/ipfs/QmchbjQk7WhNrVxD9p5XTBZk3vngwJMTeY2e1Sueyze8fe\"]},\"/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol\":{\"keccak256\":\"0xab82ae6e842f054c461d255983aa378db932d67a9eb5903daaadfca204d09e98\",\"urls\":[\"bzz-raw://4013755d13fbccfb1fc6536a36a5bc148e67c700e1162621dfd5f651a16fc480\",\"dweb:/ipfs/QmSLuCvpwHrCBCoN3oaZDEA9szuBzF7BGhy92C2cfFRpxF\"]},\"/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol\":{\"keccak256\":\"0x4144486887fa7f998f0759de5a0647475729e2fa88110c442dafd38d8cb06c40\",\"urls\":[\"bzz-raw://22ba5fe3c1c1ef94d71ebee14a36f1e787c494a6a13ba0450325f4273a8faf76\",\"dweb:/ipfs/QmfFJGrQFFfYrB2wwGJRyv51uqjL1ZCYqSyGH61mBbe9V3\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 846,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol:PollingStation",
                            "label": "_owner",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_address"
                        },
                        {
                            "astId": 658,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol:PollingStation",
                            "label": "claimers",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_mapping(t_address,t_bool)"
                        },
                        {
                            "astId": 660,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol:PollingStation",
                            "label": "expirationTime",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 504,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol:PollingStation",
                            "label": "polls",
                            "offset": 0,
                            "slot": "3",
                            "type": "t_array(t_contract(Poll)495)dyn_storage"
                        },
                        {
                            "astId": 509,
                            "contract": "/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol:PollingStation",
                            "label": "pollByOwners",
                            "offset": 0,
                            "slot": "4",
                            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_contract(Poll)495)dyn_storage": {
                            "base": "t_contract(Poll)495",
                            "encoding": "dynamic_array",
                            "label": "contract Poll[]",
                            "numberOfBytes": "32"
                        },
                        "t_array(t_uint256)dyn_storage": {
                            "base": "t_uint256",
                            "encoding": "dynamic_array",
                            "label": "uint256[]",
                            "numberOfBytes": "32"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_contract(Poll)495": {
                            "encoding": "inplace",
                            "label": "contract Poll",
                            "numberOfBytes": "20"
                        },
                        "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => uint256[])",
                            "numberOfBytes": "32",
                            "value": "t_array(t_uint256)dyn_storage"
                        },
                        "t_mapping(t_address,t_bool)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => bool)",
                            "numberOfBytes": "32",
                            "value": "t_bool"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "userdoc": {
                    "methods": {
                        "addClaimer(address)": {
                            "notice": "Adds a new claimer to the contract"
                        },
                        "claim()": {
                            "notice": "Claim ownership of the contract, once the max inactive time is reached.  Only addresses in claimers can claim, unless the array is empty."
                        },
                        "getExpirationTime()": {
                            "notice": "Gets the current expiration time set in this contract"
                        },
                        "isClaimable()": {
                            "notice": "Checks if the expiration date is passed and contract can be claimed."
                        },
                        "isClaimer(address)": {
                            "notice": "returns true if the caller has been added as claimer on this contract"
                        },
                        "read()": {
                            "notice": "returns the owner of this contract, the expiration date and if the caller is one of the claimers"
                        },
                        "removeClaimer(address)": {
                            "notice": "Removes a claimer from the contract"
                        },
                        "renounceOwnership()": {
                            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
                        },
                        "setExpirationTime(uint256)": {
                            "notice": "allows the owner to set a new expiration time to extend the ownership of this contract"
                        }
                    },
                    "notice": "This contract allows for the creation and management of Polls"
                }
            }
        },
        "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol": {
            "Claimable": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimer",
                                "type": "address"
                            }
                        ],
                        "name": "ClaimerAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "claimer",
                                "type": "address"
                            }
                        ],
                        "name": "ClaimerRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "oldExpiration",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newExpiration",
                                "type": "uint256"
                            }
                        ],
                        "name": "ExpirationUpdated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_claimer",
                                "type": "address"
                            }
                        ],
                        "name": "addClaimer",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "claim",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "debugnow",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getExpirationTime",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "isClaimable",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_claimer",
                                "type": "address"
                            }
                        ],
                        "name": "isClaimer",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "isOwner",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "read",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_claimer",
                                "type": "address"
                            }
                        ],
                        "name": "removeClaimer",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "renounceOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_expirationTime",
                                "type": "uint256"
                            }
                        ],
                        "name": "setExpirationTime",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "The claimable contract allows the owner to specify addresses who can claim the ownership of this contract,   after a specified time. This is a safe-guard should the owner ever lose access to their keys.   * A claimable contract with an expiration date defined, but no claimers specified, can be claimed by anyone once the time is expired. The owner can change this time periodically, to ensure ownership of the contract while the key is safe.",
                    "methods": {
                        "addClaimer(address)": {
                            "params": {
                                "_claimer": "address of the claimer to be added"
                            }
                        },
                        "getExpirationTime()": {
                            "return": "uint with the expiration time"
                        },
                        "isClaimable()": {
                            "details": "The contract is claimable when the 3 results are true.",
                            "return": "bool: is a claimer, bool: is expired, bool: is not owner"
                        },
                        "isClaimer(address)": {
                            "params": {
                                "_claimer": "address to verify"
                            },
                            "return": "true if the caller has been added as claimer, false, otherwise"
                        },
                        "isOwner()": {
                            "return": "true if `msg.sender` is the owner of the contract."
                        },
                        "owner()": {
                            "return": "the address of the owner."
                        },
                        "read()": {
                            "return": "(address: owner of this contract, uint: the expiration date, bool: is caller a claimers?)"
                        },
                        "removeClaimer(address)": {
                            "params": {
                                "_claimer": "address of the claimer to be removed"
                            }
                        },
                        "renounceOwnership()": {
                            "details": "Allows the current owner to relinquish control of the contract."
                        },
                        "setExpirationTime(uint256)": {
                            "params": {
                                "_expirationTime": "the new expiration time for this contract"
                            }
                        },
                        "transferOwnership(address)": {
                            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                            "params": {
                                "newOwner": "The address to transfer ownership to."
                            }
                        }
                    },
                    "title": "Claimable"
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36105a1806100576000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063e1aa071c11610066578063e1aa071c146101eb578063e23a845a14610205578063f0490b8a1461020d578063f2fde38b14610233576100cf565b80638da5cb5b146101a25780638f32d59b146101c6578063c0cc365d146101ce576100cf565b806310a8aecd146100d45780632ea664011461010e5780634e71d92d1461013657806357de26a41461013e578063715018a61461017057806374478bb314610178575b600080fd5b6100fa600480360360208110156100ea57600080fd5b50356001600160a01b0316610259565b604080519115158252519081900360200190f35b6101346004803603602081101561012457600080fd5b50356001600160a01b0316610277565b005b6101346102fd565b61014661033a565b604080516001600160a01b0390941684526020840192909252151582820152519081900360600190f35b61013461035e565b6101806103b9565b6040805193151584529115156020840152151582820152519081900360600190f35b6101aa6103e0565b604080516001600160a01b039092168252519081900360200190f35b6100fa6103ef565b610134600480360360208110156101e457600080fd5b5035610400565b6101f3610458565b60408051918252519081900360200190f35b6101f361045c565b6101346004803603602081101561022357600080fd5b50356001600160a01b0316610462565b6101346004803603602081101561024957600080fd5b50356001600160a01b03166104e1565b6001600160a01b031660009081526001602052604090205460ff1690565b61027f6103ef565b61028857600080fd5b6001600160a01b03811660009081526001602052604090205460ff16156102ae57600080fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fff9a8f4e0a39755c20c899b46171e470382709479fce2aa1e388f95edfe017399190a250565b61030633610259565b61030f57600080fd5b600254421161031d57600080fd5b6103256103ef565b1561032f57600080fd5b610338336104fe565b565b60008060006103476103e0565b60025461035333610259565b925092509250909192565b6103666103ef565b61036f57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60008060006103c733610259565b60025442116103d46103ef565b15925092509250909192565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6104086103ef565b61041157600080fd5b6002805490829055604080518281526020810184905281517f48bd2ad49200e0ca36b95736b1b720e3a4db1eb87715905a0242d11e90fcf176929181900390910190a15050565b4290565b60025490565b61046a6103ef565b61047357600080fd5b6001600160a01b03811660009081526001602052604090205460ff1661049857600080fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30acaa541089592567cd4ce36437c68778a43e66dc1a9e7031e4496faf4593259190a250565b6104e96103ef565b6104f257600080fd5b6104fb816104fe565b50565b6001600160a01b03811661051157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a723158208fcec7dbd5217c1e6b7f73b7ce8277a6bc26616d7395ce0747f3f198ef10597764736f6c63430005110032",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x5A1 DUP1 PUSH2 0x57 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE1AA071C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE1AA071C EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xE23A845A EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xF0490B8A EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC0CC365D EQ PUSH2 0x1CE JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x10A8AECD EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2EA66401 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x277 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x146 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x180 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x400 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x45C JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x462 JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xFF9A8F4E0A39755C20C899B46171E470382709479FCE2AA1E388F95EDFE01739 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x306 CALLER PUSH2 0x259 JUMP JUMPDEST PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x325 PUSH2 0x3EF JUMP JUMPDEST ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x338 CALLER PUSH2 0x4FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x347 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x353 CALLER PUSH2 0x259 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x366 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3C7 CALLER PUSH2 0x259 JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x3D4 PUSH2 0x3EF JUMP JUMPDEST ISZERO SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x408 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x48BD2AD49200E0CA36B95736B1B720E3A4DB1EB87715905A0242D11E90FCF176 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x30ACAA541089592567CD4CE36437C68778A43E66DC1A9E7031E4496FAF459325 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4E9 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB DUP2 PUSH2 0x4FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP16 0xCE 0xC7 0xDB 0xD5 0x21 PUSH29 0x1E6B7F73B7CE8277A6BC26616D7395CE0747F3F198EF10597764736F6C PUSH4 0x43000511 STOP ORIGIN ",
                        "sourceMap": "548:3451:2:-;;;;;524:6:3;:19;;-1:-1:-1;;;;;;524:19:3;533:10;524:19;;;;-1:-1:-1;;;;;588:6:3;;555:40;;524:6;;555:40;548:3451:2;;;;;;"
                    },
                    "deployedBytecode": {
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063e1aa071c11610066578063e1aa071c146101eb578063e23a845a14610205578063f0490b8a1461020d578063f2fde38b14610233576100cf565b80638da5cb5b146101a25780638f32d59b146101c6578063c0cc365d146101ce576100cf565b806310a8aecd146100d45780632ea664011461010e5780634e71d92d1461013657806357de26a41461013e578063715018a61461017057806374478bb314610178575b600080fd5b6100fa600480360360208110156100ea57600080fd5b50356001600160a01b0316610259565b604080519115158252519081900360200190f35b6101346004803603602081101561012457600080fd5b50356001600160a01b0316610277565b005b6101346102fd565b61014661033a565b604080516001600160a01b0390941684526020840192909252151582820152519081900360600190f35b61013461035e565b6101806103b9565b6040805193151584529115156020840152151582820152519081900360600190f35b6101aa6103e0565b604080516001600160a01b039092168252519081900360200190f35b6100fa6103ef565b610134600480360360208110156101e457600080fd5b5035610400565b6101f3610458565b60408051918252519081900360200190f35b6101f361045c565b6101346004803603602081101561022357600080fd5b50356001600160a01b0316610462565b6101346004803603602081101561024957600080fd5b50356001600160a01b03166104e1565b6001600160a01b031660009081526001602052604090205460ff1690565b61027f6103ef565b61028857600080fd5b6001600160a01b03811660009081526001602052604090205460ff16156102ae57600080fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fff9a8f4e0a39755c20c899b46171e470382709479fce2aa1e388f95edfe017399190a250565b61030633610259565b61030f57600080fd5b600254421161031d57600080fd5b6103256103ef565b1561032f57600080fd5b610338336104fe565b565b60008060006103476103e0565b60025461035333610259565b925092509250909192565b6103666103ef565b61036f57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60008060006103c733610259565b60025442116103d46103ef565b15925092509250909192565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6104086103ef565b61041157600080fd5b6002805490829055604080518281526020810184905281517f48bd2ad49200e0ca36b95736b1b720e3a4db1eb87715905a0242d11e90fcf176929181900390910190a15050565b4290565b60025490565b61046a6103ef565b61047357600080fd5b6001600160a01b03811660009081526001602052604090205460ff1661049857600080fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30acaa541089592567cd4ce36437c68778a43e66dc1a9e7031e4496faf4593259190a250565b6104e96103ef565b6104f257600080fd5b6104fb816104fe565b50565b6001600160a01b03811661051157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a723158208fcec7dbd5217c1e6b7f73b7ce8277a6bc26616d7395ce0747f3f198ef10597764736f6c63430005110032",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE1AA071C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE1AA071C EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xE23A845A EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xF0490B8A EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC0CC365D EQ PUSH2 0x1CE JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x10A8AECD EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2EA66401 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x277 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x146 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x180 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x400 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x45C JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x462 JUMP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xFF9A8F4E0A39755C20C899B46171E470382709479FCE2AA1E388F95EDFE01739 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x306 CALLER PUSH2 0x259 JUMP JUMPDEST PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x325 PUSH2 0x3EF JUMP JUMPDEST ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x338 CALLER PUSH2 0x4FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x347 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x353 CALLER PUSH2 0x259 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x366 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3C7 CALLER PUSH2 0x259 JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x3D4 PUSH2 0x3EF JUMP JUMPDEST ISZERO SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x408 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x48BD2AD49200E0CA36B95736B1B720E3A4DB1EB87715905A0242D11E90FCF176 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x30ACAA541089592567CD4CE36437C68778A43E66DC1A9E7031E4496FAF459325 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4E9 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB DUP2 PUSH2 0x4FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP16 0xCE 0xC7 0xDB 0xD5 0x21 PUSH29 0x1E6B7F73B7CE8277A6BC26616D7395CE0747F3F198EF10597764736F6C PUSH4 0x43000511 STOP ORIGIN ",
                        "sourceMap": "548:3451:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;548:3451:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1980:108:2;-1:-1:-1;;;;;1980:108:2;;:::i;:::-;;;;;;;;;;;;;;;;;;1168:227;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1168:227:2;-1:-1:-1;;;;;1168:227:2;;:::i;:::-;;2945:192;;;:::i;3780:132::-;;;:::i;:::-;;;;-1:-1:-1;;;;;3780:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:130:3;;;:::i;3393:145:2:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:72:3;;;:::i;:::-;;;;-1:-1:-1;;;;;659:72:3;;;;;;;;;;;;;;957:85;;;:::i;2287:232:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2287:232:2;;:::i;3920:76::-;;;:::i;:::-;;;;;;;;;;;;;;;;2661:96;;;:::i;1534:213::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1534:213:2;-1:-1:-1;;;;;1534:213:2;;:::i;1603:103:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1603:103:3;-1:-1:-1;;;;;1603:103:3;;:::i;1980:108:2:-;-1:-1:-1;;;;;2062:18:2;2038:4;2062:18;;;:8;:18;;;;;;;;;1980:108::o;1168:227::-;850:9:3;:7;:9::i;:::-;842:18;;;;;;-1:-1:-1;;;;;1244:18:2;;;;;;:8;:18;;;;;;;;1242:20;1234:30;;;;;;-1:-1:-1;;;;;1323:18:2;;;;;;1344:4;1323:18;;;;;;;;:25;;-1:-1:-1;;1323:25:2;;;;;;;1364:23;;;1323:18;1364:23;1168:227;:::o;2945:192::-;2988:21;2998:10;2988:9;:21::i;:::-;2980:30;;;;;;3035:14;;3029:3;:20;3021:29;;;;;;3070:9;:7;:9::i;:::-;3069:10;3061:19;;;;;;3093:30;3112:10;3093:18;:30::i;:::-;2945:192::o;3780:132::-;3817:7;3826:4;3832;3857:7;:5;:7::i;:::-;3866:14;;3882:21;3892:10;3882:9;:21::i;:::-;3849:55;;;;;;3780:132;;;:::o;1309:130:3:-;850:9;:7;:9::i;:::-;842:18;;;;;;1404:1;1388:6;;1367:40;;-1:-1:-1;;;;;1388:6:3;;;;1367:40;;1404:1;;1367:40;1431:1;1414:19;;-1:-1:-1;;;;;;1414:19:3;;;1309:130::o;3393:145:2:-;3437:4;3443;3449;3474:21;3484:10;3474:9;:21::i;:::-;3503:14;;3497:3;:20;3520:9;:7;:9::i;:::-;3519:10;3466:64;;;;;;3393:145;;;:::o;659:72:3:-;696:7;719:6;-1:-1:-1;;;;;719:6:3;659:72;:::o;957:85::-;996:4;1030:6;-1:-1:-1;;;;;1030:6:3;1016:10;:20;;957:85::o;2287:232:2:-;850:9:3;:7;:9::i;:::-;842:18;;;;;;2385:14:2;;;2412:32;;;;2462:49;;;;;;;;;;;;;;;;;;;;;;;;;867:1:3;2287:232:2;:::o;3920:76::-;3985:3;3920:76;:::o;2661:96::-;2735:14;;2661:96;:::o;1534:213::-;850:9:3;:7;:9::i;:::-;842:18;;;;;;-1:-1:-1;;;;;1611:18:2;;;;;;:8;:18;;;;;;;;1603:28;;;;;;-1:-1:-1;;;;;1673:18:2;;1694:5;1673:18;;;:8;:18;;;;;;:26;;-1:-1:-1;;1673:26:2;;;1715:24;;;1694:5;1715:24;1534:213;:::o;1603:103:3:-;850:9;:7;:9::i;:::-;842:18;;;;;;1672:28;1691:8;1672:18;:28::i;:::-;1603:103;:::o;1843:173::-;-1:-1:-1;;;;;1913:22:3;;1905:31;;;;;;1969:6;;;1948:38;;-1:-1:-1;;;;;1948:38:3;;;;1969:6;;;1948:38;;;1993:6;:17;;-1:-1:-1;;;;;;1993:17:3;-1:-1:-1;;;;;1993:17:3;;;;;;;;;;1843:173::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "288200",
                            "executionCost": "22684",
                            "totalCost": "310884"
                        },
                        "external": {
                            "addClaimer(address)": "24072",
                            "claim()": "26101",
                            "debugnow()": "219",
                            "getExpirationTime()": "1042",
                            "isClaimable()": "2973",
                            "isClaimer(address)": "1155",
                            "isOwner()": "1072",
                            "owner()": "1060",
                            "read()": "2931",
                            "removeClaimer(address)": "24094",
                            "renounceOwnership()": "24281",
                            "setExpirationTime(uint256)": "23282",
                            "transferOwnership(address)": "24446"
                        }
                    },
                    "methodIdentifiers": {
                        "addClaimer(address)": "2ea66401",
                        "claim()": "4e71d92d",
                        "debugnow()": "e1aa071c",
                        "getExpirationTime()": "e23a845a",
                        "isClaimable()": "74478bb3",
                        "isClaimer(address)": "10a8aecd",
                        "isOwner()": "8f32d59b",
                        "owner()": "8da5cb5b",
                        "read()": "57de26a4",
                        "removeClaimer(address)": "f0490b8a",
                        "renounceOwnership()": "715018a6",
                        "setExpirationTime(uint256)": "c0cc365d",
                        "transferOwnership(address)": "f2fde38b"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldExpiration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExpiration\",\"type\":\"uint256\"}],\"name\":\"ExpirationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"addClaimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"debugnow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getExpirationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isClaimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"isClaimer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"removeClaimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_expirationTime\",\"type\":\"uint256\"}],\"name\":\"setExpirationTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The claimable contract allows the owner to specify addresses who can claim the ownership of this contract,   after a specified time. This is a safe-guard should the owner ever lose access to their keys.   * A claimable contract with an expiration date defined, but no claimers specified, can be claimed by anyone once the time is expired. The owner can change this time periodically, to ensure ownership of the contract while the key is safe.\",\"methods\":{\"addClaimer(address)\":{\"params\":{\"_claimer\":\"address of the claimer to be added\"}},\"getExpirationTime()\":{\"return\":\"uint with the expiration time\"},\"isClaimable()\":{\"details\":\"The contract is claimable when the 3 results are true.\",\"return\":\"bool: is a claimer, bool: is expired, bool: is not owner\"},\"isClaimer(address)\":{\"params\":{\"_claimer\":\"address to verify\"},\"return\":\"true if the caller has been added as claimer, false, otherwise\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"read()\":{\"return\":\"(address: owner of this contract, uint: the expiration date, bool: is caller a claimers?)\"},\"removeClaimer(address)\":{\"params\":{\"_claimer\":\"address of the claimer to be removed\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"setExpirationTime(uint256)\":{\"params\":{\"_expirationTime\":\"the new expiration time for this contract\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Claimable\"},\"userdoc\":{\"methods\":{\"addClaimer(address)\":{\"notice\":\"Adds a new claimer to the contract\"},\"claim()\":{\"notice\":\"Claim ownership of the contract, once the max inactive time is reached.  Only addresses in claimers can claim, unless the array is empty.\"},\"getExpirationTime()\":{\"notice\":\"Gets the current expiration time set in this contract\"},\"isClaimable()\":{\"notice\":\"Checks if the expiration date is passed and contract can be claimed.\"},\"isClaimer(address)\":{\"notice\":\"returns true if the caller has been added as claimer on this contract\"},\"read()\":{\"notice\":\"returns the owner of this contract, the expiration date and if the caller is one of the claimers\"},\"removeClaimer(address)\":{\"notice\":\"Removes a claimer from the contract\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setExpirationTime(uint256)\":{\"notice\":\"allows the owner to set a new expiration time to extend the ownership of this contract\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol\":\"Claimable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol\":{\"keccak256\":\"0xab82ae6e842f054c461d255983aa378db932d67a9eb5903daaadfca204d09e98\",\"urls\":[\"bzz-raw://4013755d13fbccfb1fc6536a36a5bc148e67c700e1162621dfd5f651a16fc480\",\"dweb:/ipfs/QmSLuCvpwHrCBCoN3oaZDEA9szuBzF7BGhy92C2cfFRpxF\"]},\"/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol\":{\"keccak256\":\"0x4144486887fa7f998f0759de5a0647475729e2fa88110c442dafd38d8cb06c40\",\"urls\":[\"bzz-raw://22ba5fe3c1c1ef94d71ebee14a36f1e787c494a6a13ba0450325f4273a8faf76\",\"dweb:/ipfs/QmfFJGrQFFfYrB2wwGJRyv51uqjL1ZCYqSyGH61mBbe9V3\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 846,
                            "contract": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol:Claimable",
                            "label": "_owner",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_address"
                        },
                        {
                            "astId": 658,
                            "contract": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol:Claimable",
                            "label": "claimers",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_mapping(t_address,t_bool)"
                        },
                        {
                            "astId": 660,
                            "contract": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol:Claimable",
                            "label": "expirationTime",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_uint256"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_mapping(t_address,t_bool)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => bool)",
                            "numberOfBytes": "32",
                            "value": "t_bool"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "userdoc": {
                    "methods": {
                        "addClaimer(address)": {
                            "notice": "Adds a new claimer to the contract"
                        },
                        "claim()": {
                            "notice": "Claim ownership of the contract, once the max inactive time is reached.  Only addresses in claimers can claim, unless the array is empty."
                        },
                        "getExpirationTime()": {
                            "notice": "Gets the current expiration time set in this contract"
                        },
                        "isClaimable()": {
                            "notice": "Checks if the expiration date is passed and contract can be claimed."
                        },
                        "isClaimer(address)": {
                            "notice": "returns true if the caller has been added as claimer on this contract"
                        },
                        "read()": {
                            "notice": "returns the owner of this contract, the expiration date and if the caller is one of the claimers"
                        },
                        "removeClaimer(address)": {
                            "notice": "Removes a claimer from the contract"
                        },
                        "renounceOwnership()": {
                            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
                        },
                        "setExpirationTime(uint256)": {
                            "notice": "allows the owner to set a new expiration time to extend the ownership of this contract"
                        }
                    }
                }
            }
        },
        "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol": {
            "Ownable": {
                "abi": [
                    {
                        "inputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "isOwner",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "renounceOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \"user permissions\".",
                    "methods": {
                        "constructor": {
                            "details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
                        },
                        "isOwner()": {
                            "return": "true if `msg.sender` is the owner of the contract."
                        },
                        "owner()": {
                            "return": "the address of the owner."
                        },
                        "renounceOwnership()": {
                            "details": "Allows the current owner to relinquish control of the contract."
                        },
                        "transferOwnership(address)": {
                            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                            "params": {
                                "newOwner": "The address to transfer ownership to."
                            }
                        }
                    },
                    "title": "Ownable"
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "isOwner()": "8f32d59b",
                        "owner()": "8da5cb5b",
                        "renounceOwnership()": "715018a6",
                        "transferOwnership(address)": "f2fde38b"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \\\"user permissions\\\".\",\"methods\":{\"constructor\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol\":{\"keccak256\":\"0x4144486887fa7f998f0759de5a0647475729e2fa88110c442dafd38d8cb06c40\",\"urls\":[\"bzz-raw://22ba5fe3c1c1ef94d71ebee14a36f1e787c494a6a13ba0450325f4273a8faf76\",\"dweb:/ipfs/QmfFJGrQFFfYrB2wwGJRyv51uqjL1ZCYqSyGH61mBbe9V3\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 846,
                            "contract": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol:Ownable",
                            "label": "_owner",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_address"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        }
                    }
                },
                "userdoc": {
                    "methods": {
                        "renounceOwnership()": {
                            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
                        }
                    }
                }
            }
        }
    },
    "sources": {
        "/Users/gmussi/git/solidity-voting/contracts/Poll.sol": {
            "ast": {
                "absolutePath": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol",
                "exportedSymbols": {
                    "Poll": [
                        495
                    ]
                },
                "id": 496,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.5",
                            ".16"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:25:0"
                    },
                    {
                        "absolutePath": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol",
                        "file": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol",
                        "id": 2,
                        "nodeType": "ImportDirective",
                        "scope": 496,
                        "sourceUnit": 843,
                        "src": "27:115:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol",
                        "file": "./PollingStation.sol",
                        "id": 3,
                        "nodeType": "ImportDirective",
                        "scope": 496,
                        "sourceUnit": 650,
                        "src": "143:30:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "baseContracts": [
                            {
                                "arguments": null,
                                "baseName": {
                                    "contractScope": null,
                                    "id": 4,
                                    "name": "Claimable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 842,
                                    "src": "471:9:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Claimable_$842",
                                        "typeString": "contract Claimable"
                                    }
                                },
                                "id": 5,
                                "nodeType": "InheritanceSpecifier",
                                "src": "471:9:0"
                            }
                        ],
                        "contractDependencies": [
                            842,
                            951
                        ],
                        "contractKind": "contract",
                        "documentation": "A poll is a contract that stores potential options to vote on, as well as which addresses have voted already.\nAddresses can vote on the poll until the poll owner closes the contract.\nAddresses can also put their votes for sale as long as they have not voted yet.",
                        "fullyImplemented": true,
                        "id": 495,
                        "linearizedBaseContracts": [
                            495,
                            842,
                            951
                        ],
                        "name": "Poll",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "id": 7,
                                "name": "pollingStation",
                                "nodeType": "VariableDeclaration",
                                "scope": 495,
                                "src": "487:37:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PollingStation_$649",
                                    "typeString": "contract PollingStation"
                                },
                                "typeName": {
                                    "contractScope": null,
                                    "id": 6,
                                    "name": "PollingStation",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 649,
                                    "src": "487:14:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PollingStation_$649",
                                        "typeString": "contract PollingStation"
                                    }
                                },
                                "value": null,
                                "visibility": "private"
                            },
                            {
                                "canonicalName": "Poll.Vote",
                                "id": 16,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 9,
                                        "name": "used",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 16,
                                        "src": "553:9:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 8,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "553:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 11,
                                        "name": "forSale",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 16,
                                        "src": "572:12:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 10,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "572:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 13,
                                        "name": "price",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 16,
                                        "src": "594:10:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "typeName": {
                                            "id": 12,
                                            "name": "uint",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "594:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 15,
                                        "name": "owner",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 16,
                                        "src": "614:21:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        },
                                        "typeName": {
                                            "id": 14,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "614:15:0",
                                            "stateMutability": "payable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Vote",
                                "nodeType": "StructDefinition",
                                "scope": 495,
                                "src": "531:111:0",
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 18,
                                "name": "name",
                                "nodeType": "VariableDeclaration",
                                "scope": 495,
                                "src": "648:18:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 17,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "648:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 21,
                                "name": "options",
                                "nodeType": "VariableDeclaration",
                                "scope": 495,
                                "src": "715:24:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                    "typeString": "bytes32[]"
                                },
                                "typeName": {
                                    "baseType": {
                                        "id": 19,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "715:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "id": 20,
                                    "length": null,
                                    "nodeType": "ArrayTypeName",
                                    "src": "715:9:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                        "typeString": "bytes32[]"
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 24,
                                "name": "voteCounts",
                                "nodeType": "VariableDeclaration",
                                "scope": 495,
                                "src": "777:24:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[]"
                                },
                                "typeName": {
                                    "baseType": {
                                        "id": 22,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "777:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 23,
                                    "length": null,
                                    "nodeType": "ArrayTypeName",
                                    "src": "777:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                        "typeString": "uint256[]"
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 28,
                                "name": "votes",
                                "nodeType": "VariableDeclaration",
                                "scope": 495,
                                "src": "843:38:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                    "typeString": "mapping(address => struct Poll.Vote)"
                                },
                                "typeName": {
                                    "id": 27,
                                    "keyType": {
                                        "id": 25,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "851:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "843:24:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                        "typeString": "mapping(address => struct Poll.Vote)"
                                    },
                                    "valueType": {
                                        "contractScope": null,
                                        "id": 26,
                                        "name": "Vote",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 16,
                                        "src": "862:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                            "typeString": "struct Poll.Vote"
                                        }
                                    }
                                },
                                "value": null,
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 30,
                                "name": "closed",
                                "nodeType": "VariableDeclaration",
                                "scope": 495,
                                "src": "920:18:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                },
                                "typeName": {
                                    "id": 29,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "920:4:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "anonymous": false,
                                "documentation": "Event triggered every time a new vote is given in this poll",
                                "id": 38,
                                "name": "NewVote",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 37,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 32,
                                            "indexed": true,
                                            "name": "option",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 38,
                                            "src": "1093:22:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            },
                                            "typeName": {
                                                "id": 31,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1093:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 34,
                                            "indexed": true,
                                            "name": "voteAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 38,
                                            "src": "1117:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 33,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1117:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 36,
                                            "indexed": true,
                                            "name": "user",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 38,
                                            "src": "1143:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 35,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1143:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1092:72:0"
                                },
                                "src": "1078:87:0"
                            },
                            {
                                "anonymous": false,
                                "documentation": "Event triggered when a vote is put for sale",
                                "id": 46,
                                "name": "VoteForSale",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 45,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 40,
                                            "indexed": true,
                                            "name": "voteAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 46,
                                            "src": "1256:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 39,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1256:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 42,
                                            "indexed": true,
                                            "name": "price",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 46,
                                            "src": "1282:18:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 41,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1282:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 44,
                                            "indexed": true,
                                            "name": "user",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 46,
                                            "src": "1302:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 43,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1302:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1255:68:0"
                                },
                                "src": "1238:86:0"
                            },
                            {
                                "anonymous": false,
                                "documentation": "Event triggered when a vote is no longer for sale",
                                "id": 52,
                                "name": "VoteNotForSale",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 51,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 48,
                                            "indexed": true,
                                            "name": "voteAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 52,
                                            "src": "1424:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 47,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1424:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 50,
                                            "indexed": true,
                                            "name": "user",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 52,
                                            "src": "1450:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 49,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1450:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1423:48:0"
                                },
                                "src": "1403:69:0"
                            },
                            {
                                "anonymous": false,
                                "documentation": "Event triggered when a vote is sold ",
                                "id": 60,
                                "name": "VoteOwnershipChanged",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 59,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 54,
                                            "indexed": true,
                                            "name": "voteAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 60,
                                            "src": "1565:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 53,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1565:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 56,
                                            "indexed": true,
                                            "name": "seller",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 60,
                                            "src": "1591:22:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 55,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1591:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 58,
                                            "indexed": true,
                                            "name": "buyer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 60,
                                            "src": "1615:21:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 57,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1615:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1564:73:0"
                                },
                                "src": "1538:100:0"
                            },
                            {
                                "anonymous": false,
                                "documentation": "Event triggered when the poll is closed",
                                "id": 64,
                                "name": "PollClosed",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 63,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 62,
                                            "indexed": true,
                                            "name": "pollAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 64,
                                            "src": "1725:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 61,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1725:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1724:26:0"
                                },
                                "src": "1707:44:0"
                            },
                            {
                                "body": {
                                    "id": 116,
                                    "nodeType": "Block",
                                    "src": "1933:245:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 78,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "id": 75,
                                                                "name": "_options",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 71,
                                                                "src": "1951:8:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                                                    "typeString": "bytes32[] memory"
                                                                }
                                                            },
                                                            "id": 76,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "length",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "1951:15:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "hexValue": "30",
                                                            "id": 77,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1969:1:0",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "src": "1951:19:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 74,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "1943:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 79,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1943:28:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 80,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1943:28:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 83,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 81,
                                                    "name": "pollingStation",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 7,
                                                    "src": "1982:14:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_PollingStation_$649",
                                                        "typeString": "contract PollingStation"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 82,
                                                    "name": "_pollingStation",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 66,
                                                    "src": "1999:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_PollingStation_$649",
                                                        "typeString": "contract PollingStation"
                                                    }
                                                },
                                                "src": "1982:32:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_PollingStation_$649",
                                                    "typeString": "contract PollingStation"
                                                }
                                            },
                                            "id": 84,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1982:32:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 87,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 85,
                                                    "name": "name",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 18,
                                                    "src": "2025:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_storage",
                                                        "typeString": "string storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 86,
                                                    "name": "_name",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 68,
                                                    "src": "2032:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                "src": "2025:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage",
                                                    "typeString": "string storage ref"
                                                }
                                            },
                                            "id": 88,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2025:12:0"
                                        },
                                        {
                                            "body": {
                                                "id": 114,
                                                "nodeType": "Block",
                                                "src": "2090:82:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                                {
                                                                    "argumentTypes": null,
                                                                    "baseExpression": {
                                                                        "argumentTypes": null,
                                                                        "id": 103,
                                                                        "name": "_options",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 71,
                                                                        "src": "2117:8:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                                                            "typeString": "bytes32[] memory"
                                                                        }
                                                                    },
                                                                    "id": 105,
                                                                    "indexExpression": {
                                                                        "argumentTypes": null,
                                                                        "id": 104,
                                                                        "name": "i",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 90,
                                                                        "src": "2126:1:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "2117:11:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes32",
                                                                        "typeString": "bytes32"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bytes32",
                                                                        "typeString": "bytes32"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "id": 100,
                                                                    "name": "options",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 21,
                                                                    "src": "2104:7:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                                                        "typeString": "bytes32[] storage ref"
                                                                    }
                                                                },
                                                                "id": 102,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "push",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": null,
                                                                "src": "2104:12:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                                                                    "typeString": "function (bytes32) returns (uint256)"
                                                                }
                                                            },
                                                            "id": 106,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2104:25:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 107,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2104:25:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                                {
                                                                    "argumentTypes": null,
                                                                    "hexValue": "30",
                                                                    "id": 111,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2159:1:0",
                                                                    "subdenomination": null,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "id": 108,
                                                                    "name": "voteCounts",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 24,
                                                                    "src": "2143:10:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                                        "typeString": "uint256[] storage ref"
                                                                    }
                                                                },
                                                                "id": 110,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "push",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": null,
                                                                "src": "2143:15:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                                                    "typeString": "function (uint256) returns (uint256)"
                                                                }
                                                            },
                                                            "id": 112,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2143:18:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "id": 113,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2143:18:0"
                                                    }
                                                ]
                                            },
                                            "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 96,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "id": 93,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 90,
                                                    "src": "2064:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 94,
                                                        "name": "_options",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 71,
                                                        "src": "2068:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                                            "typeString": "bytes32[] memory"
                                                        }
                                                    },
                                                    "id": 95,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "2068:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2064:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 115,
                                            "initializationExpression": {
                                                "assignments": [
                                                    90
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 90,
                                                        "name": "i",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 115,
                                                        "src": "2052:6:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 89,
                                                            "name": "uint",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2052:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "value": null,
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 92,
                                                "initialValue": {
                                                    "argumentTypes": null,
                                                    "hexValue": "30",
                                                    "id": 91,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2061:1:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "2052:10:0"
                                            },
                                            "loopExpression": {
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 98,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "++",
                                                    "prefix": false,
                                                    "src": "2085:3:0",
                                                    "subExpression": {
                                                        "argumentTypes": null,
                                                        "id": 97,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 90,
                                                        "src": "2085:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 99,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2085:3:0"
                                            },
                                            "nodeType": "ForStatement",
                                            "src": "2047:125:0"
                                        }
                                    ]
                                },
                                "documentation": "A poll requires a name and a bytes32 for each option.",
                                "id": 117,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 72,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 66,
                                            "name": "_pollingStation",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 117,
                                            "src": "1846:30:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_PollingStation_$649",
                                                "typeString": "contract PollingStation"
                                            },
                                            "typeName": {
                                                "contractScope": null,
                                                "id": 65,
                                                "name": "PollingStation",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 649,
                                                "src": "1846:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_PollingStation_$649",
                                                    "typeString": "contract PollingStation"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 68,
                                            "name": "_name",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 117,
                                            "src": "1878:19:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 67,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1878:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 71,
                                            "name": "_options",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 117,
                                            "src": "1899:25:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                                "typeString": "bytes32[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 69,
                                                    "name": "bytes32",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1899:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "id": 70,
                                                "length": null,
                                                "nodeType": "ArrayTypeName",
                                                "src": "1899:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                                    "typeString": "bytes32[]"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1845:80:0"
                                },
                                "returnParameters": {
                                    "id": 73,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1933:0:0"
                                },
                                "scope": 495,
                                "src": "1834:344:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 153,
                                    "nodeType": "Block",
                                    "src": "2749:150:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 135,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "++",
                                                "prefix": false,
                                                "src": "2759:26:0",
                                                "subExpression": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 132,
                                                        "name": "voteCounts",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 24,
                                                        "src": "2759:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                            "typeString": "uint256[] storage ref"
                                                        }
                                                    },
                                                    "id": 134,
                                                    "indexExpression": {
                                                        "argumentTypes": null,
                                                        "id": 133,
                                                        "name": "_optionIndex",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 119,
                                                        "src": "2770:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "2759:24:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 136,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2759:26:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 142,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 137,
                                                            "name": "votes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 28,
                                                            "src": "2795:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                                "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                            }
                                                        },
                                                        "id": 139,
                                                        "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 138,
                                                            "name": "_voteAddr",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 121,
                                                            "src": "2801:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2795:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                            "typeString": "struct Poll.Vote storage ref"
                                                        }
                                                    },
                                                    "id": 140,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "used",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 9,
                                                    "src": "2795:21:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 141,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2819:4:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "2795:28:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 143,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2795:28:0"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 145,
                                                            "name": "options",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 21,
                                                            "src": "2847:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                                                "typeString": "bytes32[] storage ref"
                                                            }
                                                        },
                                                        "id": 147,
                                                        "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 146,
                                                            "name": "_optionIndex",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 119,
                                                            "src": "2855:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2847:21:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 148,
                                                        "name": "_voteAddr",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 121,
                                                        "src": "2870:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 149,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 966,
                                                            "src": "2881:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 150,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "2881:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 144,
                                                    "name": "NewVote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 38,
                                                    "src": "2839:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (bytes32,address,address)"
                                                    }
                                                },
                                                "id": 151,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2839:53:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 152,
                                            "nodeType": "EmitStatement",
                                            "src": "2834:58:0"
                                        }
                                    ]
                                },
                                "documentation": "Stores a vote from the message sender. \nEach address can vote only once and only as long as the poll is not closed.\nEach address can also sell their voting rights for others, which allows the buyer to vote.\n@param _optionIndex a bytes32 representing the option to vote.\n@dev Refer to `options` property  \n@param _voteAddr address of the voter this vote refers to. Message sender must own that right",
                                "id": 154,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 124,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 121,
                                                "src": "2709:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 125,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 123,
                                            "name": "notVoted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 402,
                                            "src": "2700:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2700:19:0"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 127,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 121,
                                                "src": "2729:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 128,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 126,
                                            "name": "ownsVote",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 433,
                                            "src": "2720:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2720:19:0"
                                    },
                                    {
                                        "arguments": null,
                                        "id": 130,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 129,
                                            "name": "pollOpen",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 388,
                                            "src": "2740:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2740:8:0"
                                    }
                                ],
                                "name": "vote",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 122,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 119,
                                            "name": "_optionIndex",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 154,
                                            "src": "2655:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 118,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2655:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 121,
                                            "name": "_voteAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 154,
                                            "src": "2674:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 120,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2674:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2654:38:0"
                                },
                                "returnParameters": {
                                    "id": 131,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2749:0:0"
                                },
                                "scope": 495,
                                "src": "2641:258:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 201,
                                    "nodeType": "Block",
                                    "src": "3169:230:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 172,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "id": 170,
                                                            "name": "price",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 158,
                                                            "src": "3187:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "hexValue": "30",
                                                            "id": 171,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3195:1:0",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "src": "3187:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "hexValue": "5072696365206d75737420626520686967686572207468616e2030",
                                                        "id": 173,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3198:29:0",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_8b376eb01003ab0be5027fb469144968383e8e93b68149c2a04c06faff6df86a",
                                                            "typeString": "literal_string \"Price must be higher than 0\""
                                                        },
                                                        "value": "Price must be higher than 0"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_8b376eb01003ab0be5027fb469144968383e8e93b68149c2a04c06faff6df86a",
                                                            "typeString": "literal_string \"Price must be higher than 0\""
                                                        }
                                                    ],
                                                    "id": 169,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 970,
                                                    "src": "3179:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 174,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3179:49:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 175,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3179:49:0"
                                        },
                                        {
                                            "assignments": [
                                                177
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 177,
                                                    "name": "_vote",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 201,
                                                    "src": "3239:18:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "storage",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                        "typeString": "struct Poll.Vote"
                                                    },
                                                    "typeName": {
                                                        "contractScope": null,
                                                        "id": 176,
                                                        "name": "Vote",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 16,
                                                        "src": "3239:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 181,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 178,
                                                    "name": "votes",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 28,
                                                    "src": "3260:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                        "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                    }
                                                },
                                                "id": 180,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 179,
                                                    "name": "_voteAddr",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 156,
                                                    "src": "3266:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "3260:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                    "typeString": "struct Poll.Vote storage ref"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "3239:37:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 186,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 182,
                                                        "name": "_vote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 177,
                                                        "src": "3286:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote storage pointer"
                                                        }
                                                    },
                                                    "id": 184,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "price",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 13,
                                                    "src": "3286:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 185,
                                                    "name": "price",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 158,
                                                    "src": "3300:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3286:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 187,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3286:19:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 192,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 188,
                                                        "name": "_vote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 177,
                                                        "src": "3315:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote storage pointer"
                                                        }
                                                    },
                                                    "id": 190,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "forSale",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 11,
                                                    "src": "3315:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 191,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3331:4:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "3315:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 193,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3315:20:0"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 195,
                                                        "name": "_voteAddr",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 156,
                                                        "src": "3363:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 196,
                                                        "name": "price",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 158,
                                                        "src": "3374:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 197,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 966,
                                                            "src": "3381:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 198,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "3381:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 194,
                                                    "name": "VoteForSale",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 46,
                                                    "src": "3351:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                                                        "typeString": "function (address,uint256,address)"
                                                    }
                                                },
                                                "id": 199,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3351:41:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 200,
                                            "nodeType": "EmitStatement",
                                            "src": "3346:46:0"
                                        }
                                    ]
                                },
                                "documentation": "Puts a vote for sale for a specified price.\n@param _voteAddr The vote to be put for sale. Msg.owner must own this vote.\n\n     ",
                                "id": 202,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 161,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 156,
                                                "src": "3129:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 162,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 160,
                                            "name": "notVoted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 402,
                                            "src": "3120:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3120:19:0"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 164,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 156,
                                                "src": "3149:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 165,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 163,
                                            "name": "ownsVote",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 433,
                                            "src": "3140:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3140:19:0"
                                    },
                                    {
                                        "arguments": null,
                                        "id": 167,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 166,
                                            "name": "pollOpen",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 388,
                                            "src": "3160:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3160:8:0"
                                    }
                                ],
                                "name": "sellVote",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 159,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 156,
                                            "name": "_voteAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 202,
                                            "src": "3082:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 155,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3082:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 158,
                                            "name": "price",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 202,
                                            "src": "3101:10:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 157,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3101:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3081:31:0"
                                },
                                "returnParameters": {
                                    "id": 168,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3169:0:0"
                                },
                                "scope": 495,
                                "src": "3064:335:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 242,
                                    "nodeType": "Block",
                                    "src": "3645:163:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                219
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 219,
                                                    "name": "_vote",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 242,
                                                    "src": "3655:18:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "storage",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                        "typeString": "struct Poll.Vote"
                                                    },
                                                    "typeName": {
                                                        "contractScope": null,
                                                        "id": 218,
                                                        "name": "Vote",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 16,
                                                        "src": "3655:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 223,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 220,
                                                    "name": "votes",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 28,
                                                    "src": "3676:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                        "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                    }
                                                },
                                                "id": 222,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 221,
                                                    "name": "_voteAddr",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 204,
                                                    "src": "3682:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "3676:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                    "typeString": "struct Poll.Vote storage ref"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "3655:37:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 228,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 224,
                                                        "name": "_vote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 219,
                                                        "src": "3702:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote storage pointer"
                                                        }
                                                    },
                                                    "id": 226,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "price",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 13,
                                                    "src": "3702:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "30",
                                                    "id": 227,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3716:1:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "3702:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 229,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3702:15:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 234,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 230,
                                                        "name": "_vote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 219,
                                                        "src": "3727:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote storage pointer"
                                                        }
                                                    },
                                                    "id": 232,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "forSale",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 11,
                                                    "src": "3727:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 233,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3743:5:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3727:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 235,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3727:21:0"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 237,
                                                        "name": "_voteAddr",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 204,
                                                        "src": "3779:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 238,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 966,
                                                            "src": "3790:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 239,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "3790:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 236,
                                                    "name": "VoteNotForSale",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 52,
                                                    "src": "3764:14:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 240,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3764:37:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 241,
                                            "nodeType": "EmitStatement",
                                            "src": "3759:42:0"
                                        }
                                    ]
                                },
                                "documentation": "Makes a vote no longer available for sale\n@param _voteAddr The vote address currently for sale",
                                "id": 243,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 207,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 204,
                                                "src": "3586:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 208,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 206,
                                            "name": "notVoted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 402,
                                            "src": "3577:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3577:19:0"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 210,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 204,
                                                "src": "3606:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 211,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 209,
                                            "name": "ownsVote",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 433,
                                            "src": "3597:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3597:19:0"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 213,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 204,
                                                "src": "3625:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 214,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 212,
                                            "name": "forSale",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 446,
                                            "src": "3617:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3617:18:0"
                                    },
                                    {
                                        "arguments": null,
                                        "id": 216,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 215,
                                            "name": "pollOpen",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 388,
                                            "src": "3636:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3636:8:0"
                                    }
                                ],
                                "name": "stopSelling",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 205,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 204,
                                            "name": "_voteAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 243,
                                            "src": "3551:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 203,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3551:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3550:19:0"
                                },
                                "returnParameters": {
                                    "id": 217,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3645:0:0"
                                },
                                "scope": 495,
                                "src": "3530:278:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 324,
                                    "nodeType": "Block",
                                    "src": "4230:557:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                257
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 257,
                                                    "name": "_vote",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 324,
                                                    "src": "4240:18:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "storage",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                        "typeString": "struct Poll.Vote"
                                                    },
                                                    "typeName": {
                                                        "contractScope": null,
                                                        "id": 256,
                                                        "name": "Vote",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 16,
                                                        "src": "4240:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 261,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 258,
                                                    "name": "votes",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 28,
                                                    "src": "4261:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                        "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                    }
                                                },
                                                "id": 260,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 259,
                                                    "name": "_voteAddr",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 245,
                                                    "src": "4267:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "4261:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                    "typeString": "struct Poll.Vote storage ref"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "4240:37:0"
                                        },
                                        {
                                            "assignments": [
                                                263
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 263,
                                                    "name": "seller",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 324,
                                                    "src": "4287:22:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    },
                                                    "typeName": {
                                                        "id": 262,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4287:15:0",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 266,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 264,
                                                    "name": "_vote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 257,
                                                    "src": "4312:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                        "typeString": "struct Poll.Vote storage pointer"
                                                    }
                                                },
                                                "id": 265,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "owner",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 15,
                                                "src": "4312:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "4287:36:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 272,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "id": 268,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 966,
                                                                "src": "4342:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 269,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "value",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "4342:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">=",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "id": 270,
                                                                "name": "_vote",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 257,
                                                                "src": "4355:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                                    "typeString": "struct Poll.Vote storage pointer"
                                                                }
                                                            },
                                                            "id": 271,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "price",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 13,
                                                            "src": "4355:11:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "4342:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "hexValue": "4e6f7420656e6f7567682066756e6473207472616e73666572726564",
                                                        "id": 273,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "4368:30:0",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_db69eecf4696acc8537757e444735b7f67bb14c8aa1b35f01ac9268960652c74",
                                                            "typeString": "literal_string \"Not enough funds transferred\""
                                                        },
                                                        "value": "Not enough funds transferred"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_db69eecf4696acc8537757e444735b7f67bb14c8aa1b35f01ac9268960652c74",
                                                            "typeString": "literal_string \"Not enough funds transferred\""
                                                        }
                                                    ],
                                                    "id": 267,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 970,
                                                    "src": "4334:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 274,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4334:65:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 275,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4334:65:0"
                                        },
                                        {
                                            "assignments": [
                                                277
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 277,
                                                    "name": "change",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 324,
                                                    "src": "4418:11:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 276,
                                                        "name": "uint",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4418:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 283,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 282,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 278,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 966,
                                                        "src": "4432:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 279,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "4432:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 280,
                                                        "name": "_vote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 257,
                                                        "src": "4444:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote storage pointer"
                                                        }
                                                    },
                                                    "id": 281,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "price",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 13,
                                                    "src": "4444:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "4432:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "4418:37:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 287,
                                                            "name": "_vote",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 257,
                                                            "src": "4482:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                                "typeString": "struct Poll.Vote storage pointer"
                                                            }
                                                        },
                                                        "id": 288,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "price",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 13,
                                                        "src": "4482:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 284,
                                                        "name": "seller",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 263,
                                                        "src": "4466:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "id": 286,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "transfer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "4466:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                        "typeString": "function (uint256)"
                                                    }
                                                },
                                                "id": 289,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4466:28:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 290,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4466:28:0"
                                        },
                                        {
                                            "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 293,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "id": 291,
                                                    "name": "change",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 277,
                                                    "src": "4548:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "30",
                                                    "id": 292,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4557:1:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "4548:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": null,
                                            "id": 303,
                                            "nodeType": "IfStatement",
                                            "src": "4544:105:0",
                                            "trueBody": {
                                                "id": 302,
                                                "nodeType": "Block",
                                                "src": "4560:89:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                                {
                                                                    "argumentTypes": null,
                                                                    "id": 299,
                                                                    "name": "change",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 277,
                                                                    "src": "4594:6:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "expression": {
                                                                        "argumentTypes": null,
                                                                        "id": 294,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 966,
                                                                        "src": "4574:3:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 297,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": null,
                                                                    "src": "4574:10:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                "id": 298,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "transfer",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": null,
                                                                "src": "4574:19:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                                    "typeString": "function (uint256)"
                                                                }
                                                            },
                                                            "id": 300,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4574:27:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 301,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "4574:27:0"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 308,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 304,
                                                        "name": "_vote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 257,
                                                        "src": "4659:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote storage pointer"
                                                        }
                                                    },
                                                    "id": 306,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "forSale",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 11,
                                                    "src": "4659:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 307,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4675:5:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "4659:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 309,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4659:21:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 315,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 310,
                                                        "name": "_vote",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 257,
                                                        "src": "4690:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote storage pointer"
                                                        }
                                                    },
                                                    "id": 312,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "owner",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 15,
                                                    "src": "4690:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 313,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 966,
                                                        "src": "4704:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 314,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "4704:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "4690:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 316,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4690:24:0"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 318,
                                                        "name": "_voteAddr",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 245,
                                                        "src": "4750:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 319,
                                                        "name": "seller",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 263,
                                                        "src": "4761:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 320,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 966,
                                                            "src": "4769:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 321,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "4769:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 317,
                                                    "name": "VoteOwnershipChanged",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 60,
                                                    "src": "4729:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address,address)"
                                                    }
                                                },
                                                "id": 322,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4729:51:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 323,
                                            "nodeType": "EmitStatement",
                                            "src": "4724:56:0"
                                        }
                                    ]
                                },
                                "documentation": "Buys a vote for sale. Enough funds must be transferred to this method. \nMore funds than necessary will be refunded.\n@dev This method only works if the vote has not been used AND is for sale \n@param _voteAddr the address of the seller whose vote is intended to buy",
                                "id": 325,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 248,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 245,
                                                "src": "4191:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "id": 249,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 247,
                                            "name": "notVoted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 402,
                                            "src": "4182:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4182:19:0"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 251,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 245,
                                                "src": "4210:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "id": 252,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 250,
                                            "name": "forSale",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 446,
                                            "src": "4202:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4202:18:0"
                                    },
                                    {
                                        "arguments": null,
                                        "id": 254,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 253,
                                            "name": "pollOpen",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 388,
                                            "src": "4221:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4221:8:0"
                                    }
                                ],
                                "name": "buysVote",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 246,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 245,
                                            "name": "_voteAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 325,
                                            "src": "4140:25:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            },
                                            "typeName": {
                                                "id": 244,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4140:15:0",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4139:27:0"
                                },
                                "returnParameters": {
                                    "id": 255,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4230:0:0"
                                },
                                "scope": 495,
                                "src": "4122:665:0",
                                "stateMutability": "payable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 354,
                                    "nodeType": "Block",
                                    "src": "5113:121:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 345,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 340,
                                                            "name": "votes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 28,
                                                            "src": "5123:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                                "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                            }
                                                        },
                                                        "id": 342,
                                                        "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 341,
                                                            "name": "_voteAddr",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 327,
                                                            "src": "5129:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "5123:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                            "typeString": "struct Poll.Vote storage ref"
                                                        }
                                                    },
                                                    "id": 343,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "owner",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 15,
                                                    "src": "5123:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 344,
                                                    "name": "_newOwner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 329,
                                                    "src": "5148:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "5123:34:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 346,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5123:34:0"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 348,
                                                        "name": "_voteAddr",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 327,
                                                        "src": "5194:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 349,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 966,
                                                            "src": "5205:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 350,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "5205:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 351,
                                                        "name": "_newOwner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 329,
                                                        "src": "5217:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 347,
                                                    "name": "VoteOwnershipChanged",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 60,
                                                    "src": "5173:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address,address)"
                                                    }
                                                },
                                                "id": 352,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5173:54:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 353,
                                            "nodeType": "EmitStatement",
                                            "src": "5168:59:0"
                                        }
                                    ]
                                },
                                "documentation": "Delegates a vote to someone else.\n@param _voteAddr the vote to be delegated, usually same as msg.sender\n@param _newOwner address of the new owner of this vote",
                                "id": 355,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 332,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 327,
                                                "src": "5073:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 333,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 331,
                                            "name": "notVoted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 402,
                                            "src": "5064:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5064:19:0"
                                    },
                                    {
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 335,
                                                "name": "_voteAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 327,
                                                "src": "5093:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "id": 336,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 334,
                                            "name": "ownsVote",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 433,
                                            "src": "5084:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$_t_address_$",
                                                "typeString": "modifier (address)"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5084:19:0"
                                    },
                                    {
                                        "arguments": null,
                                        "id": 338,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 337,
                                            "name": "pollOpen",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 388,
                                            "src": "5104:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5104:8:0"
                                    }
                                ],
                                "name": "delegateVote",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 330,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 327,
                                            "name": "_voteAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 355,
                                            "src": "5011:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 326,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5011:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 329,
                                            "name": "_newOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 355,
                                            "src": "5030:25:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            },
                                            "typeName": {
                                                "id": 328,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5030:15:0",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5010:46:0"
                                },
                                "returnParameters": {
                                    "id": 339,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5113:0:0"
                                },
                                "scope": 495,
                                "src": "4989:245:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 378,
                                    "nodeType": "Block",
                                    "src": "5387:113:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 364,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 362,
                                                    "name": "closed",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 30,
                                                    "src": "5397:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 363,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "5406:4:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "5397:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 365,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5397:13:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 369,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 986,
                                                        "src": "5447:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Poll_$495",
                                                            "typeString": "contract Poll"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Poll_$495",
                                                            "typeString": "contract Poll"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 366,
                                                        "name": "pollingStation",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7,
                                                        "src": "5421:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_PollingStation_$649",
                                                            "typeString": "contract PollingStation"
                                                        }
                                                    },
                                                    "id": 368,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "pollClosed",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 610,
                                                    "src": "5421:25:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Poll_$495_$returns$__$",
                                                        "typeString": "function (contract Poll) external"
                                                    }
                                                },
                                                "id": 370,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5421:31:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 371,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5421:31:0"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "id": 374,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 986,
                                                                "src": "5487:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                                    "typeString": "contract Poll"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                                    "typeString": "contract Poll"
                                                                }
                                                            ],
                                                            "id": 373,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "5479:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": "address"
                                                        },
                                                        "id": 375,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "5479:13:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 372,
                                                    "name": "PollClosed",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 64,
                                                    "src": "5468:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 376,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5468:25:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 377,
                                            "nodeType": "EmitStatement",
                                            "src": "5463:30:0"
                                        }
                                    ]
                                },
                                "documentation": "Closes the poll. This action is irreversible and can only be performed once.",
                                "id": 379,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 358,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 357,
                                            "name": "pollOpen",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 388,
                                            "src": "5368:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5368:8:0"
                                    },
                                    {
                                        "arguments": null,
                                        "id": 360,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 359,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 885,
                                            "src": "5377:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5377:9:0"
                                    }
                                ],
                                "name": "closePoll",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 356,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5358:2:0"
                                },
                                "returnParameters": {
                                    "id": 361,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5387:0:0"
                                },
                                "scope": 495,
                                "src": "5340:160:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 387,
                                    "nodeType": "Block",
                                    "src": "5609:44:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 383,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "5627:7:0",
                                                        "subExpression": {
                                                            "argumentTypes": null,
                                                            "id": 382,
                                                            "name": "closed",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 30,
                                                            "src": "5628:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 381,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "5619:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 384,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5619:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 385,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5619:16:0"
                                        },
                                        {
                                            "id": 386,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "5645:1:0"
                                        }
                                    ]
                                },
                                "documentation": "Function modifier that checks if the poll is still opened.",
                                "id": 388,
                                "name": "pollOpen",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 380,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5606:2:0"
                                },
                                "src": "5588:65:0",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 401,
                                    "nodeType": "Block",
                                    "src": "5799:56:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 397,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "5817:19:0",
                                                        "subExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "baseExpression": {
                                                                    "argumentTypes": null,
                                                                    "id": 393,
                                                                    "name": "votes",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 28,
                                                                    "src": "5818:5:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                                        "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                                    }
                                                                },
                                                                "id": 395,
                                                                "indexExpression": {
                                                                    "argumentTypes": null,
                                                                    "id": 394,
                                                                    "name": "_voter",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 390,
                                                                    "src": "5824:6:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5818:13:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                                    "typeString": "struct Poll.Vote storage ref"
                                                                }
                                                            },
                                                            "id": 396,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "used",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 9,
                                                            "src": "5818:18:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 392,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "5809:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 398,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5809:28:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 399,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5809:28:0"
                                        },
                                        {
                                            "id": 400,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "5847:1:0"
                                        }
                                    ]
                                },
                                "documentation": "Function modifier that checks if the message sender has already voted in this poll",
                                "id": 402,
                                "name": "notVoted",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 391,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 390,
                                            "name": "_voter",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 402,
                                            "src": "5783:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 389,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5783:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5782:16:0"
                                },
                                "src": "5765:90:0",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 432,
                                    "nodeType": "Block",
                                    "src": "5994:133:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 428,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "components": [
                                                                {
                                                                    "argumentTypes": null,
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    "id": 419,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "argumentTypes": null,
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_address_payable",
                                                                            "typeString": "address payable"
                                                                        },
                                                                        "id": 414,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "argumentTypes": null,
                                                                            "expression": {
                                                                                "argumentTypes": null,
                                                                                "baseExpression": {
                                                                                    "argumentTypes": null,
                                                                                    "id": 407,
                                                                                    "name": "votes",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 28,
                                                                                    "src": "6013:5:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                                                        "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                                                    }
                                                                                },
                                                                                "id": 409,
                                                                                "indexExpression": {
                                                                                    "argumentTypes": null,
                                                                                    "id": 408,
                                                                                    "name": "_voter",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 404,
                                                                                    "src": "6019:6:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_address",
                                                                                        "typeString": "address"
                                                                                    }
                                                                                },
                                                                                "isConstant": false,
                                                                                "isLValue": true,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "IndexAccess",
                                                                                "src": "6013:13:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                                                    "typeString": "struct Poll.Vote storage ref"
                                                                                }
                                                                            },
                                                                            "id": 410,
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "owner",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 15,
                                                                            "src": "6013:19:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address_payable",
                                                                                "typeString": "address payable"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "==",
                                                                        "rightExpression": {
                                                                            "argumentTypes": null,
                                                                            "arguments": [
                                                                                {
                                                                                    "argumentTypes": null,
                                                                                    "hexValue": "30",
                                                                                    "id": 412,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "6044:1:0",
                                                                                    "subdenomination": null,
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                                        "typeString": "int_const 0"
                                                                                    },
                                                                                    "value": "0"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                                        "typeString": "int_const 0"
                                                                                    }
                                                                                ],
                                                                                "id": 411,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                                "src": "6036:7:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                                    "typeString": "type(address)"
                                                                                },
                                                                                "typeName": "address"
                                                                            },
                                                                            "id": 413,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "typeConversion",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "6036:10:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address_payable",
                                                                                "typeString": "address payable"
                                                                            }
                                                                        },
                                                                        "src": "6013:33:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "&&",
                                                                    "rightExpression": {
                                                                        "argumentTypes": null,
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        },
                                                                        "id": 418,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "argumentTypes": null,
                                                                            "id": 415,
                                                                            "name": "_voter",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 404,
                                                                            "src": "6050:6:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "==",
                                                                        "rightExpression": {
                                                                            "argumentTypes": null,
                                                                            "expression": {
                                                                                "argumentTypes": null,
                                                                                "id": 416,
                                                                                "name": "msg",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 966,
                                                                                "src": "6060:3:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_magic_message",
                                                                                    "typeString": "msg"
                                                                                }
                                                                            },
                                                                            "id": 417,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "sender",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": null,
                                                                            "src": "6060:10:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address_payable",
                                                                                "typeString": "address payable"
                                                                            }
                                                                        },
                                                                        "src": "6050:20:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                        }
                                                                    },
                                                                    "src": "6013:57:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                }
                                                            ],
                                                            "id": 420,
                                                            "isConstant": false,
                                                            "isInlineArray": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "TupleExpression",
                                                            "src": "6012:59:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "commonType": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            },
                                                            "id": 427,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "argumentTypes": null,
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "baseExpression": {
                                                                        "argumentTypes": null,
                                                                        "id": 421,
                                                                        "name": "votes",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 28,
                                                                        "src": "6075:5:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                                            "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                                        }
                                                                    },
                                                                    "id": 423,
                                                                    "indexExpression": {
                                                                        "argumentTypes": null,
                                                                        "id": 422,
                                                                        "name": "_voter",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 404,
                                                                        "src": "6081:6:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "6075:13:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                                        "typeString": "struct Poll.Vote storage ref"
                                                                    }
                                                                },
                                                                "id": 424,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "owner",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 15,
                                                                "src": "6075:19:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                                "argumentTypes": null,
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "id": 425,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 966,
                                                                    "src": "6098:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 426,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": null,
                                                                "src": "6098:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            },
                                                            "src": "6075:33:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "src": "6012:96:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 406,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "6004:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 429,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6004:105:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 430,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6004:105:0"
                                        },
                                        {
                                            "id": 431,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "6119:1:0"
                                        }
                                    ]
                                },
                                "documentation": "Function modifier that checks if the address trying to vote owns that vote ",
                                "id": 433,
                                "name": "ownsVote",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 405,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 404,
                                            "name": "_voter",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 433,
                                            "src": "5978:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 403,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5978:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5977:16:0"
                                },
                                "src": "5960:167:0",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 445,
                                    "nodeType": "Block",
                                    "src": "6241:57:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "baseExpression": {
                                                                "argumentTypes": null,
                                                                "id": 438,
                                                                "name": "votes",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 28,
                                                                "src": "6259:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                                    "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                                }
                                                            },
                                                            "id": 440,
                                                            "indexExpression": {
                                                                "argumentTypes": null,
                                                                "id": 439,
                                                                "name": "_vote",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 435,
                                                                "src": "6265:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "6259:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                                "typeString": "struct Poll.Vote storage ref"
                                                            }
                                                        },
                                                        "id": 441,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "forSale",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 11,
                                                        "src": "6259:20:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 437,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "6251:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 442,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6251:29:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 443,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6251:29:0"
                                        },
                                        {
                                            "id": 444,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "6290:1:0"
                                        }
                                    ]
                                },
                                "documentation": "Function modifier that checks if a vote is for sale",
                                "id": 446,
                                "name": "forSale",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 436,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 435,
                                            "name": "_vote",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 446,
                                            "src": "6226:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 434,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6226:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6225:15:0"
                                },
                                "src": "6209:89:0",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 454,
                                    "nodeType": "Block",
                                    "src": "6365:31:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 452,
                                                "name": "options",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 21,
                                                "src": "6382:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                                    "typeString": "bytes32[] storage ref"
                                                }
                                            },
                                            "functionReturnParameters": 451,
                                            "id": 453,
                                            "nodeType": "Return",
                                            "src": "6375:14:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 455,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getOptions",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 447,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6323:2:0"
                                },
                                "returnParameters": {
                                    "id": 451,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 450,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 455,
                                            "src": "6347:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                                "typeString": "bytes32[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 448,
                                                    "name": "bytes32",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "6347:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "id": 449,
                                                "length": null,
                                                "nodeType": "ArrayTypeName",
                                                "src": "6347:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                                    "typeString": "bytes32[]"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6346:18:0"
                                },
                                "scope": 495,
                                "src": "6304:92:0",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 463,
                                    "nodeType": "Block",
                                    "src": "6461:34:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 461,
                                                "name": "voteCounts",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 24,
                                                "src": "6478:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                    "typeString": "uint256[] storage ref"
                                                }
                                            },
                                            "functionReturnParameters": 460,
                                            "id": 462,
                                            "nodeType": "Return",
                                            "src": "6471:17:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 464,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getVoteCount",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 456,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6423:2:0"
                                },
                                "returnParameters": {
                                    "id": 460,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 459,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 464,
                                            "src": "6446:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 457,
                                                    "name": "uint",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "6446:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 458,
                                                "length": null,
                                                "nodeType": "ArrayTypeName",
                                                "src": "6446:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                                    "typeString": "uint256[]"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6445:15:0"
                                },
                                "scope": 495,
                                "src": "6402:93:0",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 493,
                                    "nodeType": "Block",
                                    "src": "6581:121:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                478
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 478,
                                                    "name": "_vote",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 493,
                                                    "src": "6591:18:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "storage",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                        "typeString": "struct Poll.Vote"
                                                    },
                                                    "typeName": {
                                                        "contractScope": null,
                                                        "id": 477,
                                                        "name": "Vote",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 16,
                                                        "src": "6591:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                            "typeString": "struct Poll.Vote"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 482,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 479,
                                                    "name": "votes",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 28,
                                                    "src": "6612:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$16_storage_$",
                                                        "typeString": "mapping(address => struct Poll.Vote storage ref)"
                                                    }
                                                },
                                                "id": 481,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 480,
                                                    "name": "_voter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 466,
                                                    "src": "6618:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "6612:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Vote_$16_storage",
                                                    "typeString": "struct Poll.Vote storage ref"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "6591:34:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "components": [
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 483,
                                                            "name": "_vote",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 478,
                                                            "src": "6643:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                                "typeString": "struct Poll.Vote storage pointer"
                                                            }
                                                        },
                                                        "id": 484,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "used",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 9,
                                                        "src": "6643:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 485,
                                                            "name": "_vote",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 478,
                                                            "src": "6655:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                                "typeString": "struct Poll.Vote storage pointer"
                                                            }
                                                        },
                                                        "id": 486,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "forSale",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 11,
                                                        "src": "6655:13:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 487,
                                                            "name": "_vote",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 478,
                                                            "src": "6670:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                                "typeString": "struct Poll.Vote storage pointer"
                                                            }
                                                        },
                                                        "id": 488,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "price",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 13,
                                                        "src": "6670:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 489,
                                                            "name": "_vote",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 478,
                                                            "src": "6683:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Vote_$16_storage_ptr",
                                                                "typeString": "struct Poll.Vote storage pointer"
                                                            }
                                                        },
                                                        "id": 490,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "owner",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 15,
                                                        "src": "6683:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "id": 491,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "6642:53:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_uint256_$_t_address_payable_$",
                                                    "typeString": "tuple(bool,bool,uint256,address payable)"
                                                }
                                            },
                                            "functionReturnParameters": 476,
                                            "id": 492,
                                            "nodeType": "Return",
                                            "src": "6635:60:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 494,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getVote",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 467,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 466,
                                            "name": "_voter",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 494,
                                            "src": "6518:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 465,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6518:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6517:16:0"
                                },
                                "returnParameters": {
                                    "id": 476,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 469,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 494,
                                            "src": "6554:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 468,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6554:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 471,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 494,
                                            "src": "6560:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 470,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6560:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 473,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 494,
                                            "src": "6566:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 472,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6566:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 475,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 494,
                                            "src": "6572:7:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 474,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6572:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6553:27:0"
                                },
                                "scope": 495,
                                "src": "6501:201:0",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            }
                        ],
                        "scope": 496,
                        "src": "454:6251:0"
                    }
                ],
                "src": "0:6705:0"
            },
            "id": 0
        },
        "/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol": {
            "ast": {
                "absolutePath": "/Users/gmussi/git/solidity-voting/contracts/PollingStation.sol",
                "exportedSymbols": {
                    "PollingStation": [
                        649
                    ]
                },
                "id": 650,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 497,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.5",
                            ".16"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:25:1"
                    },
                    {
                        "absolutePath": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol",
                        "file": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol",
                        "id": 498,
                        "nodeType": "ImportDirective",
                        "scope": 650,
                        "sourceUnit": 843,
                        "src": "27:115:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/gmussi/git/solidity-voting/contracts/Poll.sol",
                        "file": "./Poll.sol",
                        "id": 499,
                        "nodeType": "ImportDirective",
                        "scope": 650,
                        "sourceUnit": 496,
                        "src": "143:20:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "baseContracts": [
                            {
                                "arguments": null,
                                "baseName": {
                                    "contractScope": null,
                                    "id": 500,
                                    "name": "Claimable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 842,
                                    "src": "265:9:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Claimable_$842",
                                        "typeString": "contract Claimable"
                                    }
                                },
                                "id": 501,
                                "nodeType": "InheritanceSpecifier",
                                "src": "265:9:1"
                            }
                        ],
                        "contractDependencies": [
                            495,
                            842,
                            951
                        ],
                        "contractKind": "contract",
                        "documentation": "This contract allows for the creation and management of Polls",
                        "fullyImplemented": true,
                        "id": 649,
                        "linearizedBaseContracts": [
                            649,
                            842,
                            951
                        ],
                        "name": "PollingStation",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "id": 504,
                                "name": "polls",
                                "nodeType": "VariableDeclaration",
                                "scope": 649,
                                "src": "281:19:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_Poll_$495_$dyn_storage",
                                    "typeString": "contract Poll[]"
                                },
                                "typeName": {
                                    "baseType": {
                                        "contractScope": null,
                                        "id": 502,
                                        "name": "Poll",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 495,
                                        "src": "281:4:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Poll_$495",
                                            "typeString": "contract Poll"
                                        }
                                    },
                                    "id": 503,
                                    "length": null,
                                    "nodeType": "ArrayTypeName",
                                    "src": "281:6:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_Poll_$495_$dyn_storage_ptr",
                                        "typeString": "contract Poll[]"
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 509,
                                "name": "pollByOwners",
                                "nodeType": "VariableDeclaration",
                                "scope": 649,
                                "src": "306:40:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                    "typeString": "mapping(address => uint256[])"
                                },
                                "typeName": {
                                    "id": 508,
                                    "keyType": {
                                        "id": 505,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "315:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "306:27:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                        "typeString": "mapping(address => uint256[])"
                                    },
                                    "valueType": {
                                        "baseType": {
                                            "id": 506,
                                            "name": "uint",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "326:4:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 507,
                                        "length": null,
                                        "nodeType": "ArrayTypeName",
                                        "src": "326:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                            "typeString": "uint256[]"
                                        }
                                    }
                                },
                                "value": null,
                                "visibility": "internal"
                            },
                            {
                                "anonymous": false,
                                "documentation": null,
                                "id": 519,
                                "name": "PollCreated",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 518,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 511,
                                            "indexed": true,
                                            "name": "creator",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 519,
                                            "src": "372:23:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 510,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "372:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 513,
                                            "indexed": true,
                                            "name": "pollId",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 519,
                                            "src": "397:19:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 512,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "397:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 515,
                                            "indexed": true,
                                            "name": "pollAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 519,
                                            "src": "418:24:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 514,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "418:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 517,
                                            "indexed": false,
                                            "name": "name",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 519,
                                            "src": "444:11:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 516,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "444:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "371:85:1"
                                },
                                "src": "353:104:1"
                            },
                            {
                                "anonymous": false,
                                "documentation": null,
                                "id": 523,
                                "name": "PollClosed",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 522,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 521,
                                            "indexed": true,
                                            "name": "pollAddr",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 523,
                                            "src": "480:24:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 520,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "480:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "479:26:1"
                                },
                                "src": "462:44:1"
                            },
                            {
                                "body": {
                                    "id": 588,
                                    "nodeType": "Block",
                                    "src": "610:402:1",
                                    "statements": [
                                        {
                                            "assignments": [
                                                536
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 536,
                                                    "name": "_poll",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 588,
                                                    "src": "620:10:1",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Poll_$495",
                                                        "typeString": "contract Poll"
                                                    },
                                                    "typeName": {
                                                        "contractScope": null,
                                                        "id": 535,
                                                        "name": "Poll",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 495,
                                                        "src": "620:4:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Poll_$495",
                                                            "typeString": "contract Poll"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 543,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 539,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 984,
                                                        "src": "642:4:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_PollingStation_$649",
                                                            "typeString": "contract PollingStation"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 540,
                                                        "name": "_name",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 525,
                                                        "src": "648:5:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 541,
                                                        "name": "_options",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 528,
                                                        "src": "655:8:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                                            "typeString": "bytes32[] memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_PollingStation_$649",
                                                            "typeString": "contract PollingStation"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                                            "typeString": "bytes32[] memory"
                                                        }
                                                    ],
                                                    "id": 538,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "NewExpression",
                                                    "src": "633:8:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_PollingStation_$649_$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_contract$_Poll_$495_$",
                                                        "typeString": "function (contract PollingStation,string memory,bytes32[] memory) returns (contract Poll)"
                                                    },
                                                    "typeName": {
                                                        "contractScope": null,
                                                        "id": 537,
                                                        "name": "Poll",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 495,
                                                        "src": "637:4:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Poll_$495",
                                                            "typeString": "contract Poll"
                                                        }
                                                    }
                                                },
                                                "id": 542,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "633:31:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                    "typeString": "contract Poll"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "620:44:1"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 547,
                                                        "name": "_poll",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 536,
                                                        "src": "702:5:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Poll_$495",
                                                            "typeString": "contract Poll"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Poll_$495",
                                                            "typeString": "contract Poll"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 544,
                                                        "name": "polls",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 504,
                                                        "src": "691:5:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_contract$_Poll_$495_$dyn_storage",
                                                            "typeString": "contract Poll[] storage ref"
                                                        }
                                                    },
                                                    "id": 546,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "push",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "691:10:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Poll_$495_$returns$_t_uint256_$",
                                                        "typeString": "function (contract Poll) returns (uint256)"
                                                    }
                                                },
                                                "id": 548,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "691:17:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 549,
                                            "nodeType": "ExpressionStatement",
                                            "src": "691:17:1"
                                        },
                                        {
                                            "assignments": [
                                                551
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 551,
                                                    "name": "pollId",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 588,
                                                    "src": "718:11:1",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 550,
                                                        "name": "uint",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "718:4:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 556,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 555,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 552,
                                                        "name": "polls",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 504,
                                                        "src": "732:5:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_contract$_Poll_$495_$dyn_storage",
                                                            "typeString": "contract Poll[] storage ref"
                                                        }
                                                    },
                                                    "id": 553,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "732:12:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "31",
                                                    "id": 554,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "747:1:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                },
                                                "src": "732:16:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "718:30:1"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 562,
                                                        "name": "pollId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 551,
                                                        "src": "788:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 557,
                                                            "name": "pollByOwners",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 509,
                                                            "src": "758:12:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                                                "typeString": "mapping(address => uint256[] storage ref)"
                                                            }
                                                        },
                                                        "id": 560,
                                                        "indexExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "id": 558,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 966,
                                                                "src": "771:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 559,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "771:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "758:24:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                            "typeString": "uint256[] storage ref"
                                                        }
                                                    },
                                                    "id": 561,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "push",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "758:29:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                                        "typeString": "function (uint256) returns (uint256)"
                                                    }
                                                },
                                                "id": 563,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "758:37:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 564,
                                            "nodeType": "ExpressionStatement",
                                            "src": "758:37:1"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 566,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 966,
                                                            "src": "823:3:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 567,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "823:10:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 568,
                                                        "name": "pollId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 551,
                                                        "src": "835:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "id": 570,
                                                                "name": "_poll",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 536,
                                                                "src": "851:5:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                                    "typeString": "contract Poll"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                                    "typeString": "contract Poll"
                                                                }
                                                            ],
                                                            "id": 569,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "843:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": "address"
                                                        },
                                                        "id": 571,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "843:14:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 572,
                                                        "name": "_name",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 525,
                                                        "src": "859:5:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    ],
                                                    "id": 565,
                                                    "name": "PollCreated",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 519,
                                                    "src": "811:11:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (address,uint256,address,string memory)"
                                                    }
                                                },
                                                "id": 573,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "811:54:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 574,
                                            "nodeType": "EmitStatement",
                                            "src": "806:59:1"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 578,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 966,
                                                            "src": "900:3:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 579,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "900:10:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 575,
                                                        "name": "_poll",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 536,
                                                        "src": "876:5:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Poll_$495",
                                                            "typeString": "contract Poll"
                                                        }
                                                    },
                                                    "id": 577,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "transferOwnership",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 927,
                                                    "src": "876:23:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address) external"
                                                    }
                                                },
                                                "id": 580,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "876:35:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 581,
                                            "nodeType": "ExpressionStatement",
                                            "src": "876:35:1"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "components": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 582,
                                                        "name": "pollId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 551,
                                                        "src": "982:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "id": 584,
                                                                "name": "_poll",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 536,
                                                                "src": "998:5:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                                    "typeString": "contract Poll"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                                    "typeString": "contract Poll"
                                                                }
                                                            ],
                                                            "id": 583,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "990:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": "address"
                                                        },
                                                        "id": 585,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "990:14:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "id": 586,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "981:24:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                                                    "typeString": "tuple(uint256,address)"
                                                }
                                            },
                                            "functionReturnParameters": 534,
                                            "id": 587,
                                            "nodeType": "Return",
                                            "src": "974:31:1"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 589,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "createPoll",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 529,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 525,
                                            "name": "_name",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 589,
                                            "src": "532:19:1",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 524,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "532:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 528,
                                            "name": "_options",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 589,
                                            "src": "553:25:1",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                                "typeString": "bytes32[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 526,
                                                    "name": "bytes32",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "553:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "id": 527,
                                                "length": null,
                                                "nodeType": "ArrayTypeName",
                                                "src": "553:9:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                                    "typeString": "bytes32[]"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "531:48:1"
                                },
                                "returnParameters": {
                                    "id": 534,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 531,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 589,
                                            "src": "595:4:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 530,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "595:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 533,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 589,
                                            "src": "601:7:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 532,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "601:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "594:15:1"
                                },
                                "scope": 649,
                                "src": "512:500:1",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 609,
                                    "nodeType": "Block",
                                    "src": "1056:94:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 600,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "id": 595,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 966,
                                                                "src": "1074:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 596,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "1074:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                                {
                                                                    "argumentTypes": null,
                                                                    "id": 598,
                                                                    "name": "poll",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 591,
                                                                    "src": "1096:4:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Poll_$495",
                                                                        "typeString": "contract Poll"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_Poll_$495",
                                                                        "typeString": "contract Poll"
                                                                    }
                                                                ],
                                                                "id": 597,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "1088:7:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": "address"
                                                            },
                                                            "id": 599,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1088:13:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "1074:27:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 594,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "1066:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 601,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1066:36:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 602,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1066:36:1"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "id": 605,
                                                                "name": "poll",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 591,
                                                                "src": "1137:4:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                                    "typeString": "contract Poll"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                                    "typeString": "contract Poll"
                                                                }
                                                            ],
                                                            "id": 604,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1129:7:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": "address"
                                                        },
                                                        "id": 606,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1129:13:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 603,
                                                    "name": "PollClosed",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 523,
                                                    "src": "1118:10:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 607,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1118:25:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 608,
                                            "nodeType": "EmitStatement",
                                            "src": "1113:30:1"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 610,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "pollClosed",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 592,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 591,
                                            "name": "poll",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 610,
                                            "src": "1038:9:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Poll_$495",
                                                "typeString": "contract Poll"
                                            },
                                            "typeName": {
                                                "contractScope": null,
                                                "id": 590,
                                                "name": "Poll",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 495,
                                                "src": "1038:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Poll_$495",
                                                    "typeString": "contract Poll"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1037:11:1"
                                },
                                "returnParameters": {
                                    "id": 593,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1056:0:1"
                                },
                                "scope": 649,
                                "src": "1018:132:1",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 621,
                                    "nodeType": "Block",
                                    "src": "1213:48:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 616,
                                                    "name": "pollByOwners",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 509,
                                                    "src": "1230:12:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                                        "typeString": "mapping(address => uint256[] storage ref)"
                                                    }
                                                },
                                                "id": 619,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 617,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 966,
                                                        "src": "1243:3:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 618,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "1243:10:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1230:24:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                    "typeString": "uint256[] storage ref"
                                                }
                                            },
                                            "functionReturnParameters": 615,
                                            "id": 620,
                                            "nodeType": "Return",
                                            "src": "1223:31:1"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 622,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getMyPolls",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 611,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1175:2:1"
                                },
                                "returnParameters": {
                                    "id": 615,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 614,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 622,
                                            "src": "1198:13:1",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 612,
                                                    "name": "uint",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1198:4:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 613,
                                                "length": null,
                                                "nodeType": "ArrayTypeName",
                                                "src": "1198:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                                    "typeString": "uint256[]"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1197:15:1"
                                },
                                "scope": 649,
                                "src": "1156:105:1",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 638,
                                    "nodeType": "Block",
                                    "src": "1302:72:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 634,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "baseExpression": {
                                                                        "argumentTypes": null,
                                                                        "id": 627,
                                                                        "name": "polls",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 504,
                                                                        "src": "1320:5:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_contract$_Poll_$495_$dyn_storage",
                                                                            "typeString": "contract Poll[] storage ref"
                                                                        }
                                                                    },
                                                                    "id": 629,
                                                                    "indexExpression": {
                                                                        "argumentTypes": null,
                                                                        "id": 628,
                                                                        "name": "pollId",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 624,
                                                                        "src": "1326:6:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "1320:13:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Poll_$495",
                                                                        "typeString": "contract Poll"
                                                                    }
                                                                },
                                                                "id": 630,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "owner",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 876,
                                                                "src": "1320:19:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                                    "typeString": "function () view external returns (address)"
                                                                }
                                                            },
                                                            "id": 631,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1320:21:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "id": 632,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 966,
                                                                "src": "1345:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 633,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "1345:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "1320:35:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 626,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "1312:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 635,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1312:44:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 636,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1312:44:1"
                                        },
                                        {
                                            "id": 637,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "1366:1:1"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 639,
                                "name": "onlyCreator",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 625,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 624,
                                            "name": "pollId",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 639,
                                            "src": "1289:11:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 623,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1289:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1288:13:1"
                                },
                                "src": "1267:107:1",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 647,
                                    "nodeType": "Block",
                                    "src": "1432:36:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 644,
                                                    "name": "polls",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 504,
                                                    "src": "1449:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_contract$_Poll_$495_$dyn_storage",
                                                        "typeString": "contract Poll[] storage ref"
                                                    }
                                                },
                                                "id": 645,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "length",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "1449:12:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 643,
                                            "id": 646,
                                            "nodeType": "Return",
                                            "src": "1442:19:1"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 648,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCount",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 640,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1397:2:1"
                                },
                                "returnParameters": {
                                    "id": 643,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 642,
                                            "name": "count",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 648,
                                            "src": "1420:10:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 641,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1420:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1419:12:1"
                                },
                                "scope": 649,
                                "src": "1380:88:1",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            }
                        ],
                        "scope": 650,
                        "src": "238:1232:1"
                    }
                ],
                "src": "0:1470:1"
            },
            "id": 1
        },
        "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol": {
            "ast": {
                "absolutePath": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Claimable.sol",
                "exportedSymbols": {
                    "Claimable": [
                        842
                    ]
                },
                "id": 843,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 651,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.5",
                            ".16"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:25:2"
                    },
                    {
                        "absolutePath": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol",
                        "file": "./Ownable.sol",
                        "id": 652,
                        "nodeType": "ImportDirective",
                        "scope": 843,
                        "sourceUnit": 952,
                        "src": "29:23:2",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "baseContracts": [
                            {
                                "arguments": null,
                                "baseName": {
                                    "contractScope": null,
                                    "id": 653,
                                    "name": "Ownable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 951,
                                    "src": "570:7:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Ownable_$951",
                                        "typeString": "contract Ownable"
                                    }
                                },
                                "id": 654,
                                "nodeType": "InheritanceSpecifier",
                                "src": "570:7:2"
                            }
                        ],
                        "contractDependencies": [
                            951
                        ],
                        "contractKind": "contract",
                        "documentation": "@title Claimable\n@dev The claimable contract allows the owner to specify addresses who can claim the ownership of this contract,  \nafter a specified time.\nThis is a safe-guard should the owner ever lose access to their keys. \n\n* A claimable contract with an expiration date defined, but no claimers specified, can be claimed by anyone once the time is expired.\nThe owner can change this time periodically, to ensure ownership of the contract while the key is safe.",
                        "fullyImplemented": true,
                        "id": 842,
                        "linearizedBaseContracts": [
                            842,
                            951
                        ],
                        "name": "Claimable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "id": 658,
                                "name": "claimers",
                                "nodeType": "VariableDeclaration",
                                "scope": 842,
                                "src": "587:42:2",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                },
                                "typeName": {
                                    "id": 657,
                                    "keyType": {
                                        "id": 655,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "596:7:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "587:25:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                    },
                                    "valueType": {
                                        "id": 656,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "607:4:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    }
                                },
                                "value": null,
                                "visibility": "private"
                            },
                            {
                                "constant": false,
                                "id": 660,
                                "name": "expirationTime",
                                "nodeType": "VariableDeclaration",
                                "scope": 842,
                                "src": "688:27:2",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 659,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "688:4:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": null,
                                "visibility": "private"
                            },
                            {
                                "anonymous": false,
                                "documentation": "Throw event to inform listeners of what is happening",
                                "id": 664,
                                "name": "ClaimerAdded",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 663,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 662,
                                            "indexed": true,
                                            "name": "claimer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 664,
                                            "src": "878:23:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 661,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "878:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "876:27:2"
                                },
                                "src": "857:47:2"
                            },
                            {
                                "anonymous": false,
                                "documentation": null,
                                "id": 668,
                                "name": "ClaimerRemoved",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 667,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 666,
                                            "indexed": true,
                                            "name": "claimer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 668,
                                            "src": "933:23:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 665,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "933:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "931:27:2"
                                },
                                "src": "910:49:2"
                            },
                            {
                                "anonymous": false,
                                "documentation": null,
                                "id": 674,
                                "name": "ExpirationUpdated",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 673,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 670,
                                            "indexed": false,
                                            "name": "oldExpiration",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 674,
                                            "src": "991:18:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 669,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "991:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 672,
                                            "indexed": false,
                                            "name": "newExpiration",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 674,
                                            "src": "1011:18:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 671,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1011:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "989:42:2"
                                },
                                "src": "965:67:2"
                            },
                            {
                                "body": {
                                    "id": 698,
                                    "nodeType": "Block",
                                    "src": "1223:172:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 685,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "1242:20:2",
                                                        "subExpression": {
                                                            "argumentTypes": null,
                                                            "baseExpression": {
                                                                "argumentTypes": null,
                                                                "id": 682,
                                                                "name": "claimers",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 658,
                                                                "src": "1244:8:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                                    "typeString": "mapping(address => bool)"
                                                                }
                                                            },
                                                            "id": 684,
                                                            "indexExpression": {
                                                                "argumentTypes": null,
                                                                "id": 683,
                                                                "name": "_claimer",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 676,
                                                                "src": "1253:8:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "1244:18:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 681,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "1234:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 686,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1234:30:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 687,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1234:30:2"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 692,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 688,
                                                        "name": "claimers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 658,
                                                        "src": "1323:8:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 690,
                                                    "indexExpression": {
                                                        "argumentTypes": null,
                                                        "id": 689,
                                                        "name": "_claimer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 676,
                                                        "src": "1332:8:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1323:18:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 691,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1344:4:2",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "1323:25:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 693,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1323:25:2"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 695,
                                                        "name": "_claimer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 676,
                                                        "src": "1378:8:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 694,
                                                    "name": "ClaimerAdded",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 664,
                                                    "src": "1364:12:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 696,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1364:23:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 697,
                                            "nodeType": "EmitStatement",
                                            "src": "1359:28:2"
                                        }
                                    ]
                                },
                                "documentation": "@notice Adds a new claimer to the contract\n@param _claimer address of the claimer to be added",
                                "id": 699,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 679,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 678,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 885,
                                            "src": "1213:9:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1213:9:2"
                                    }
                                ],
                                "name": "addClaimer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 677,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 676,
                                            "name": "_claimer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 699,
                                            "src": "1188:16:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 675,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1188:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1187:18:2"
                                },
                                "returnParameters": {
                                    "id": 680,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1223:0:2"
                                },
                                "scope": 842,
                                "src": "1168:227:2",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 722,
                                    "nodeType": "Block",
                                    "src": "1592:155:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 707,
                                                            "name": "claimers",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 658,
                                                            "src": "1611:8:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                                "typeString": "mapping(address => bool)"
                                                            }
                                                        },
                                                        "id": 709,
                                                        "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 708,
                                                            "name": "_claimer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 701,
                                                            "src": "1620:8:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "1611:18:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 706,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "1603:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 710,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1603:28:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 711,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1603:28:2"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 716,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 712,
                                                        "name": "claimers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 658,
                                                        "src": "1673:8:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 714,
                                                    "indexExpression": {
                                                        "argumentTypes": null,
                                                        "id": 713,
                                                        "name": "_claimer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 701,
                                                        "src": "1682:8:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1673:18:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 715,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1694:5:2",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "1673:26:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 717,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1673:26:2"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 719,
                                                        "name": "_claimer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 701,
                                                        "src": "1730:8:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 718,
                                                    "name": "ClaimerRemoved",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 668,
                                                    "src": "1715:14:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 720,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1715:24:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 721,
                                            "nodeType": "EmitStatement",
                                            "src": "1710:29:2"
                                        }
                                    ]
                                },
                                "documentation": "@notice Removes a claimer from the contract\n@param _claimer address of the claimer to be removed",
                                "id": 723,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 704,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 703,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 885,
                                            "src": "1582:9:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1582:9:2"
                                    }
                                ],
                                "name": "removeClaimer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 702,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 701,
                                            "name": "_claimer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 723,
                                            "src": "1557:16:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 700,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1557:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1556:18:2"
                                },
                                "returnParameters": {
                                    "id": 705,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1592:0:2"
                                },
                                "scope": 842,
                                "src": "1534:213:2",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 734,
                                    "nodeType": "Block",
                                    "src": "2044:44:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 730,
                                                    "name": "claimers",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 658,
                                                    "src": "2062:8:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                        "typeString": "mapping(address => bool)"
                                                    }
                                                },
                                                "id": 732,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 731,
                                                    "name": "_claimer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 725,
                                                    "src": "2071:8:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2062:18:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 729,
                                            "id": 733,
                                            "nodeType": "Return",
                                            "src": "2055:25:2"
                                        }
                                    ]
                                },
                                "documentation": "@notice returns true if the caller has been added as claimer on this contract\n@param _claimer address to verify\n@return true if the caller has been added as claimer, false, otherwise",
                                "id": 735,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isClaimer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 726,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 725,
                                            "name": "_claimer",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 735,
                                            "src": "1999:16:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 724,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1999:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1998:18:2"
                                },
                                "returnParameters": {
                                    "id": 729,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 728,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 735,
                                            "src": "2038:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 727,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2038:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2037:6:2"
                                },
                                "scope": 842,
                                "src": "1980:108:2",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 755,
                                    "nodeType": "Block",
                                    "src": "2353:166:2",
                                    "statements": [
                                        {
                                            "assignments": [
                                                743
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 743,
                                                    "name": "oldExpiration",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 755,
                                                    "src": "2364:18:2",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 742,
                                                        "name": "uint",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2364:4:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 745,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "id": 744,
                                                "name": "expirationTime",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 660,
                                                "src": "2385:14:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "2364:35:2"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 748,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 746,
                                                    "name": "expirationTime",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 660,
                                                    "src": "2412:14:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 747,
                                                    "name": "_expirationTime",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 737,
                                                    "src": "2429:15:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2412:32:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 749,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2412:32:2"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 751,
                                                        "name": "oldExpiration",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 743,
                                                        "src": "2480:13:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 752,
                                                        "name": "_expirationTime",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 737,
                                                        "src": "2495:15:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 750,
                                                    "name": "ExpirationUpdated",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 674,
                                                    "src": "2462:17:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                                        "typeString": "function (uint256,uint256)"
                                                    }
                                                },
                                                "id": 753,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2462:49:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 754,
                                            "nodeType": "EmitStatement",
                                            "src": "2457:54:2"
                                        }
                                    ]
                                },
                                "documentation": "@notice allows the owner to set a new expiration time to extend the ownership of this contract\n@param _expirationTime the new expiration time for this contract",
                                "id": 756,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 740,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 739,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 885,
                                            "src": "2343:9:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2343:9:2"
                                    }
                                ],
                                "name": "setExpirationTime",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 738,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 737,
                                            "name": "_expirationTime",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 756,
                                            "src": "2314:20:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 736,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2314:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2313:22:2"
                                },
                                "returnParameters": {
                                    "id": 741,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2353:0:2"
                                },
                                "scope": 842,
                                "src": "2287:232:2",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 763,
                                    "nodeType": "Block",
                                    "src": "2717:40:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 761,
                                                "name": "expirationTime",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 660,
                                                "src": "2735:14:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 760,
                                            "id": 762,
                                            "nodeType": "Return",
                                            "src": "2728:21:2"
                                        }
                                    ]
                                },
                                "documentation": "@notice Gets the current expiration time set in this contract\n@return uint with the expiration time",
                                "id": 764,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getExpirationTime",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 757,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2687:2:2"
                                },
                                "returnParameters": {
                                    "id": 760,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 759,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 764,
                                            "src": "2711:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 758,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2711:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2710:6:2"
                                },
                                "scope": 842,
                                "src": "2661:96:2",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 791,
                                    "nodeType": "Block",
                                    "src": "2969:168:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "id": 769,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 966,
                                                                    "src": "2998:3:2",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 770,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": null,
                                                                "src": "2998:10:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            ],
                                                            "id": 768,
                                                            "name": "isClaimer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 735,
                                                            "src": "2988:9:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                                                "typeString": "function (address) view returns (bool)"
                                                            }
                                                        },
                                                        "id": 771,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2988:21:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 767,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "2980:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 772,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2980:30:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 773,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2980:30:2"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 777,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "id": 775,
                                                            "name": "now",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 968,
                                                            "src": "3029:3:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "id": 776,
                                                            "name": "expirationTime",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 660,
                                                            "src": "3035:14:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "3029:20:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 774,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "3021:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 778,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3021:29:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 779,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3021:29:2"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 783,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "3069:10:2",
                                                        "subExpression": {
                                                            "argumentTypes": null,
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 781,
                                                                "name": "isOwner",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 896,
                                                                "src": "3070:7:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                                    "typeString": "function () view returns (bool)"
                                                                }
                                                            },
                                                            "id": 782,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3070:9:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 780,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "3061:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 784,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3061:19:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 785,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3061:19:2"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 787,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 966,
                                                            "src": "3112:3:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 788,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "3112:10:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 786,
                                                    "name": "_transferOwnership",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 950,
                                                    "src": "3093:18:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 789,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3093:30:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 790,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3093:30:2"
                                        }
                                    ]
                                },
                                "documentation": "@notice Claim ownership of the contract, once the max inactive time is reached. \nOnly addresses in claimers can claim, unless the array is empty.",
                                "id": 792,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "claim",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 765,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2959:2:2"
                                },
                                "returnParameters": {
                                    "id": 766,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2969:0:2"
                                },
                                "scope": 842,
                                "src": "2945:192:2",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 813,
                                    "nodeType": "Block",
                                    "src": "3455:83:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "components": [
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "id": 802,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 966,
                                                                    "src": "3484:3:2",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 803,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": null,
                                                                "src": "3484:10:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            ],
                                                            "id": 801,
                                                            "name": "isClaimer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 735,
                                                            "src": "3474:9:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                                                "typeString": "function (address) view returns (bool)"
                                                            }
                                                        },
                                                        "id": 804,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3474:21:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 807,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "id": 805,
                                                            "name": "now",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 968,
                                                            "src": "3497:3:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "id": 806,
                                                            "name": "expirationTime",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 660,
                                                            "src": "3503:14:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "3497:20:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 810,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "3519:10:2",
                                                        "subExpression": {
                                                            "argumentTypes": null,
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 808,
                                                                "name": "isOwner",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 896,
                                                                "src": "3520:7:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                                    "typeString": "function () view returns (bool)"
                                                                }
                                                            },
                                                            "id": 809,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3520:9:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "id": 811,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "3473:57:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$",
                                                    "typeString": "tuple(bool,bool,bool)"
                                                }
                                            },
                                            "functionReturnParameters": 800,
                                            "id": 812,
                                            "nodeType": "Return",
                                            "src": "3466:64:2"
                                        }
                                    ]
                                },
                                "documentation": "@notice Checks if the expiration date is passed and contract can be claimed.\n@dev The contract is claimable when the 3 results are true.\n@return bool: is a claimer, bool: is expired, bool: is not owner",
                                "id": 814,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isClaimable",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 793,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3413:2:2"
                                },
                                "returnParameters": {
                                    "id": 800,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 795,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 814,
                                            "src": "3437:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 794,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3437:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 797,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 814,
                                            "src": "3443:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 796,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3443:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 799,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 814,
                                            "src": "3449:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 798,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3449:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3436:18:2"
                                },
                                "scope": 842,
                                "src": "3393:145:2",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 832,
                                    "nodeType": "Block",
                                    "src": "3838:74:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "components": [
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 823,
                                                            "name": "owner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 876,
                                                            "src": "3857:5:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                "typeString": "function () view returns (address)"
                                                            }
                                                        },
                                                        "id": 824,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3857:7:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 825,
                                                        "name": "expirationTime",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 660,
                                                        "src": "3866:14:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "id": 827,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 966,
                                                                    "src": "3892:3:2",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 828,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": null,
                                                                "src": "3892:10:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            ],
                                                            "id": 826,
                                                            "name": "isClaimer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 735,
                                                            "src": "3882:9:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                                                "typeString": "function (address) view returns (bool)"
                                                            }
                                                        },
                                                        "id": 829,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3882:21:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "id": 830,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "3856:48:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_bool_$",
                                                    "typeString": "tuple(address,uint256,bool)"
                                                }
                                            },
                                            "functionReturnParameters": 822,
                                            "id": 831,
                                            "nodeType": "Return",
                                            "src": "3849:55:2"
                                        }
                                    ]
                                },
                                "documentation": "@notice returns the owner of this contract, the expiration date and if the caller is one of the claimers\n@return (address: owner of this contract, uint: the expiration date, bool: is caller a claimers?)",
                                "id": 833,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "read",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 815,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3793:2:2"
                                },
                                "returnParameters": {
                                    "id": 822,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 817,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 833,
                                            "src": "3817:7:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 816,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3817:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 819,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 833,
                                            "src": "3826:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 818,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3826:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 821,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 833,
                                            "src": "3832:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 820,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3832:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3816:21:2"
                                },
                                "scope": 842,
                                "src": "3780:132:2",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 840,
                                    "nodeType": "Block",
                                    "src": "3967:29:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 838,
                                                "name": "now",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 968,
                                                "src": "3985:3:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 837,
                                            "id": 839,
                                            "nodeType": "Return",
                                            "src": "3978:10:2"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 841,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "debugnow",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 834,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3937:2:2"
                                },
                                "returnParameters": {
                                    "id": 837,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 836,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 841,
                                            "src": "3961:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 835,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3961:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3960:6:2"
                                },
                                "scope": 842,
                                "src": "3920:76:2",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            }
                        ],
                        "scope": 843,
                        "src": "548:3451:2"
                    }
                ],
                "src": "0:3999:2"
            },
            "id": 2
        },
        "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol": {
            "ast": {
                "absolutePath": "/Users/gmussi/git/solidity-voting/node_modules/@gmussi-contracts/gmussi-claimable/contracts/Ownable.sol",
                "exportedSymbols": {
                    "Ownable": [
                        951
                    ]
                },
                "id": 952,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 844,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.5",
                            ".16"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:25:3"
                    },
                    {
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
                        "fullyImplemented": true,
                        "id": 951,
                        "linearizedBaseContracts": [
                            951
                        ],
                        "name": "Ownable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "id": 846,
                                "name": "_owner",
                                "nodeType": "VariableDeclaration",
                                "scope": 951,
                                "src": "243:22:3",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 845,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "243:7:3",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "value": null,
                                "visibility": "private"
                            },
                            {
                                "anonymous": false,
                                "documentation": null,
                                "id": 852,
                                "name": "OwnershipTransferred",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 851,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 848,
                                            "indexed": true,
                                            "name": "previousOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 852,
                                            "src": "305:29:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 847,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "305:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 850,
                                            "indexed": true,
                                            "name": "newOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 852,
                                            "src": "341:24:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 849,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "341:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "298:72:3"
                                },
                                "src": "272:99:3"
                            },
                            {
                                "body": {
                                    "id": 867,
                                    "nodeType": "Block",
                                    "src": "517:84:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 858,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 855,
                                                    "name": "_owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 846,
                                                    "src": "524:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 856,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 966,
                                                        "src": "533:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 857,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "533:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "524:19:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 859,
                                            "nodeType": "ExpressionStatement",
                                            "src": "524:19:3"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "hexValue": "30",
                                                                "id": 862,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "584:1:3",
                                                                "subdenomination": null,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                }
                                                            ],
                                                            "id": 861,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "576:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": "address"
                                                        },
                                                        "id": 863,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "576:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 864,
                                                        "name": "_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 846,
                                                        "src": "588:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 860,
                                                    "name": "OwnershipTransferred",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 852,
                                                    "src": "555:20:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 865,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "555:40:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 866,
                                            "nodeType": "EmitStatement",
                                            "src": "550:45:3"
                                        }
                                    ]
                                },
                                "documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.",
                                "id": 868,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 853,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "505:2:3"
                                },
                                "returnParameters": {
                                    "id": 854,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "517:0:3"
                                },
                                "scope": 951,
                                "src": "494:107:3",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 875,
                                    "nodeType": "Block",
                                    "src": "705:26:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 873,
                                                "name": "_owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 846,
                                                "src": "719:6:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "functionReturnParameters": 872,
                                            "id": 874,
                                            "nodeType": "Return",
                                            "src": "712:13:3"
                                        }
                                    ]
                                },
                                "documentation": "@return the address of the owner.",
                                "id": 876,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "owner",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 869,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "673:2:3"
                                },
                                "returnParameters": {
                                    "id": 872,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 871,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 876,
                                            "src": "696:7:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 870,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "696:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "695:9:3"
                                },
                                "scope": 951,
                                "src": "659:72:3",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 884,
                                    "nodeType": "Block",
                                    "src": "835:39:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 879,
                                                            "name": "isOwner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 896,
                                                            "src": "850:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                                                "typeString": "function () view returns (bool)"
                                                            }
                                                        },
                                                        "id": 880,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "850:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 878,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "842:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 881,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "842:18:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 882,
                                            "nodeType": "ExpressionStatement",
                                            "src": "842:18:3"
                                        },
                                        {
                                            "id": 883,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "867:1:3"
                                        }
                                    ]
                                },
                                "documentation": "@dev Throws if called by any account other than the owner.",
                                "id": 885,
                                "name": "onlyOwner",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 877,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "832:2:3"
                                },
                                "src": "814:60:3",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 895,
                                    "nodeType": "Block",
                                    "src": "1002:40:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 893,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 890,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 966,
                                                        "src": "1016:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 891,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "1016:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "id": 892,
                                                    "name": "_owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 846,
                                                    "src": "1030:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1016:20:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 889,
                                            "id": 894,
                                            "nodeType": "Return",
                                            "src": "1009:27:3"
                                        }
                                    ]
                                },
                                "documentation": "@return true if `msg.sender` is the owner of the contract.",
                                "id": 896,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isOwner",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 886,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "973:2:3"
                                },
                                "returnParameters": {
                                    "id": 889,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 888,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 896,
                                            "src": "996:4:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 887,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "996:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "995:6:3"
                                },
                                "scope": 951,
                                "src": "957:85:3",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 914,
                                    "nodeType": "Block",
                                    "src": "1355:84:3",
                                    "statements": [
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 902,
                                                        "name": "_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 846,
                                                        "src": "1388:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "hexValue": "30",
                                                                "id": 904,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "1404:1:3",
                                                                "subdenomination": null,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                }
                                                            ],
                                                            "id": 903,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1396:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": "address"
                                                        },
                                                        "id": 905,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1396:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 901,
                                                    "name": "OwnershipTransferred",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 852,
                                                    "src": "1367:20:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 906,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1367:40:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 907,
                                            "nodeType": "EmitStatement",
                                            "src": "1362:45:3"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 912,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 908,
                                                    "name": "_owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 846,
                                                    "src": "1414:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                        {
                                                            "argumentTypes": null,
                                                            "hexValue": "30",
                                                            "id": 910,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1431:1:3",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 909,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1423:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": "address"
                                                    },
                                                    "id": 911,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1423:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "1414:19:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 913,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1414:19:3"
                                        }
                                    ]
                                },
                                "documentation": "@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.",
                                "id": 915,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 899,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 898,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 885,
                                            "src": "1345:9:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1345:9:3"
                                    }
                                ],
                                "name": "renounceOwnership",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 897,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1335:2:3"
                                },
                                "returnParameters": {
                                    "id": 900,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1355:0:3"
                                },
                                "scope": 951,
                                "src": "1309:130:3",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 926,
                                    "nodeType": "Block",
                                    "src": "1665:41:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 923,
                                                        "name": "newOwner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 917,
                                                        "src": "1691:8:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 922,
                                                    "name": "_transferOwnership",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 950,
                                                    "src": "1672:18:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 924,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1672:28:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 925,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1672:28:3"
                                        }
                                    ]
                                },
                                "documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
                                "id": 927,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 920,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 919,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 885,
                                            "src": "1655:9:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1655:9:3"
                                    }
                                ],
                                "name": "transferOwnership",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 918,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 917,
                                            "name": "newOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 927,
                                            "src": "1630:16:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 916,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1630:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1629:18:3"
                                },
                                "returnParameters": {
                                    "id": 921,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1665:0:3"
                                },
                                "scope": 951,
                                "src": "1603:103:3",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 949,
                                    "nodeType": "Block",
                                    "src": "1898:118:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 937,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "id": 933,
                                                            "name": "newOwner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 929,
                                                            "src": "1913:8:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                                {
                                                                    "argumentTypes": null,
                                                                    "hexValue": "30",
                                                                    "id": 935,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "1933:1:3",
                                                                    "subdenomination": null,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 934,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "1925:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": "address"
                                                            },
                                                            "id": 936,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1925:10:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "1913:22:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 932,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        969,
                                                        970
                                                    ],
                                                    "referencedDeclaration": 969,
                                                    "src": "1905:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 938,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1905:31:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 939,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1905:31:3"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 941,
                                                        "name": "_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 846,
                                                        "src": "1969:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 942,
                                                        "name": "newOwner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 929,
                                                        "src": "1977:8:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 940,
                                                    "name": "OwnershipTransferred",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 852,
                                                    "src": "1948:20:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 943,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1948:38:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 944,
                                            "nodeType": "EmitStatement",
                                            "src": "1943:43:3"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 947,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 945,
                                                    "name": "_owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 846,
                                                    "src": "1993:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 946,
                                                    "name": "newOwner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 929,
                                                    "src": "2002:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1993:17:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 948,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1993:17:3"
                                        }
                                    ]
                                },
                                "documentation": "@dev Transfers control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
                                "id": 950,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_transferOwnership",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 930,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 929,
                                            "name": "newOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 950,
                                            "src": "1871:16:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 928,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1871:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1870:18:3"
                                },
                                "returnParameters": {
                                    "id": 931,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1898:0:3"
                                },
                                "scope": 951,
                                "src": "1843:173:3",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 952,
                        "src": "220:1805:3"
                    }
                ],
                "src": "0:2027:3"
            },
            "id": 3
        }
    }
}